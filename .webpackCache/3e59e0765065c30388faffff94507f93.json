{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApolloServerPluginCacheControlDisabled = exports.ApolloServerPluginCacheControl = void 0;\nconst graphql_1 = require(\"graphql\");\nconst cachePolicy_1 = require(\"../../cachePolicy\");\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nfunction ApolloServerPluginCacheControl(options = Object.create(null)) {\n  const typeAnnotationCache = new lru_cache_1.default();\n  const fieldAnnotationCache = new lru_cache_1.default();\n  function memoizedCacheAnnotationFromType(t) {\n    const existing = typeAnnotationCache.get(t);\n    if (existing) {\n      return existing;\n    }\n    const annotation = cacheAnnotationFromType(t);\n    typeAnnotationCache.set(t, annotation);\n    return annotation;\n  }\n  function memoizedCacheAnnotationFromField(field) {\n    const existing = fieldAnnotationCache.get(field);\n    if (existing) {\n      return existing;\n    }\n    const annotation = cacheAnnotationFromField(field);\n    fieldAnnotationCache.set(field, annotation);\n    return annotation;\n  }\n  return {\n    __internal_plugin_id__() {\n      return 'CacheControl';\n    },\n    async serverWillStart({\n      schema\n    }) {\n      typeAnnotationCache.max = Object.values(schema.getTypeMap()).filter(graphql_1.isCompositeType).length;\n      fieldAnnotationCache.max = Object.values(schema.getTypeMap()).filter(graphql_1.isObjectType).flatMap(t => Object.values(t.getFields())).length + Object.values(schema.getTypeMap()).filter(graphql_1.isInterfaceType).flatMap(t => Object.values(t.getFields())).length;\n      return undefined;\n    },\n    async requestDidStart(requestContext) {\n      var _a, _b;\n      const defaultMaxAge = (_a = options.defaultMaxAge) !== null && _a !== void 0 ? _a : 0;\n      const calculateHttpHeaders = (_b = options.calculateHttpHeaders) !== null && _b !== void 0 ? _b : true;\n      const {\n        __testing__cacheHints\n      } = options;\n      return {\n        async executionDidStart() {\n          if (isRestricted(requestContext.overallCachePolicy)) {\n            const fakeFieldPolicy = (0, cachePolicy_1.newCachePolicy)();\n            return {\n              willResolveField({\n                info\n              }) {\n                info.cacheControl = {\n                  setCacheHint: dynamicHint => {\n                    fakeFieldPolicy.replace(dynamicHint);\n                  },\n                  cacheHint: fakeFieldPolicy,\n                  cacheHintFromType: memoizedCacheAnnotationFromType\n                };\n              }\n            };\n          }\n          return {\n            willResolveField({\n              info\n            }) {\n              const fieldPolicy = (0, cachePolicy_1.newCachePolicy)();\n              let inheritMaxAge = false;\n              const targetType = (0, graphql_1.getNamedType)(info.returnType);\n              if ((0, graphql_1.isCompositeType)(targetType)) {\n                const typeAnnotation = memoizedCacheAnnotationFromType(targetType);\n                fieldPolicy.replace(typeAnnotation);\n                inheritMaxAge = !!typeAnnotation.inheritMaxAge;\n              }\n              const fieldAnnotation = memoizedCacheAnnotationFromField(info.parentType.getFields()[info.fieldName]);\n              if (fieldAnnotation.inheritMaxAge && fieldPolicy.maxAge === undefined) {\n                inheritMaxAge = true;\n                if (fieldAnnotation.scope) {\n                  fieldPolicy.replace({\n                    scope: fieldAnnotation.scope\n                  });\n                }\n              } else {\n                fieldPolicy.replace(fieldAnnotation);\n              }\n              info.cacheControl = {\n                setCacheHint: dynamicHint => {\n                  fieldPolicy.replace(dynamicHint);\n                },\n                cacheHint: fieldPolicy,\n                cacheHintFromType: memoizedCacheAnnotationFromType\n              };\n              return () => {\n                if (fieldPolicy.maxAge === undefined && ((0, graphql_1.isCompositeType)(targetType) && !inheritMaxAge || !info.path.prev)) {\n                  fieldPolicy.restrict({\n                    maxAge: defaultMaxAge\n                  });\n                }\n                if (__testing__cacheHints && isRestricted(fieldPolicy)) {\n                  const path = (0, graphql_1.responsePathAsArray)(info.path).join('.');\n                  if (__testing__cacheHints.has(path)) {\n                    throw Error(\"shouldn't happen: addHint should only be called once per path\");\n                  }\n                  __testing__cacheHints.set(path, {\n                    maxAge: fieldPolicy.maxAge,\n                    scope: fieldPolicy.scope\n                  });\n                }\n                requestContext.overallCachePolicy.restrict(fieldPolicy);\n              };\n            }\n          };\n        },\n        async willSendResponse(requestContext) {\n          const {\n            response,\n            overallCachePolicy\n          } = requestContext;\n          const policyIfCacheable = overallCachePolicy.policyIfCacheable();\n          if (calculateHttpHeaders && policyIfCacheable && !response.errors && response.http) {\n            response.http.headers.set('Cache-Control', `max-age=${policyIfCacheable.maxAge}, ${policyIfCacheable.scope.toLowerCase()}`);\n          }\n        }\n      };\n    }\n  };\n}\nexports.ApolloServerPluginCacheControl = ApolloServerPluginCacheControl;\nfunction cacheAnnotationFromDirectives(directives) {\n  var _a, _b, _c;\n  if (!directives) return undefined;\n  const cacheControlDirective = directives.find(directive => directive.name.value === 'cacheControl');\n  if (!cacheControlDirective) return undefined;\n  if (!cacheControlDirective.arguments) return undefined;\n  const maxAgeArgument = cacheControlDirective.arguments.find(argument => argument.name.value === 'maxAge');\n  const scopeArgument = cacheControlDirective.arguments.find(argument => argument.name.value === 'scope');\n  const inheritMaxAgeArgument = cacheControlDirective.arguments.find(argument => argument.name.value === 'inheritMaxAge');\n  const scope = ((_a = scopeArgument === null || scopeArgument === void 0 ? void 0 : scopeArgument.value) === null || _a === void 0 ? void 0 : _a.kind) === 'EnumValue' ? scopeArgument.value.value : undefined;\n  if (((_b = inheritMaxAgeArgument === null || inheritMaxAgeArgument === void 0 ? void 0 : inheritMaxAgeArgument.value) === null || _b === void 0 ? void 0 : _b.kind) === 'BooleanValue' && inheritMaxAgeArgument.value.value) {\n    return {\n      inheritMaxAge: true,\n      scope\n    };\n  }\n  return {\n    maxAge: ((_c = maxAgeArgument === null || maxAgeArgument === void 0 ? void 0 : maxAgeArgument.value) === null || _c === void 0 ? void 0 : _c.kind) === 'IntValue' ? parseInt(maxAgeArgument.value.value) : undefined,\n    scope\n  };\n}\nfunction cacheAnnotationFromType(t) {\n  if (t.astNode) {\n    const hint = cacheAnnotationFromDirectives(t.astNode.directives);\n    if (hint) {\n      return hint;\n    }\n  }\n  if (t.extensionASTNodes) {\n    for (const node of t.extensionASTNodes) {\n      const hint = cacheAnnotationFromDirectives(node.directives);\n      if (hint) {\n        return hint;\n      }\n    }\n  }\n  return {};\n}\nfunction cacheAnnotationFromField(field) {\n  if (field.astNode) {\n    const hint = cacheAnnotationFromDirectives(field.astNode.directives);\n    if (hint) {\n      return hint;\n    }\n  }\n  return {};\n}\nfunction isRestricted(hint) {\n  return hint.maxAge !== undefined || hint.scope !== undefined;\n}\nfunction ApolloServerPluginCacheControlDisabled() {\n  return {\n    __internal_plugin_id__() {\n      return 'CacheControl';\n    }\n  };\n}\nexports.ApolloServerPluginCacheControlDisabled = ApolloServerPluginCacheControlDisabled;","map":{"version":3,"mappings":";;;;;;;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AAUA,MAAAC,aAAA,GAAAD,OAAA;AAEA,MAAAE,WAAA,GAAAC,eAAA,CAAAH,OAAA;AAqBA,SAAgBI,8BAA8BA,CAC5CC,OAAA,GAAiDC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAEpE,MAAMC,mBAAmB,GAAG,IAAIN,WAAA,CAAAO,OAAQ,EAGrC;EACH,MAAMC,oBAAoB,GAAG,IAAIR,WAAA,CAAAO,OAAQ,EAGtC;EAEH,SAASE,+BAA+BA,CACtCC,CAAuB;IAEvB,MAAMC,QAAQ,GAAGL,mBAAmB,CAACM,GAAG,CAACF,CAAC,CAAC;IAC3C,IAAIC,QAAQ,EAAE;MACZ,OAAOA,QAAQ;;IAEjB,MAAME,UAAU,GAAGC,uBAAuB,CAACJ,CAAC,CAAC;IAC7CJ,mBAAmB,CAACS,GAAG,CAACL,CAAC,EAAEG,UAAU,CAAC;IACtC,OAAOA,UAAU;EACnB;EAEA,SAASG,gCAAgCA,CACvCC,KAAqC;IAErC,MAAMN,QAAQ,GAAGH,oBAAoB,CAACI,GAAG,CAACK,KAAK,CAAC;IAChD,IAAIN,QAAQ,EAAE;MACZ,OAAOA,QAAQ;;IAEjB,MAAME,UAAU,GAAGK,wBAAwB,CAACD,KAAK,CAAC;IAClDT,oBAAoB,CAACO,GAAG,CAACE,KAAK,EAAEJ,UAAU,CAAC;IAC3C,OAAOA,UAAU;EACnB;EAEA,OAAO;IACLM,sBAAsBA,CAAA;MACpB,OAAO,cAAc;IACvB,CAAC;IAED,MAAMC,eAAeA,CAAC;MAAEC;IAAM,CAAE;MAS9Bf,mBAAmB,CAACgB,GAAG,GAAGlB,MAAM,CAACmB,MAAM,CAACF,MAAM,CAACG,UAAU,EAAE,CAAC,CAACC,MAAM,CACjE5B,SAAA,CAAA6B,eAAe,CAChB,CAACC,MAAM;MACRnB,oBAAoB,CAACc,GAAG,GACtBlB,MAAM,CAACmB,MAAM,CAACF,MAAM,CAACG,UAAU,EAAE,CAAC,CAC/BC,MAAM,CAAC5B,SAAA,CAAA+B,YAAY,CAAC,CACpBC,OAAO,CAAEnB,CAAC,IAAKN,MAAM,CAACmB,MAAM,CAACb,CAAC,CAACoB,SAAS,EAAE,CAAC,CAAC,CAACH,MAAM,GACtDvB,MAAM,CAACmB,MAAM,CAACF,MAAM,CAACG,UAAU,EAAE,CAAC,CAC/BC,MAAM,CAAC5B,SAAA,CAAAkC,eAAe,CAAC,CACvBF,OAAO,CAAEnB,CAAC,IAAKN,MAAM,CAACmB,MAAM,CAACb,CAAC,CAACoB,SAAS,EAAE,CAAC,CAAC,CAACH,MAAM;MACxD,OAAOK,SAAS;IAClB,CAAC;IAED,MAAMC,eAAeA,CAACC,cAAc;;MAClC,MAAMC,aAAa,GAAW,CAAAC,EAAA,GAAAjC,OAAO,CAACgC,aAAa,cAAAC,EAAA,cAAAA,EAAA,GAAI,CAAC;MACxD,MAAMC,oBAAoB,GAAG,CAAAC,EAAA,GAAAnC,OAAO,CAACkC,oBAAoB,cAAAC,EAAA,cAAAA,EAAA,GAAI,IAAI;MACjE,MAAM;QAAEC;MAAqB,CAAE,GAAGpC,OAAO;MAEzC,OAAO;QACL,MAAMqC,iBAAiBA,CAAA;UAUrB,IAAIC,YAAY,CAACP,cAAc,CAACQ,kBAAkB,CAAC,EAAE;YAGnD,MAAMC,eAAe,GAAG,IAAA5C,aAAA,CAAA6C,cAAc,GAAE;YACxC,OAAO;cACLC,gBAAgBA,CAAC;gBAAEC;cAAI,CAAE;gBACvBA,IAAI,CAACC,YAAY,GAAG;kBAClBC,YAAY,EAAGC,WAAsB,IAAI;oBACvCN,eAAe,CAACO,OAAO,CAACD,WAAW,CAAC;kBACtC,CAAC;kBACDE,SAAS,EAAER,eAAe;kBAC1BS,iBAAiB,EAAE3C;iBACpB;cACH;aACD;;UAGH,OAAO;YACLoC,gBAAgBA,CAAC;cAAEC;YAAI,CAAE;cACvB,MAAMO,WAAW,GAAG,IAAAtD,aAAA,CAAA6C,cAAc,GAAE;cAEpC,IAAIU,aAAa,GAAG,KAAK;cAKzB,MAAMC,UAAU,GAAG,IAAA1D,SAAA,CAAA2D,YAAY,EAACV,IAAI,CAACW,UAAU,CAAC;cAChD,IAAI,IAAA5D,SAAA,CAAA6B,eAAe,EAAC6B,UAAU,CAAC,EAAE;gBAC/B,MAAMG,cAAc,GAClBjD,+BAA+B,CAAC8C,UAAU,CAAC;gBAC7CF,WAAW,CAACH,OAAO,CAACQ,cAAc,CAAC;gBACnCJ,aAAa,GAAG,CAAC,CAACI,cAAc,CAACJ,aAAa;;cAKhD,MAAMK,eAAe,GAAG3C,gCAAgC,CACtD8B,IAAI,CAACc,UAAU,CAAC9B,SAAS,EAAE,CAACgB,IAAI,CAACe,SAAS,CAAC,CAC5C;cAMD,IACEF,eAAe,CAACL,aAAa,IAC7BD,WAAW,CAACS,MAAM,KAAK9B,SAAS,EAChC;gBACAsB,aAAa,GAAG,IAAI;gBAIpB,IAAIK,eAAe,CAACI,KAAK,EAAE;kBACzBV,WAAW,CAACH,OAAO,CAAC;oBAAEa,KAAK,EAAEJ,eAAe,CAACI;kBAAK,CAAE,CAAC;;eAExD,MAAM;gBACLV,WAAW,CAACH,OAAO,CAACS,eAAe,CAAC;;cAGtCb,IAAI,CAACC,YAAY,GAAG;gBAClBC,YAAY,EAAGC,WAAsB,IAAI;kBACvCI,WAAW,CAACH,OAAO,CAACD,WAAW,CAAC;gBAClC,CAAC;gBACDE,SAAS,EAAEE,WAAW;gBACtBD,iBAAiB,EAAE3C;eACpB;cAMD,OAAO,MAAK;gBAsBV,IACE4C,WAAW,CAACS,MAAM,KAAK9B,SAAS,KAC9B,IAAAnC,SAAA,CAAA6B,eAAe,EAAC6B,UAAU,CAAC,IAAI,CAACD,aAAa,IAC7C,CAACR,IAAI,CAACkB,IAAI,CAACC,IAAI,CAAC,EAClB;kBACAZ,WAAW,CAACa,QAAQ,CAAC;oBAAEJ,MAAM,EAAE3B;kBAAa,CAAE,CAAC;;gBAGjD,IAAII,qBAAqB,IAAIE,YAAY,CAACY,WAAW,CAAC,EAAE;kBACtD,MAAMW,IAAI,GAAG,IAAAnE,SAAA,CAAAsE,mBAAmB,EAACrB,IAAI,CAACkB,IAAI,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;kBACrD,IAAI7B,qBAAqB,CAAC8B,GAAG,CAACL,IAAI,CAAC,EAAE;oBACnC,MAAMM,KAAK,CACT,+DAA+D,CAChE;;kBAEH/B,qBAAqB,CAACxB,GAAG,CAACiD,IAAI,EAAE;oBAC9BF,MAAM,EAAET,WAAW,CAACS,MAAM;oBAC1BC,KAAK,EAAEV,WAAW,CAACU;mBACpB,CAAC;;gBAEJ7B,cAAc,CAACQ,kBAAkB,CAACwB,QAAQ,CAACb,WAAW,CAAC;cACzD,CAAC;YACH;WACD;QACH,CAAC;QAED,MAAMkB,gBAAgBA,CAACrC,cAAc;UACnC,MAAM;YAAEsC,QAAQ;YAAE9B;UAAkB,CAAE,GAAGR,cAAc;UAEvD,MAAMuC,iBAAiB,GAAG/B,kBAAkB,CAAC+B,iBAAiB,EAAE;UAKhE,IACEpC,oBAAoB,IACpBoC,iBAAiB,IACjB,CAACD,QAAQ,CAACE,MAAM,IAChBF,QAAQ,CAACG,IAAI,EACb;YACAH,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC7D,GAAG,CACvB,eAAe,EACf,WACE0D,iBAAiB,CAACX,MACpB,KAAKW,iBAAiB,CAACV,KAAK,CAACc,WAAW,EAAE,EAAE,CAC7C;;QAEL;OACD;IACH;GACD;AACH;AA/NAC,OAAA,CAAA5E,8BAAA,GAAAA,8BAAA;AAiOA,SAAS6E,6BAA6BA,CACpCC,UAAoD;;EAEpD,IAAI,CAACA,UAAU,EAAE,OAAOhD,SAAS;EAEjC,MAAMiD,qBAAqB,GAAGD,UAAU,CAACE,IAAI,CAC1CC,SAAS,IAAKA,SAAS,CAACC,IAAI,CAACC,KAAK,KAAK,cAAc,CACvD;EACD,IAAI,CAACJ,qBAAqB,EAAE,OAAOjD,SAAS;EAE5C,IAAI,CAACiD,qBAAqB,CAACK,SAAS,EAAE,OAAOtD,SAAS;EAEtD,MAAMuD,cAAc,GAAGN,qBAAqB,CAACK,SAAS,CAACJ,IAAI,CACxDM,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,CAACC,KAAK,KAAK,QAAQ,CAC/C;EACD,MAAMI,aAAa,GAAGR,qBAAqB,CAACK,SAAS,CAACJ,IAAI,CACvDM,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,CAACC,KAAK,KAAK,OAAO,CAC9C;EACD,MAAMK,qBAAqB,GAAGT,qBAAqB,CAACK,SAAS,CAACJ,IAAI,CAC/DM,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,CAACC,KAAK,KAAK,eAAe,CACtD;EAED,MAAMtB,KAAK,GACT,EAAA3B,EAAA,GAAAqD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEJ,KAAK,cAAAjD,EAAA,uBAAAA,EAAA,CAAEuD,IAAI,MAAK,WAAW,GACrCF,aAAa,CAACJ,KAAK,CAACA,KAAoB,GACzCrD,SAAS;EAEf,IACE,EAAAM,EAAA,GAAAoD,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEL,KAAK,cAAA/C,EAAA,uBAAAA,EAAA,CAAEqD,IAAI,MAAK,cAAc,IACrDD,qBAAqB,CAACL,KAAK,CAACA,KAAK,EACjC;IAEA,OAAO;MAAE/B,aAAa,EAAE,IAAI;MAAES;IAAK,CAAE;;EAGvC,OAAO;IACLD,MAAM,EACJ,EAAA8B,EAAA,GAAAL,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEF,KAAK,cAAAO,EAAA,uBAAAA,EAAA,CAAED,IAAI,MAAK,UAAU,GACtCE,QAAQ,CAACN,cAAc,CAACF,KAAK,CAACA,KAAK,CAAC,GACpCrD,SAAS;IACf+B;GACD;AACH;AAEA,SAASjD,uBAAuBA,CAACJ,CAAuB;EACtD,IAAIA,CAAC,CAACoF,OAAO,EAAE;IACb,MAAMC,IAAI,GAAGhB,6BAA6B,CAACrE,CAAC,CAACoF,OAAO,CAACd,UAAU,CAAC;IAChE,IAAIe,IAAI,EAAE;MACR,OAAOA,IAAI;;;EAGf,IAAIrF,CAAC,CAACsF,iBAAiB,EAAE;IACvB,KAAK,MAAMC,IAAI,IAAIvF,CAAC,CAACsF,iBAAiB,EAAE;MACtC,MAAMD,IAAI,GAAGhB,6BAA6B,CAACkB,IAAI,CAACjB,UAAU,CAAC;MAC3D,IAAIe,IAAI,EAAE;QACR,OAAOA,IAAI;;;;EAIjB,OAAO,EAAE;AACX;AAEA,SAAS7E,wBAAwBA,CAC/BD,KAAqC;EAErC,IAAIA,KAAK,CAAC6E,OAAO,EAAE;IACjB,MAAMC,IAAI,GAAGhB,6BAA6B,CAAC9D,KAAK,CAAC6E,OAAO,CAACd,UAAU,CAAC;IACpE,IAAIe,IAAI,EAAE;MACR,OAAOA,IAAI;;;EAGf,OAAO,EAAE;AACX;AAEA,SAAStD,YAAYA,CAACsD,IAAe;EACnC,OAAOA,IAAI,CAACjC,MAAM,KAAK9B,SAAS,IAAI+D,IAAI,CAAChC,KAAK,KAAK/B,SAAS;AAC9D;AAIA,SAAgBkE,sCAAsCA,CAAA;EACpD,OAAO;IACL/E,sBAAsBA,CAAA;MACpB,OAAO,cAAc;IACvB;GACD;AACH;AANA2D,OAAA,CAAAoB,sCAAA,GAAAA,sCAAA","names":["graphql_1","require","cachePolicy_1","lru_cache_1","__importDefault","ApolloServerPluginCacheControl","options","Object","create","typeAnnotationCache","default","fieldAnnotationCache","memoizedCacheAnnotationFromType","t","existing","get","annotation","cacheAnnotationFromType","set","memoizedCacheAnnotationFromField","field","cacheAnnotationFromField","__internal_plugin_id__","serverWillStart","schema","max","values","getTypeMap","filter","isCompositeType","length","isObjectType","flatMap","getFields","isInterfaceType","undefined","requestDidStart","requestContext","defaultMaxAge","_a","calculateHttpHeaders","_b","__testing__cacheHints","executionDidStart","isRestricted","overallCachePolicy","fakeFieldPolicy","newCachePolicy","willResolveField","info","cacheControl","setCacheHint","dynamicHint","replace","cacheHint","cacheHintFromType","fieldPolicy","inheritMaxAge","targetType","getNamedType","returnType","typeAnnotation","fieldAnnotation","parentType","fieldName","maxAge","scope","path","prev","restrict","responsePathAsArray","join","has","Error","willSendResponse","response","policyIfCacheable","errors","http","headers","toLowerCase","exports","cacheAnnotationFromDirectives","directives","cacheControlDirective","find","directive","name","value","arguments","maxAgeArgument","argument","scopeArgument","inheritMaxAgeArgument","kind","_c","parseInt","astNode","hint","extensionASTNodes","node","ApolloServerPluginCacheControlDisabled"],"sourceRoot":"","sources":["../../../src/plugin/cacheControl/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}