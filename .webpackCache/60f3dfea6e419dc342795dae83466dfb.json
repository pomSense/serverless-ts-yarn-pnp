{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = undefined;\nexports.default = function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse2.default)(namespace);\n    }\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return (0, _stringify2.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n};\nvar _stringify = require(\"./stringify.js\");\nvar _stringify2 = _interopRequireDefault(_stringify);\nvar _parse = require(\"./parse.js\");\nvar _parse2 = _interopRequireDefault(_parse);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nconst DNS = exports.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nconst URL = exports.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';","map":{"version":3,"names":["name","version","hashfunc","generateUUID","value","namespace","buf","offset","stringToBytes","parse","length","TypeError","bytes","Uint8Array","set","i","stringify","err","DNS","URL","_stringify","require","_stringify2","_interopRequireDefault","_parse","_parse2","obj","__esModule","default","str","unescape","encodeURIComponent","push","charCodeAt","exports"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/uuid-npm-8.3.2-eca0baba53-5575a8a75c.zip/node_modules/uuid/dist/esm-node/v35.js"],"sourcesContent":["import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}"],"mappings":";;;;;;kBAiBe,UAAUA,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAChD,SAASC,YAAYA,CAACC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,EAAE;IACnD,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAGI,aAAa,CAACJ,KAAK,CAAC;IAC9B;IAEA,IAAI,OAAOC,SAAS,KAAK,QAAQ,EAAE;MACjCA,SAAS,GAAG,IAAAI,eAAK,EAACJ,SAAS,CAAC;IAC9B;IAEA,IAAIA,SAAS,CAACK,MAAM,KAAK,EAAE,EAAE;MAC3B,MAAMC,SAAS,CAAC,kEAAkE,CAAC;IACrF,CAAC,CAAC;IACF;IACA;;IAGA,IAAIC,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,GAAGT,KAAK,CAACM,MAAM,CAAC;IAC7CE,KAAK,CAACE,GAAG,CAACT,SAAS,CAAC;IACpBO,KAAK,CAACE,GAAG,CAACV,KAAK,EAAEC,SAAS,CAACK,MAAM,CAAC;IAClCE,KAAK,GAAGV,QAAQ,CAACU,KAAK,CAAC;IACvBA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGX,OAAO;IACpCW,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI;IAEjC,IAAIN,GAAG,EAAE;MACPC,MAAM,GAAGA,MAAM,IAAI,CAAC;MAEpB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;QAC3BT,GAAG,CAACC,MAAM,GAAGQ,CAAC,CAAC,GAAGH,KAAK,CAACG,CAAC,CAAC;MAC5B;MAEA,OAAOT,GAAG;IACZ;IAEA,OAAO,IAAAU,mBAAS,EAACJ,KAAK,CAAC;EACzB,CAAC,CAAC;;EAGF,IAAI;IACFT,YAAY,CAACH,IAAI,GAAGA,IAAI,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOiB,GAAG,EAAE,CAAC,CAAC,CAAC;;EAGjBd,YAAY,CAACe,GAAG,GAAGA,GAAG;EACtBf,YAAY,CAACgB,GAAG,GAAGA,GAAG;EACtB,OAAOhB,YAAY;AACrB,CAAC;AA/DD,IAAAiB,UAAA,GAAAC,OAAA;AAAuC,IAAAC,WAAA,GAAAC,sBAAA,CAAAH,UAAA;AACvC,IAAAI,MAAA,GAAAH,OAAA;AAA+B,IAAAI,OAAA,GAAAF,sBAAA,CAAAC,MAAA;AAAA,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE/B,SAASlB,aAAaA,CAACqB,GAAG,EAAE;EAC1BA,GAAG,GAAGC,QAAQ,CAACC,kBAAkB,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEzC,MAAMjB,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGc,GAAG,CAACnB,MAAM,EAAE,EAAEK,CAAC,EAAE;IACnCH,KAAK,CAACoB,IAAI,CAACH,GAAG,CAACI,UAAU,CAAClB,CAAC,CAAC,CAAC;EAC/B;EAEA,OAAOH,KAAK;AACd;AAEO,MAAMM,GAAG,GAAAgB,OAAA,CAAHhB,GAAG,GAAG,sCAAsC;AAClD,MAAMC,GAAG,GAAAe,OAAA,CAAHf,GAAG,GAAG,sCAAsC"},"metadata":{},"sourceType":"module"}