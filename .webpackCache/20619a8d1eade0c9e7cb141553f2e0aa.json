{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.determineApolloConfig = void 0;\nconst createSHA_1 = __importDefault(require(\"./utils/createSHA\"));\nfunction determineApolloConfig(input) {\n  var _a, _b;\n  const apolloConfig = {};\n  const {\n    APOLLO_KEY,\n    APOLLO_GRAPH_REF,\n    APOLLO_GRAPH_ID,\n    APOLLO_GRAPH_VARIANT\n  } = process.env;\n  if (input === null || input === void 0 ? void 0 : input.key) {\n    apolloConfig.key = input.key;\n  } else if (APOLLO_KEY) {\n    apolloConfig.key = APOLLO_KEY;\n  }\n  if (apolloConfig.key) {\n    apolloConfig.keyHash = (0, createSHA_1.default)('sha512').update(apolloConfig.key).digest('hex');\n  }\n  if (input === null || input === void 0 ? void 0 : input.graphRef) {\n    apolloConfig.graphRef = input.graphRef;\n  } else if (APOLLO_GRAPH_REF) {\n    apolloConfig.graphRef = APOLLO_GRAPH_REF;\n  }\n  const graphId = (_a = input === null || input === void 0 ? void 0 : input.graphId) !== null && _a !== void 0 ? _a : APOLLO_GRAPH_ID;\n  const graphVariant = (_b = input === null || input === void 0 ? void 0 : input.graphVariant) !== null && _b !== void 0 ? _b : APOLLO_GRAPH_VARIANT;\n  if (apolloConfig.graphRef) {\n    if (graphId) {\n      throw new Error('Cannot specify both graph ref and graph ID. Please use ' + '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');\n    }\n    if (graphVariant) {\n      throw new Error('Cannot specify both graph ref and graph variant. Please use ' + '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph variant.');\n    }\n  } else if (graphId) {\n    apolloConfig.graphRef = graphVariant ? `${graphId}@${graphVariant}` : graphId;\n  }\n  return apolloConfig;\n}\nexports.determineApolloConfig = determineApolloConfig;","map":{"version":3,"mappings":";;;;;;;;;;;AACA,MAAAA,WAAA,GAAAC,eAAA,CAAAC,OAAA;AAIA,SAAgBC,qBAAqBA,CACnCC,KAAoC;;EAEpC,MAAMC,YAAY,GAAiB,EAAE;EAErC,MAAM;IACJC,UAAU;IACVC,gBAAgB;IAChBC,eAAe;IACfC;EAAoB,CACrB,GAAGC,OAAO,CAACC,GAAG;EAGf,IAAIP,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,GAAG,EAAE;IACdP,YAAY,CAACO,GAAG,GAAGR,KAAK,CAACQ,GAAG;GAC7B,MAAM,IAAIN,UAAU,EAAE;IACrBD,YAAY,CAACO,GAAG,GAAGN,UAAU;;EAI/B,IAAID,YAAY,CAACO,GAAG,EAAE;IACpBP,YAAY,CAACQ,OAAO,GAAG,IAAAb,WAAA,CAAAc,OAAS,EAAC,QAAQ,CAAC,CACvCC,MAAM,CAACV,YAAY,CAACO,GAAG,CAAC,CACxBI,MAAM,CAAC,KAAK,CAAC;;EAIlB,IAAIZ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,QAAQ,EAAE;IACnBZ,YAAY,CAACY,QAAQ,GAAGb,KAAK,CAACa,QAAQ;GACvC,MAAM,IAAIV,gBAAgB,EAAE;IAC3BF,YAAY,CAACY,QAAQ,GAAGV,gBAAgB;;EAI1C,MAAMW,OAAO,GAAG,CAAAC,EAAA,GAAAf,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,OAAO,cAAAC,EAAA,cAAAA,EAAA,GAAIX,eAAe;EACjD,MAAMY,YAAY,GAAG,CAAAC,EAAA,GAAAjB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgB,YAAY,cAAAC,EAAA,cAAAA,EAAA,GAAIZ,oBAAoB;EAEhE,IAAIJ,YAAY,CAACY,QAAQ,EAAE;IACzB,IAAIC,OAAO,EAAE;MACX,MAAM,IAAII,KAAK,CACb,yDAAyD,GACvD,4EAA4E,CAC/E;;IAEH,IAAIF,YAAY,EAAE;MAChB,MAAM,IAAIE,KAAK,CACb,8DAA8D,GAC5D,iFAAiF,CACpF;;GAEJ,MAAM,IAAIJ,OAAO,EAAE;IAKlBb,YAAY,CAACY,QAAQ,GAAGG,YAAY,GAChC,GAAGF,OAAO,IAAIE,YAAY,EAAE,GAC5BF,OAAO;;EAGb,OAAOb,YAAY;AACrB;AA7DAkB,OAAA,CAAApB,qBAAA,GAAAA,qBAAA","names":["createSHA_1","__importDefault","require","determineApolloConfig","input","apolloConfig","APOLLO_KEY","APOLLO_GRAPH_REF","APOLLO_GRAPH_ID","APOLLO_GRAPH_VARIANT","process","env","key","keyHash","default","update","digest","graphRef","graphId","_a","graphVariant","_b","Error","exports"],"sourceRoot":"","sources":["../src/determineApolloConfig.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}