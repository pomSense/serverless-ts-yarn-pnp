{"ast":null,"code":"\"use strict\";\n\n/**\n * DynamoDB Toolbox: A simple set of tools for working with Amazon DynamoDB\n * @author Jeremy Daly <jeremy@jeremydaly.com>\n * @license MIT\n */\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst validateTypes_1 = __importDefault(require(\"./validateTypes\"));\n// Format item based on attribute defnition\nexports.default = DocumentClient => (attributes, linked, item, include = []) => {\n  // TODO: Support nested maps?\n  // TODO: include alias support?\n  // TODO: Test existence of RegExp inputs\n  // Intialize validate type\n  const validateType = validateTypes_1.default(DocumentClient);\n  return Object.keys(item).reduce((acc, field) => {\n    const link = linked[field] || attributes[field] && attributes[field].alias && linked[attributes[field].alias];\n    if (link) {\n      Object.assign(acc, link.reduce((acc, f, i) => {\n        if (attributes[f].save || attributes[f].hidden || include.length > 0 && !include.includes(f)) return acc;\n        return Object.assign(acc, {\n          [attributes[f].alias || f]: validateType(attributes[f], f, item[field].replace(new RegExp(`^${escapeRegExp(attributes[field].prefix)}`), '').replace(new RegExp(`${escapeRegExp(attributes[field].suffix)}$`), '').split(attributes[field].delimiter || '#')[i])\n        });\n      }, {}));\n    }\n    if (attributes[field] && attributes[field].hidden || include.length > 0 && !include.includes(field)) return acc;\n    // Extract values from sets\n    if (attributes[field] && attributes[field].type === 'set' && Array.isArray(item[field].values)) {\n      item[field] = item[field].values;\n    }\n    return Object.assign(acc, {\n      [attributes[field] && attributes[field].alias || field]: attributes[field] && (attributes[field].prefix || attributes[field].suffix) ? item[field].replace(new RegExp(`^${escapeRegExp(attributes[field].prefix)}`), '').replace(new RegExp(`${escapeRegExp(attributes[field].suffix)}$`), '') : item[field]\n    });\n  }, {});\n};\nfunction escapeRegExp(text) {\n  return text ? text.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&') : '';\n}","map":{"version":3,"names":["__importDefault","undefined","mod","__esModule","Object","defineProperty","exports","value","validateTypes_1","require","default","DocumentClient","attributes","linked","item","include","validateType","keys","reduce","acc","field","link","alias","assign","f","i","save","hidden","length","includes","replace","RegExp","escapeRegExp","prefix","suffix","split","delimiter","type","Array","isArray","values","text"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/dynamodb-toolbox-npm-0.3.5-3ff4bf5328-d75542b529.zip/node_modules/dynamodb-toolbox/dist/lib/formatItem.js"],"sourcesContent":["\"use strict\";\n/**\n * DynamoDB Toolbox: A simple set of tools for working with Amazon DynamoDB\n * @author Jeremy Daly <jeremy@jeremydaly.com>\n * @license MIT\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validateTypes_1 = __importDefault(require(\"./validateTypes\"));\n// Format item based on attribute defnition\nexports.default = (DocumentClient) => (attributes, linked, item, include = []) => {\n    // TODO: Support nested maps?\n    // TODO: include alias support?\n    // TODO: Test existence of RegExp inputs\n    // Intialize validate type\n    const validateType = validateTypes_1.default(DocumentClient);\n    return Object.keys(item).reduce((acc, field) => {\n        const link = linked[field] || attributes[field] && attributes[field].alias && linked[attributes[field].alias];\n        if (link) {\n            Object.assign(acc, link.reduce((acc, f, i) => {\n                if (attributes[f].save || attributes[f].hidden || (include.length > 0 && !include.includes(f)))\n                    return acc;\n                return Object.assign(acc, {\n                    [attributes[f].alias || f]: validateType(attributes[f], f, item[field]\n                        .replace(new RegExp(`^${escapeRegExp(attributes[field].prefix)}`), '')\n                        .replace(new RegExp(`${escapeRegExp(attributes[field].suffix)}$`), '')\n                        .split(attributes[field].delimiter || '#')[i])\n                });\n            }, {}));\n        }\n        if ((attributes[field] && attributes[field].hidden) || (include.length > 0 && !include.includes(field)))\n            return acc;\n        // Extract values from sets\n        if (attributes[field] && attributes[field].type === 'set' && Array.isArray(item[field].values)) {\n            item[field] = item[field].values;\n        }\n        return Object.assign(acc, {\n            [(attributes[field] && attributes[field].alias) || field]: (attributes[field] && (attributes[field].prefix || attributes[field].suffix)\n                ? item[field]\n                    .replace(new RegExp(`^${escapeRegExp(attributes[field].prefix)}`), '')\n                    .replace(new RegExp(`${escapeRegExp(attributes[field].suffix)}$`), '')\n                : item[field])\n        });\n    }, {});\n};\nfunction escapeRegExp(text) {\n    return text ? text.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&') : '';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}