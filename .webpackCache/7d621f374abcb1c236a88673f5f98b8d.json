{"ast":null,"code":"\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst tr46 = require(\"tr46\");\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\nconst failure = Symbol(\"failure\");\nfunction countSymbols(str) {\n  return punycode.ucs2.decode(str).length;\n}\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\nfunction isASCIIAlpha(c) {\n  return c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A;\n}\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || c >= 0x41 && c <= 0x46 || c >= 0x61 && c <= 0x66;\n}\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = \"0\" + hex;\n  }\n  return \"%\" + hex;\n}\nfunction utf8PercentEncode(c) {\n  const buf = new Buffer(c);\n  let str = \"\";\n  for (let i = 0; i < buf.length; ++i) {\n    str += percentEncode(buf[i]);\n  }\n  return str;\n}\nfunction utf8PercentDecode(str) {\n  const input = new Buffer(str);\n  const output = [];\n  for (let i = 0; i < input.length; ++i) {\n    if (input[i] !== 37) {\n      output.push(input[i]);\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\n      i += 2;\n    } else {\n      output.push(input[i]);\n    }\n  }\n  return new Buffer(output).toString();\n}\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\nfunction isPathPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\nconst extraUserinfoPercentEncodeSet = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\nfunction percentEncodeChar(c, encodeSetPredicate) {\n  const cStr = String.fromCodePoint(c);\n  if (encodeSetPredicate(c)) {\n    return utf8PercentEncode(cStr);\n  }\n  return cStr;\n}\nfunction parseIPv4Number(input) {\n  let R = 10;\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n  if (input === \"\") {\n    return 0;\n  }\n  const regex = R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/;\n  if (regex.test(input)) {\n    return failure;\n  }\n  return parseInt(input, R);\n}\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n  if (parts.length > 4) {\n    return input;\n  }\n  const numbers = [];\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return input;\n    }\n    numbers.push(n);\n  }\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n    return failure;\n  }\n  let ipv4 = numbers.pop();\n  let counter = 0;\n  for (const n of numbers) {\n    ipv4 += n * Math.pow(256, 3 - counter);\n    ++counter;\n  }\n  return ipv4;\n}\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = \".\" + output;\n    }\n    n = Math.floor(n / 256);\n  }\n  return output;\n}\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n  input = punycode.ucs2.decode(input);\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n    let value = 0;\n    let length = 0;\n    while (length < 4 && isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n      pointer -= length;\n      if (pieceIndex > 6) {\n        return failure;\n      }\n      let numbersSeen = 0;\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n        if (!isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n        while (isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n        ++numbersSeen;\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n  return address;\n}\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const seqResult = findLongestZeroSequence(address);\n  const compress = seqResult.idx;\n  let ignore0 = false;\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n    output += address[pieceIndex].toString(16);\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n  return output;\n}\nfunction parseHost(input, isSpecialArg) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n  if (!isSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n  const domain = utf8PercentDecode(input);\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\n  if (asciiDomain === null) {\n    return failure;\n  }\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n  const ipv4Host = parseIPv4(asciiDomain);\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n  return asciiDomain;\n}\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n  let output = \"\";\n  const decoded = punycode.ucs2.decode(input);\n  for (let i = 0; i < decoded.length; ++i) {\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n  }\n  return output;\n}\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    maxIdx = currStart;\n    maxLen = currLen;\n  }\n  return {\n    idx: maxIdx,\n    len: maxLen\n  };\n}\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return \"[\" + serializeIPv6(host) + \"]\";\n  }\n  return host;\n}\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n}\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n}\nfunction shortenPath(url) {\n  const path = url.path;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n  path.pop();\n}\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/.test(string);\n}\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n      cannotBeABaseURL: false\n    };\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n  this.state = stateOverride || \"scheme start\";\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n  this.input = punycode.ucs2.decode(this.input);\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[\"parse \" + this.state](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    this.buffer = \"\";\n    if (this.stateOverride) {\n      return false;\n    }\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (isNaN(c)) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n  } else if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (c === 63) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = \"%40\" + this.buffer;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse hostname\"] = URLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    const host = parseHost(this.buffer, isSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" && (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n    const host = parseHost(this.buffer, isSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > Math.pow(2, 16) - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n  return true;\n};\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    if (isNaN(c)) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 63) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (this.input.length - this.pointer - 1 === 0 ||\n      // remaining consists of 0 code points\n      !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 &&\n      // remaining has at least 2 code points\n      !fileOtherwiseCodePoints.has(this.input[this.pointer + 2])) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n      }\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      } else {\n        this.url.host = this.base.host;\n      }\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n      if (this.stateOverride) {\n        return false;\n      }\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== 47) {\n      --this.pointer;\n    }\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        if (this.url.host !== \"\" && this.url.host !== null) {\n          this.parseError = true;\n          this.url.host = \"\";\n        }\n        this.buffer = this.buffer[0] + \":\";\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n        this.parseError = true;\n        this.url.path.shift();\n      }\n    }\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    if (!isNaN(c)) {\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (isNaN(c) || !this.stateOverride && c === 35) {\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n      this.encodingOverride = \"utf-8\";\n    }\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\n    for (let i = 0; i < buffer.length; ++i) {\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E) {\n        this.url.query += percentEncode(buffer[i]);\n      } else {\n        this.url.query += String.fromCodePoint(buffer[i]);\n      }\n    }\n    this.buffer = \"\";\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (isNaN(c)) {// do nothing\n  } else if (c === 0x0) {\n    this.parseError = true;\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\n  }\n  return true;\n};\nfunction serializeURL(url, excludeFragment) {\n  let output = url.scheme + \":\";\n  if (url.host !== null) {\n    output += \"//\";\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += \":\" + url.password;\n      }\n      output += \"@\";\n    }\n    output += serializeHost(url.host);\n    if (url.port !== null) {\n      output += \":\" + url.port;\n    }\n  } else if (url.host === null && url.scheme === \"file\") {\n    output += \"//\";\n  }\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    for (const string of url.path) {\n      output += \"/\" + string;\n    }\n  }\n  if (url.query !== null) {\n    output += \"?\" + url.query;\n  }\n  if (!excludeFragment && url.fragment !== null) {\n    output += \"#\" + url.fragment;\n  }\n  return output;\n}\nfunction serializeOrigin(tuple) {\n  let result = tuple.scheme + \"://\";\n  result += serializeHost(tuple.host);\n  if (tuple.port !== null) {\n    result += \":\" + tuple.port;\n  }\n  return result;\n}\nmodule.exports.serializeURL = serializeURL;\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"gopher\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // spec says \"exercise to the reader\", chrome says \"file://\"\n      return \"file://\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return \"failure\";\n  }\n  return usm.url;\n};\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = \"\";\n  const decoded = punycode.ucs2.decode(username);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\nmodule.exports.setThePassword = function (url, password) {\n  url.password = \"\";\n  const decoded = punycode.ucs2.decode(password);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\nmodule.exports.serializeHost = serializeHost;\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, {\n    baseURL: options.baseURL,\n    encodingOverride: options.encodingOverride\n  });\n};","map":{"version":3,"names":["punycode","require","tr46","specialSchemes","ftp","file","gopher","http","https","ws","wss","failure","Symbol","countSymbols","str","ucs2","decode","length","at","input","idx","c","isNaN","undefined","String","fromCodePoint","isASCIIDigit","isASCIIAlpha","isASCIIAlphanumeric","isASCIIHex","isSingleDot","buffer","toLowerCase","isDoubleDot","isWindowsDriveLetterCodePoints","cp1","cp2","isWindowsDriveLetterString","string","codePointAt","isNormalizedWindowsDriveLetterString","containsForbiddenHostCodePoint","search","containsForbiddenHostCodePointExcludingPercent","isSpecialScheme","scheme","isSpecial","url","defaultPort","percentEncode","hex","toString","toUpperCase","utf8PercentEncode","buf","Buffer","i","utf8PercentDecode","output","push","parseInt","slice","isC0ControlPercentEncode","extraPathPercentEncodeSet","Set","isPathPercentEncode","has","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","parseIPv4Number","R","charAt","substring","regex","test","parseIPv4","parts","split","pop","numbers","part","n","Math","pow","ipv4","counter","serializeIPv4","address","floor","parseIPv6","pieceIndex","compress","pointer","value","numbersSeen","ipv4Piece","number","swaps","temp","serializeIPv6","seqResult","findLongestZeroSequence","ignore0","separator","parseHost","isSpecialArg","parseOpaqueHost","domain","asciiDomain","toASCII","PROCESSING_OPTIONS","NONTRANSITIONAL","ipv4Host","decoded","arr","maxIdx","maxLen","currStart","currLen","len","serializeHost","host","Array","trimControlChars","replace","trimTabAndNewline","shortenPath","path","isNormalizedWindowsDriveLetter","includesCredentials","username","password","cannotHaveAUsernamePasswordPort","cannotBeABaseURL","URLStateMachine","base","encodingOverride","stateOverride","parseError","port","query","fragment","res","state","atFlag","arrFlag","passwordTokenSeenFlag","ret","prototype","parseSchemeStart","parseScheme","parseNoScheme","parseSpecialRelativeOrAuthority","parsePathOrAuthority","parseRelative","parseRelativeSlash","parseSpecialAuthoritySlashes","parseSpecialAuthorityIgnoreSlashes","parseAuthority","codePoint","encodedCodePoints","parseHostName","parsePort","fileOtherwiseCodePoints","parseFile","parseFileSlash","parseFileHost","parsePathStart","parsePath","shift","parseCannotBeABaseURLPath","parseQuery","parseFragment","serializeURL","excludeFragment","serializeOrigin","tuple","result","module","exports","serializeURLOrigin","parseURL","e","basicURLParse","options","usm","baseURL","setTheUsername","setThePassword","serializeInteger","integer"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/whatwg-url-npm-5.0.0-374fb45e60-b8daed4ad3.zip/node_modules/whatwg-url/lib/url-state-machine.js"],"sourcesContent":["\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}