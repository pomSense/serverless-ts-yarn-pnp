{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultSendOperationsAsTrace = void 0;\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst iterateOverTrace_1 = require(\"./iterateOverTrace\");\nconst durationHistogram_1 = require(\"./durationHistogram\");\nfunction defaultSendOperationsAsTrace() {\n  const cache = new lru_cache_1.default({\n    max: Math.pow(2, 20),\n    length: (_val, key) => {\n      return key && Buffer.byteLength(key) || 0;\n    }\n  });\n  return (trace, statsReportKey) => {\n    var _a;\n    const endTimeSeconds = (_a = trace.endTime) === null || _a === void 0 ? void 0 : _a.seconds;\n    if (endTimeSeconds == null) {\n      throw Error('programming error: endTime not set on trace');\n    }\n    const hasErrors = traceHasErrors(trace);\n    const cacheKey = JSON.stringify([statsReportKey, durationHistogram_1.DurationHistogram.durationToBucket(trace.durationNs), Math.floor(endTimeSeconds / 60), hasErrors ? Math.floor(endTimeSeconds / 5) : '']);\n    if (cache.get(cacheKey)) {\n      return false;\n    }\n    cache.set(cacheKey, true);\n    return true;\n  };\n}\nexports.defaultSendOperationsAsTrace = defaultSendOperationsAsTrace;\nfunction traceHasErrors(trace) {\n  let hasErrors = false;\n  function traceNodeStats(node) {\n    var _a, _b;\n    if (((_b = (_a = node.error) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n      hasErrors = true;\n    }\n    return hasErrors;\n  }\n  (0, iterateOverTrace_1.iterateOverTrace)(trace, traceNodeStats, false);\n  return hasErrors;\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,MAAAA,WAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,MAAAC,kBAAA,GAAAD,OAAA;AACA,MAAAE,mBAAA,GAAAF,OAAA;AAEA,SAAgBG,4BAA4BA,CAAA;EAO1C,MAAMC,KAAK,GAAG,IAAIN,WAAA,CAAAO,OAAQ,CAAe;IAWvCC,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IACpBC,MAAM,EAAEA,CAACC,IAAI,EAAEC,GAAG,KAAI;MACpB,OAAQA,GAAG,IAAIC,MAAM,CAACC,UAAU,CAACF,GAAG,CAAC,IAAK,CAAC;IAC7C;GACD,CAAC;EAEF,OAAO,CAACG,KAAY,EAAEC,cAAsB,KAAa;;IACvD,MAAMC,cAAc,GAAG,CAAAC,EAAA,GAAAH,KAAK,CAACI,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,OAAO;IAC7C,IAAIH,cAAc,IAAI,IAAI,EAAE;MAC1B,MAAMI,KAAK,CAAC,6CAA6C,CAAC;;IAG5D,MAAMC,SAAS,GAAGC,cAAc,CAACR,KAAK,CAAC;IACvC,MAAMS,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAAC,CAC9BV,cAAc,EACdb,mBAAA,CAAAwB,iBAAiB,CAACC,gBAAgB,CAACb,KAAK,CAACc,UAAU,CAAC,EAEpDrB,IAAI,CAACsB,KAAK,CAACb,cAAc,GAAG,EAAE,CAAC,EAG/BK,SAAS,GAAGd,IAAI,CAACsB,KAAK,CAACb,cAAc,GAAG,CAAC,CAAC,GAAG,EAAE,CAChD,CAAC;IAGF,IAAIZ,KAAK,CAAC0B,GAAG,CAACP,QAAQ,CAAC,EAAE;MACvB,OAAO,KAAK;;IAGdnB,KAAK,CAAC2B,GAAG,CAACR,QAAQ,EAAE,IAAI,CAAC;IACzB,OAAO,IAAI;EACb,CAAC;AACH;AAjDAS,OAAA,CAAA7B,4BAAA,GAAAA,4BAAA;AAqDA,SAASmB,cAAcA,CAACR,KAAY;EAClC,IAAIO,SAAS,GAAG,KAAK;EAErB,SAASY,cAAcA,CAACC,IAAiB;;IACvC,IAAI,CAAC,CAAAC,EAAA,IAAAlB,EAAA,GAAAiB,IAAI,CAACE,KAAK,cAAAnB,EAAA,uBAAAA,EAAA,CAAER,MAAM,cAAA0B,EAAA,cAAAA,EAAA,GAAI,CAAC,IAAI,CAAC,EAAE;MACjCd,SAAS,GAAG,IAAI;;IAElB,OAAOA,SAAS;EAClB;EAEA,IAAApB,kBAAA,CAAAoC,gBAAgB,EAACvB,KAAK,EAAEmB,cAAc,EAAE,KAAK,CAAC;EAC9C,OAAOZ,SAAS;AAClB","names":["lru_cache_1","__importDefault","require","iterateOverTrace_1","durationHistogram_1","defaultSendOperationsAsTrace","cache","default","max","Math","pow","length","_val","key","Buffer","byteLength","trace","statsReportKey","endTimeSeconds","_a","endTime","seconds","Error","hasErrors","traceHasErrors","cacheKey","JSON","stringify","DurationHistogram","durationToBucket","durationNs","floor","get","set","exports","traceNodeStats","node","_b","error","iterateOverTrace"],"sourceRoot":"","sources":["../../../src/plugin/usageReporting/defaultSendOperationsAsTrace.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}