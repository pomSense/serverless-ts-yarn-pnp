{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRootTypeMap = exports.getRootTypes = exports.getRootTypeNames = exports.getDefinedRootType = void 0;\nconst memoize_js_1 = require(\"./memoize.js\");\nfunction getDefinedRootType(schema, operation) {\n  const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n  const rootType = rootTypeMap.get(operation);\n  if (rootType == null) {\n    throw new Error(`Root type for operation \"${operation}\" not defined by the given schema.`);\n  }\n  return rootType;\n}\nexports.getDefinedRootType = getDefinedRootType;\nexports.getRootTypeNames = (0, memoize_js_1.memoize1)(function getRootTypeNames(schema) {\n  const rootTypes = (0, exports.getRootTypes)(schema);\n  return new Set([...rootTypes].map(type => type.name));\n});\nexports.getRootTypes = (0, memoize_js_1.memoize1)(function getRootTypes(schema) {\n  const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n  return new Set(rootTypeMap.values());\n});\nexports.getRootTypeMap = (0, memoize_js_1.memoize1)(function getRootTypeMap(schema) {\n  const rootTypeMap = new Map();\n  const queryType = schema.getQueryType();\n  if (queryType) {\n    rootTypeMap.set('query', queryType);\n  }\n  const mutationType = schema.getMutationType();\n  if (mutationType) {\n    rootTypeMap.set('mutation', mutationType);\n  }\n  const subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    rootTypeMap.set('subscription', subscriptionType);\n  }\n  return rootTypeMap;\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","getRootTypeMap","getRootTypes","getRootTypeNames","getDefinedRootType","memoize_js_1","require","schema","operation","rootTypeMap","rootType","get","Error","memoize1","rootTypes","Set","map","type","name","values","Map","queryType","getQueryType","set","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/__virtual__/@graphql-tools-utils-virtual-c460c70582/0/cache/@graphql-tools-utils-npm-8.9.0-8fcb9b9e58-8d1d8a1172.zip/node_modules/@graphql-tools/utils/cjs/rootTypes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRootTypeMap = exports.getRootTypes = exports.getRootTypeNames = exports.getDefinedRootType = void 0;\nconst memoize_js_1 = require(\"./memoize.js\");\nfunction getDefinedRootType(schema, operation) {\n    const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw new Error(`Root type for operation \"${operation}\" not defined by the given schema.`);\n    }\n    return rootType;\n}\nexports.getDefinedRootType = getDefinedRootType;\nexports.getRootTypeNames = (0, memoize_js_1.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = (0, exports.getRootTypes)(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nexports.getRootTypes = (0, memoize_js_1.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = (0, exports.getRootTypeMap)(schema);\n    return new Set(rootTypeMap.values());\n});\nexports.getRootTypeMap = (0, memoize_js_1.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,YAAY,GAAGH,OAAO,CAACI,gBAAgB,GAAGJ,OAAO,CAACK,kBAAkB,GAAG,KAAK,CAAC;AAC9G,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5C,SAASF,kBAAkBA,CAACG,MAAM,EAAEC,SAAS,EAAE;EAC3C,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAEV,OAAO,CAACE,cAAc,EAAEM,MAAM,CAAC;EACvD,MAAMG,QAAQ,GAAGD,WAAW,CAACE,GAAG,CAACH,SAAS,CAAC;EAC3C,IAAIE,QAAQ,IAAI,IAAI,EAAE;IAClB,MAAM,IAAIE,KAAK,CAAE,4BAA2BJ,SAAU,oCAAmC,CAAC;EAC9F;EACA,OAAOE,QAAQ;AACnB;AACAX,OAAO,CAACK,kBAAkB,GAAGA,kBAAkB;AAC/CL,OAAO,CAACI,gBAAgB,GAAG,CAAC,CAAC,EAAEE,YAAY,CAACQ,QAAQ,EAAE,SAASV,gBAAgBA,CAACI,MAAM,EAAE;EACpF,MAAMO,SAAS,GAAG,CAAC,CAAC,EAAEf,OAAO,CAACG,YAAY,EAAEK,MAAM,CAAC;EACnD,OAAO,IAAIQ,GAAG,CAAC,CAAC,GAAGD,SAAS,CAAC,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC;AACzD,CAAC,CAAC;AACFnB,OAAO,CAACG,YAAY,GAAG,CAAC,CAAC,EAAEG,YAAY,CAACQ,QAAQ,EAAE,SAASX,YAAYA,CAACK,MAAM,EAAE;EAC5E,MAAME,WAAW,GAAG,CAAC,CAAC,EAAEV,OAAO,CAACE,cAAc,EAAEM,MAAM,CAAC;EACvD,OAAO,IAAIQ,GAAG,CAACN,WAAW,CAACU,MAAM,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC;AACFpB,OAAO,CAACE,cAAc,GAAG,CAAC,CAAC,EAAEI,YAAY,CAACQ,QAAQ,EAAE,SAASZ,cAAcA,CAACM,MAAM,EAAE;EAChF,MAAME,WAAW,GAAG,IAAIW,GAAG,CAAC,CAAC;EAC7B,MAAMC,SAAS,GAAGd,MAAM,CAACe,YAAY,CAAC,CAAC;EACvC,IAAID,SAAS,EAAE;IACXZ,WAAW,CAACc,GAAG,CAAC,OAAO,EAAEF,SAAS,CAAC;EACvC;EACA,MAAMG,YAAY,GAAGjB,MAAM,CAACkB,eAAe,CAAC,CAAC;EAC7C,IAAID,YAAY,EAAE;IACdf,WAAW,CAACc,GAAG,CAAC,UAAU,EAAEC,YAAY,CAAC;EAC7C;EACA,MAAME,gBAAgB,GAAGnB,MAAM,CAACoB,mBAAmB,CAAC,CAAC;EACrD,IAAID,gBAAgB,EAAE;IAClBjB,WAAW,CAACc,GAAG,CAAC,cAAc,EAAEG,gBAAgB,CAAC;EACrD;EACA,OAAOjB,WAAW;AACtB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}