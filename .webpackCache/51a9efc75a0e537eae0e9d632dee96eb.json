{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolvers = undefined;\nvar _graphql = require(\"graphql\");\nvar _authController = require(\"../../command/auth/auth-controller\");\nvar _apiKeyController = require(\"../../query/api-key-controller\");\nconst Void = new _graphql.GraphQLScalarType({\n  name: 'Void'\n});\n\n/**\n * @resolvers are a thin layer which lead to a controller\n */\nconst resolvers = exports.resolvers = {\n  Query: {\n    getAPIKey: (_, {\n      input\n    }, context) => {\n      return (0, _apiKeyController.getAPIKeyController)();\n    }\n  },\n  // Upload: GraphQLUpload as any,\n  Void: Void,\n  Mutation: {\n    createAPIKey: (_, {\n      input\n    }, context) => {\n      const metadata = context.metadata;\n      return (0, _authController.createAPIKeyController)({\n        ...input,\n        metadata\n      });\n    }\n  }\n};","map":{"version":3,"names":["_graphql","require","_authController","_apiKeyController","Void","GraphQLScalarType","name","resolvers","exports","Query","getAPIKey","_","input","context","getAPIKeyController","Mutation","createAPIKey","metadata","createAPIKeyController"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/src/infra/graphql/resolvers.ts"],"sourcesContent":["import { DocumentNode, GraphQLScalarType } from 'graphql'\n\nimport { createAPIKeyController } from '../../command/auth/auth-controller'\nimport { Context } from '../server'\nimport { getAPIKeyController } from '../../query/api-key-controller'\n\ntype Input<T> = { input: T }\n\nconst Void = new GraphQLScalarType({\n  name: 'Void'\n})\n\n/**\n * @resolvers are a thin layer which lead to a controller\n */\nexport const resolvers = {\n  Query: {\n    getAPIKey: (_: DocumentNode, { input }: Input<{ constraint: string }>, context: Context) => {\n      return getAPIKeyController()\n    }\n  },\n  // Upload: GraphQLUpload as any,\n  Void: Void,\n  Mutation: {\n    createAPIKey: (_: DocumentNode, { input }: Input<ActivateMembershipDTO>, context: Context) => {\n      const metadata = context.metadata\n      return createAPIKeyController({ ...input, metadata })\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAD,OAAA;AAEA,IAAAE,iBAAA,GAAAF,OAAA;AAIA,MAAMG,IAAI,GAAG,IAAIC,0BAAiB,CAAC;EACjCC,IAAI,EAAE;AACR,CAAC,CAAC;;AAEF;AACA;AACA;AACO,MAAMC,SAAS,GAAAC,OAAA,CAATD,SAAS,GAAG;EACvBE,KAAK,EAAE;IACLC,SAAS,EAAEA,CAACC,CAAe,EAAE;MAAEC;IAAqC,CAAC,EAAEC,OAAgB,KAAK;MAC1F,OAAO,IAAAC,qCAAmB,EAAC,CAAC;IAC9B;EACF,CAAC;EACD;EACAV,IAAI,EAAEA,IAAI;EACVW,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACL,CAAe,EAAE;MAAEC;IAAoC,CAAC,EAAEC,OAAgB,KAAK;MAC5F,MAAMI,QAAQ,GAAGJ,OAAO,CAACI,QAAQ;MACjC,OAAO,IAAAC,sCAAsB,EAAC;QAAE,GAAGN,KAAK;QAAEK;MAAS,CAAC,CAAC;IACvD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}