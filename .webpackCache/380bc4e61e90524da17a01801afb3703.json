{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dateToProtoTimestamp = exports.TraceTreeBuilder = void 0;\nconst graphql_1 = require(\"graphql\");\nconst apollo_reporting_protobuf_1 = require(\"apollo-reporting-protobuf\");\nfunction internalError(message) {\n  return new Error(`[internal apollo-server error] ${message}`);\n}\nclass TraceTreeBuilder {\n  constructor(options) {\n    this.rootNode = new apollo_reporting_protobuf_1.Trace.Node();\n    this.logger = console;\n    this.trace = new apollo_reporting_protobuf_1.Trace({\n      root: this.rootNode,\n      fieldExecutionWeight: 1\n    });\n    this.stopped = false;\n    this.nodes = new Map([[responsePathAsString(), this.rootNode]]);\n    this.rewriteError = options.rewriteError;\n    if (options.logger) this.logger = options.logger;\n  }\n  startTiming() {\n    if (this.startHrTime) {\n      throw internalError('startTiming called twice!');\n    }\n    if (this.stopped) {\n      throw internalError('startTiming called after stopTiming!');\n    }\n    this.trace.startTime = dateToProtoTimestamp(new Date());\n    this.startHrTime = process.hrtime();\n  }\n  stopTiming() {\n    if (!this.startHrTime) {\n      throw internalError('stopTiming called before startTiming!');\n    }\n    if (this.stopped) {\n      throw internalError('stopTiming called twice!');\n    }\n    this.trace.durationNs = durationHrTimeToNanos(process.hrtime(this.startHrTime));\n    this.trace.endTime = dateToProtoTimestamp(new Date());\n    this.stopped = true;\n  }\n  willResolveField(info) {\n    if (!this.startHrTime) {\n      throw internalError('willResolveField called before startTiming!');\n    }\n    if (this.stopped) {\n      return () => {};\n    }\n    const path = info.path;\n    const node = this.newNode(path);\n    node.type = info.returnType.toString();\n    node.parentType = info.parentType.toString();\n    node.startTime = durationHrTimeToNanos(process.hrtime(this.startHrTime));\n    if (typeof path.key === 'string' && path.key !== info.fieldName) {\n      node.originalFieldName = info.fieldName;\n    }\n    return () => {\n      node.endTime = durationHrTimeToNanos(process.hrtime(this.startHrTime));\n    };\n  }\n  didEncounterErrors(errors) {\n    errors.forEach(err => {\n      var _a;\n      if ((_a = err.extensions) === null || _a === void 0 ? void 0 : _a.serviceName) {\n        return;\n      }\n      const errorForReporting = this.rewriteAndNormalizeError(err);\n      if (errorForReporting === null) {\n        return;\n      }\n      this.addProtobufError(errorForReporting.path, errorToProtobufError(errorForReporting));\n    });\n  }\n  addProtobufError(path, error) {\n    if (!this.startHrTime) {\n      throw internalError('addProtobufError called before startTiming!');\n    }\n    if (this.stopped) {\n      throw internalError('addProtobufError called after stopTiming!');\n    }\n    let node = this.rootNode;\n    if (Array.isArray(path)) {\n      const specificNode = this.nodes.get(path.join('.'));\n      if (specificNode) {\n        node = specificNode;\n      } else {\n        this.logger.warn(`Could not find node with path ${path.join('.')}; defaulting to put errors on root node.`);\n      }\n    }\n    node.error.push(error);\n  }\n  newNode(path) {\n    const node = new apollo_reporting_protobuf_1.Trace.Node();\n    const id = path.key;\n    if (typeof id === 'number') {\n      node.index = id;\n    } else {\n      node.responseName = id;\n    }\n    this.nodes.set(responsePathAsString(path), node);\n    const parentNode = this.ensureParentNode(path);\n    parentNode.child.push(node);\n    return node;\n  }\n  ensureParentNode(path) {\n    const parentPath = responsePathAsString(path.prev);\n    const parentNode = this.nodes.get(parentPath);\n    if (parentNode) {\n      return parentNode;\n    }\n    return this.newNode(path.prev);\n  }\n  rewriteAndNormalizeError(err) {\n    if (this.rewriteError) {\n      const clonedError = Object.assign(Object.create(Object.getPrototypeOf(err)), err);\n      const rewrittenError = this.rewriteError(clonedError);\n      if (rewrittenError === null) {\n        return null;\n      }\n      if (!(rewrittenError instanceof graphql_1.GraphQLError)) {\n        return err;\n      }\n      return new graphql_1.GraphQLError(rewrittenError.message, err.nodes, err.source, err.positions, err.path, err.originalError, rewrittenError.extensions || err.extensions);\n    }\n    return err;\n  }\n}\nexports.TraceTreeBuilder = TraceTreeBuilder;\nfunction durationHrTimeToNanos(hrtime) {\n  return hrtime[0] * 1e9 + hrtime[1];\n}\nfunction responsePathAsString(p) {\n  if (p === undefined) {\n    return '';\n  }\n  let res = String(p.key);\n  while ((p = p.prev) !== undefined) {\n    res = `${p.key}.${res}`;\n  }\n  return res;\n}\nfunction errorToProtobufError(error) {\n  return new apollo_reporting_protobuf_1.Trace.Error({\n    message: error.message,\n    location: (error.locations || []).map(({\n      line,\n      column\n    }) => new apollo_reporting_protobuf_1.Trace.Location({\n      line,\n      column\n    })),\n    json: JSON.stringify(error)\n  });\n}\nfunction dateToProtoTimestamp(date) {\n  const totalMillis = +date;\n  const millis = totalMillis % 1000;\n  return new apollo_reporting_protobuf_1.google.protobuf.Timestamp({\n    seconds: (totalMillis - millis) / 1000,\n    nanos: millis * 1e6\n  });\n}\nexports.dateToProtoTimestamp = dateToProtoTimestamp;","map":{"version":3,"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,2BAAA,GAAAD,OAAA;AAGA,SAASE,aAAaA,CAACC,OAAe;EACpC,OAAO,IAAIC,KAAK,CAAC,kCAAkCD,OAAO,EAAE,CAAC;AAC/D;AAEA,MAAaE,gBAAgB;EAqB3BC,YAAmBC,OAGlB;IAvBO,KAAAC,QAAQ,GAAG,IAAIP,2BAAA,CAAAQ,KAAK,CAACC,IAAI,EAAE;IAC3B,KAAAC,MAAM,GAAWC,OAAO;IACzB,KAAAC,KAAK,GAAG,IAAIZ,2BAAA,CAAAQ,KAAK,CAAC;MACvBK,IAAI,EAAE,IAAI,CAACN,QAAQ;MAQnBO,oBAAoB,EAAE;KACvB,CAAC;IAEM,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,KAAK,GAAG,IAAIC,GAAG,CAAqB,CAC1C,CAACC,oBAAoB,EAAE,EAAE,IAAI,CAACX,QAAQ,CAAC,CACxC,CAAC;IAOA,IAAI,CAACY,YAAY,GAAGb,OAAO,CAACa,YAAY;IACxC,IAAIb,OAAO,CAACI,MAAM,EAAE,IAAI,CAACA,MAAM,GAAGJ,OAAO,CAACI,MAAM;EAClD;EAEOU,WAAWA,CAAA;IAChB,IAAI,IAAI,CAACC,WAAW,EAAE;MACpB,MAAMpB,aAAa,CAAC,2BAA2B,CAAC;;IAElD,IAAI,IAAI,CAACc,OAAO,EAAE;MAChB,MAAMd,aAAa,CAAC,sCAAsC,CAAC;;IAE7D,IAAI,CAACW,KAAK,CAACU,SAAS,GAAGC,oBAAoB,CAAC,IAAIC,IAAI,EAAE,CAAC;IACvD,IAAI,CAACH,WAAW,GAAGI,OAAO,CAACC,MAAM,EAAE;EACrC;EAEOC,UAAUA,CAAA;IACf,IAAI,CAAC,IAAI,CAACN,WAAW,EAAE;MACrB,MAAMpB,aAAa,CAAC,uCAAuC,CAAC;;IAE9D,IAAI,IAAI,CAACc,OAAO,EAAE;MAChB,MAAMd,aAAa,CAAC,0BAA0B,CAAC;;IAGjD,IAAI,CAACW,KAAK,CAACgB,UAAU,GAAGC,qBAAqB,CAC3CJ,OAAO,CAACC,MAAM,CAAC,IAAI,CAACL,WAAW,CAAC,CACjC;IACD,IAAI,CAACT,KAAK,CAACkB,OAAO,GAAGP,oBAAoB,CAAC,IAAIC,IAAI,EAAE,CAAC;IACrD,IAAI,CAACT,OAAO,GAAG,IAAI;EACrB;EAEOgB,gBAAgBA,CAACC,IAAwB;IAC9C,IAAI,CAAC,IAAI,CAACX,WAAW,EAAE;MACrB,MAAMpB,aAAa,CAAC,6CAA6C,CAAC;;IAEpE,IAAI,IAAI,CAACc,OAAO,EAAE;MA2ChB,OAAO,MAAK,CAAE,CAAC;;IAGjB,MAAMkB,IAAI,GAAGD,IAAI,CAACC,IAAI;IACtB,MAAMC,IAAI,GAAG,IAAI,CAACC,OAAO,CAACF,IAAI,CAAC;IAC/BC,IAAI,CAACE,IAAI,GAAGJ,IAAI,CAACK,UAAU,CAACC,QAAQ,EAAE;IACtCJ,IAAI,CAACK,UAAU,GAAGP,IAAI,CAACO,UAAU,CAACD,QAAQ,EAAE;IAC5CJ,IAAI,CAACZ,SAAS,GAAGO,qBAAqB,CAACJ,OAAO,CAACC,MAAM,CAAC,IAAI,CAACL,WAAW,CAAC,CAAC;IACxE,IAAI,OAAOY,IAAI,CAACO,GAAG,KAAK,QAAQ,IAAIP,IAAI,CAACO,GAAG,KAAKR,IAAI,CAACS,SAAS,EAAE;MAE/DP,IAAI,CAACQ,iBAAiB,GAAGV,IAAI,CAACS,SAAS;;IAGzC,OAAO,MAAK;MACVP,IAAI,CAACJ,OAAO,GAAGD,qBAAqB,CAACJ,OAAO,CAACC,MAAM,CAAC,IAAI,CAACL,WAAW,CAAC,CAAC;IACxE,CAAC;EACH;EAEOsB,kBAAkBA,CAACC,MAA+B;IACvDA,MAAM,CAACC,OAAO,CAAEC,GAAG,IAAI;;MAOrB,IAAI,CAAAC,EAAA,GAAAD,GAAG,CAACE,UAAU,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,WAAW,EAAE;QAC/B;;MAOF,MAAMC,iBAAiB,GAAG,IAAI,CAACC,wBAAwB,CAACL,GAAG,CAAC;MAE5D,IAAII,iBAAiB,KAAK,IAAI,EAAE;QAC9B;;MAGF,IAAI,CAACE,gBAAgB,CACnBF,iBAAiB,CAACjB,IAAI,EACtBoB,oBAAoB,CAACH,iBAAiB,CAAC,CACxC;IACH,CAAC,CAAC;EACJ;EAEQE,gBAAgBA,CACtBnB,IAAgD,EAChDqB,KAAkB;IAElB,IAAI,CAAC,IAAI,CAACjC,WAAW,EAAE;MACrB,MAAMpB,aAAa,CAAC,6CAA6C,CAAC;;IAEpE,IAAI,IAAI,CAACc,OAAO,EAAE;MAChB,MAAMd,aAAa,CAAC,2CAA2C,CAAC;;IAIlE,IAAIiC,IAAI,GAAG,IAAI,CAAC3B,QAAQ;IAGxB,IAAIgD,KAAK,CAACC,OAAO,CAACvB,IAAI,CAAC,EAAE;MACvB,MAAMwB,YAAY,GAAG,IAAI,CAACzC,KAAK,CAAC0C,GAAG,CAACzB,IAAI,CAAC0B,IAAI,CAAC,GAAG,CAAC,CAAC;MACnD,IAAIF,YAAY,EAAE;QAChBvB,IAAI,GAAGuB,YAAY;OACpB,MAAM;QACL,IAAI,CAAC/C,MAAM,CAACkD,IAAI,CACd,iCAAiC3B,IAAI,CAAC0B,IAAI,CACxC,GAAG,CACJ,0CAA0C,CAC5C;;;IAILzB,IAAI,CAACoB,KAAK,CAACO,IAAI,CAACP,KAAK,CAAC;EACxB;EAEQnB,OAAOA,CAACF,IAAkB;IAChC,MAAMC,IAAI,GAAG,IAAIlC,2BAAA,CAAAQ,KAAK,CAACC,IAAI,EAAE;IAC7B,MAAMqD,EAAE,GAAG7B,IAAI,CAACO,GAAG;IACnB,IAAI,OAAOsB,EAAE,KAAK,QAAQ,EAAE;MAC1B5B,IAAI,CAAC6B,KAAK,GAAGD,EAAE;KAChB,MAAM;MACL5B,IAAI,CAAC8B,YAAY,GAAGF,EAAE;;IAExB,IAAI,CAAC9C,KAAK,CAACiD,GAAG,CAAC/C,oBAAoB,CAACe,IAAI,CAAC,EAAEC,IAAI,CAAC;IAChD,MAAMgC,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAAClC,IAAI,CAAC;IAC9CiC,UAAU,CAACE,KAAK,CAACP,IAAI,CAAC3B,IAAI,CAAC;IAC3B,OAAOA,IAAI;EACb;EAEQiC,gBAAgBA,CAAClC,IAAkB;IACzC,MAAMoC,UAAU,GAAGnD,oBAAoB,CAACe,IAAI,CAACqC,IAAI,CAAC;IAClD,MAAMJ,UAAU,GAAG,IAAI,CAAClD,KAAK,CAAC0C,GAAG,CAACW,UAAU,CAAC;IAC7C,IAAIH,UAAU,EAAE;MACd,OAAOA,UAAU;;IAInB,OAAO,IAAI,CAAC/B,OAAO,CAACF,IAAI,CAACqC,IAAK,CAAC;EACjC;EAEQnB,wBAAwBA,CAACL,GAAiB;IAChD,IAAI,IAAI,CAAC3B,YAAY,EAAE;MAYrB,MAAMoD,WAAW,GAAGC,MAAM,CAACC,MAAM,CAC/BD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAAC7B,GAAG,CAAC,CAAC,EACzCA,GAAG,CACJ;MAED,MAAM8B,cAAc,GAAG,IAAI,CAACzD,YAAY,CAACoD,WAAW,CAAC;MAIrD,IAAIK,cAAc,KAAK,IAAI,EAAE;QAC3B,OAAO,IAAI;;MAMb,IAAI,EAAEA,cAAc,YAAY9E,SAAA,CAAA+E,YAAY,CAAC,EAAE;QAC7C,OAAO/B,GAAG;;MASZ,OAAO,IAAIhD,SAAA,CAAA+E,YAAY,CACrBD,cAAc,CAAC1E,OAAO,EACtB4C,GAAG,CAAC9B,KAAK,EACT8B,GAAG,CAACgC,MAAM,EACVhC,GAAG,CAACiC,SAAS,EACbjC,GAAG,CAACb,IAAI,EACRa,GAAG,CAACkC,aAAa,EACjBJ,cAAc,CAAC5B,UAAU,IAAIF,GAAG,CAACE,UAAU,CAC5C;;IAEH,OAAOF,GAAG;EACZ;;AA/PFmC,OAAA,CAAA7E,gBAAA,GAAAA,gBAAA;AAgRA,SAASyB,qBAAqBA,CAACH,MAAwB;EACrD,OAAOA,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,MAAM,CAAC,CAAC,CAAC;AACpC;AAIA,SAASR,oBAAoBA,CAACgE,CAAgB;EAC5C,IAAIA,CAAC,KAAKC,SAAS,EAAE;IACnB,OAAO,EAAE;;EAKX,IAAIC,GAAG,GAAGC,MAAM,CAACH,CAAC,CAAC1C,GAAG,CAAC;EAEvB,OAAO,CAAC0C,CAAC,GAAGA,CAAC,CAACZ,IAAI,MAAMa,SAAS,EAAE;IACjCC,GAAG,GAAG,GAAGF,CAAC,CAAC1C,GAAG,IAAI4C,GAAG,EAAE;;EAGzB,OAAOA,GAAG;AACZ;AAEA,SAAS/B,oBAAoBA,CAACC,KAAmB;EAC/C,OAAO,IAAItD,2BAAA,CAAAQ,KAAK,CAACL,KAAK,CAAC;IACrBD,OAAO,EAAEoD,KAAK,CAACpD,OAAO;IACtBoF,QAAQ,EAAE,CAAChC,KAAK,CAACiC,SAAS,IAAI,EAAE,EAAEC,GAAG,CACnC,CAAC;MAAEC,IAAI;MAAEC;IAAM,CAAE,KAAK,IAAI1F,2BAAA,CAAAQ,KAAK,CAACmF,QAAQ,CAAC;MAAEF,IAAI;MAAEC;IAAM,CAAE,CAAC,CAC3D;IACDE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxC,KAAK;GAC3B,CAAC;AACJ;AAGA,SAAgB/B,oBAAoBA,CAACwE,IAAU;EAC7C,MAAMC,WAAW,GAAG,CAACD,IAAI;EACzB,MAAME,MAAM,GAAGD,WAAW,GAAG,IAAI;EACjC,OAAO,IAAIhG,2BAAA,CAAAkG,MAAM,CAACC,QAAQ,CAACC,SAAS,CAAC;IACnCC,OAAO,EAAE,CAACL,WAAW,GAAGC,MAAM,IAAI,IAAI;IACtCK,KAAK,EAAEL,MAAM,GAAG;GACjB,CAAC;AACJ;AAPAhB,OAAA,CAAA1D,oBAAA,GAAAA,oBAAA","names":["graphql_1","require","apollo_reporting_protobuf_1","internalError","message","Error","TraceTreeBuilder","constructor","options","rootNode","Trace","Node","logger","console","trace","root","fieldExecutionWeight","stopped","nodes","Map","responsePathAsString","rewriteError","startTiming","startHrTime","startTime","dateToProtoTimestamp","Date","process","hrtime","stopTiming","durationNs","durationHrTimeToNanos","endTime","willResolveField","info","path","node","newNode","type","returnType","toString","parentType","key","fieldName","originalFieldName","didEncounterErrors","errors","forEach","err","_a","extensions","serviceName","errorForReporting","rewriteAndNormalizeError","addProtobufError","errorToProtobufError","error","Array","isArray","specificNode","get","join","warn","push","id","index","responseName","set","parentNode","ensureParentNode","child","parentPath","prev","clonedError","Object","assign","create","getPrototypeOf","rewrittenError","GraphQLError","source","positions","originalError","exports","p","undefined","res","String","location","locations","map","line","column","Location","json","JSON","stringify","date","totalMillis","millis","google","protobuf","Timestamp","seconds","nanos"],"sourceRoot":"","sources":["../../src/plugin/traceTreeBuilder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}