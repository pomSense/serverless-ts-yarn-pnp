{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.upgradeSubgraphsIfNecessary = exports.RemovedTagOnExternal = exports.FieldsArgumentCoercionToString = exports.ProvidesOnNonCompositeRemoval = exports.ProvidesOrRequiresOnInterfaceFieldRemoval = exports.KeyOnInterfaceRemoval = exports.ShareableTypeAddition = exports.ShareableFieldAddition = exports.InactiveProvidesOrRequiresFieldsRemoval = exports.InactiveProvidesOrRequiresRemoval = exports.TypeWithOnlyUnusedExternalRemoval = exports.UnusedExternalRemoval = exports.ExternalOnObjectTypeRemoval = exports.ExternalOnInterfaceRemoval = exports.TypeExtensionRemoval = exports.ExternalOnTypeExtensionRemoval = void 0;\nconst graphql_1 = require(\"graphql\");\nconst error_1 = require(\"./error\");\nconst definitions_1 = require(\"./definitions\");\nconst federation_1 = require(\"./federation\");\nconst utils_1 = require(\"./utils\");\nconst values_1 = require(\"./values\");\nconst federationSpec_1 = require(\"./federationSpec\");\nclass ExternalOnTypeExtensionRemoval {\n  constructor(field) {\n    this.field = field;\n    this.id = 'EXTERNAL_ON_TYPE_EXTENSION_REMOVAL';\n  }\n  toString() {\n    return `Removed @external from field \"${this.field}\" as it is a key of an extension type`;\n  }\n}\nexports.ExternalOnTypeExtensionRemoval = ExternalOnTypeExtensionRemoval;\nclass TypeExtensionRemoval {\n  constructor(type) {\n    this.type = type;\n    this.id = 'TYPE_EXTENSION_REMOVAL';\n  }\n  toString() {\n    return `Switched type \"${this.type}\" from an extension to a definition`;\n  }\n}\nexports.TypeExtensionRemoval = TypeExtensionRemoval;\nclass ExternalOnInterfaceRemoval {\n  constructor(field) {\n    this.field = field;\n    this.id = 'EXTERNAL_ON_INTERFACE_REMOVAL';\n  }\n  toString() {\n    return `Removed @external directive on interface type field \"${this.field}\": @external is nonsensical on interface fields`;\n  }\n}\nexports.ExternalOnInterfaceRemoval = ExternalOnInterfaceRemoval;\nclass ExternalOnObjectTypeRemoval {\n  constructor(type) {\n    this.type = type;\n    this.id = 'EXTERNAL_ON_OBJECT_TYPE_REMOVAL';\n  }\n  toString() {\n    return `Removed @external directive on object type \"${this.type}\": @external on types was not rejected but was inactive in fed1`;\n  }\n}\nexports.ExternalOnObjectTypeRemoval = ExternalOnObjectTypeRemoval;\nclass UnusedExternalRemoval {\n  constructor(field) {\n    this.field = field;\n    this.id = 'UNUSED_EXTERNAL_REMOVAL';\n  }\n  toString() {\n    return `Removed @external field \"${this.field}\" as it was not used in any @key, @provides or @requires`;\n  }\n}\nexports.UnusedExternalRemoval = UnusedExternalRemoval;\nclass TypeWithOnlyUnusedExternalRemoval {\n  constructor(type) {\n    this.type = type;\n    this.id = 'TYPE_WITH_ONLY_UNUSED_EXTERNAL_REMOVAL';\n  }\n  toString() {\n    return `Removed type ${this.type} that is not referenced in the schema and only declares unused @external fields`;\n  }\n}\nexports.TypeWithOnlyUnusedExternalRemoval = TypeWithOnlyUnusedExternalRemoval;\nclass InactiveProvidesOrRequiresRemoval {\n  constructor(parent, removed) {\n    this.parent = parent;\n    this.removed = removed;\n    this.id = 'INACTIVE_PROVIDES_OR_REQUIRES_REMOVAL';\n  }\n  toString() {\n    return `Removed directive ${this.removed} on \"${this.parent}\": none of the fields were truly @external`;\n  }\n}\nexports.InactiveProvidesOrRequiresRemoval = InactiveProvidesOrRequiresRemoval;\nclass InactiveProvidesOrRequiresFieldsRemoval {\n  constructor(parent, original, updated) {\n    this.parent = parent;\n    this.original = original;\n    this.updated = updated;\n    this.id = 'INACTIVE_PROVIDES_OR_REQUIRES_FIELDS_REMOVAL';\n  }\n  toString() {\n    return `Updated directive ${this.original} on \"${this.parent}\" to ${this.updated}: removed fields that were not truly @external`;\n  }\n}\nexports.InactiveProvidesOrRequiresFieldsRemoval = InactiveProvidesOrRequiresFieldsRemoval;\nclass ShareableFieldAddition {\n  constructor(field, declaringSubgraphs) {\n    this.field = field;\n    this.declaringSubgraphs = declaringSubgraphs;\n    this.id = 'SHAREABLE_FIELD_ADDITION';\n  }\n  toString() {\n    return `Added @shareable to field \"${this.field}\": it is also resolved by ${(0, federation_1.printSubgraphNames)(this.declaringSubgraphs)}`;\n  }\n}\nexports.ShareableFieldAddition = ShareableFieldAddition;\nclass ShareableTypeAddition {\n  constructor(type, declaringSubgraphs) {\n    this.type = type;\n    this.declaringSubgraphs = declaringSubgraphs;\n    this.id = 'SHAREABLE_TYPE_ADDITION';\n  }\n  toString() {\n    return `Added @shareable to type \"${this.type}\": it is a \"value type\" and is also declared in ${(0, federation_1.printSubgraphNames)(this.declaringSubgraphs)}`;\n  }\n}\nexports.ShareableTypeAddition = ShareableTypeAddition;\nclass KeyOnInterfaceRemoval {\n  constructor(type) {\n    this.type = type;\n    this.id = 'KEY_ON_INTERFACE_REMOVAL';\n  }\n  toString() {\n    return `Removed @key on interface \"${this.type}\": while allowed by federation 0.x, @key on interfaces were completely ignored/had no effect`;\n  }\n}\nexports.KeyOnInterfaceRemoval = KeyOnInterfaceRemoval;\nclass ProvidesOrRequiresOnInterfaceFieldRemoval {\n  constructor(field, directive) {\n    this.field = field;\n    this.directive = directive;\n    this.id = 'PROVIDES_OR_REQUIRES_ON_INTERFACE_FIELD_REMOVAL';\n  }\n  toString() {\n    return `Removed @${this.directive} on interface field \"${this.field}\": while allowed by federation 0.x, @${this.directive} on interface fields were completely ignored/had no effect`;\n  }\n}\nexports.ProvidesOrRequiresOnInterfaceFieldRemoval = ProvidesOrRequiresOnInterfaceFieldRemoval;\nclass ProvidesOnNonCompositeRemoval {\n  constructor(field, type) {\n    this.field = field;\n    this.type = type;\n    this.id = 'PROVIDES_ON_NON_COMPOSITE_REMOVAL';\n  }\n  toString() {\n    return `Removed @provides directive on field \"${this.field}\" as it is of non-composite type \"${this.type}\": while not rejected by federation 0.x, such @provide is nonsensical and was ignored`;\n  }\n}\nexports.ProvidesOnNonCompositeRemoval = ProvidesOnNonCompositeRemoval;\nclass FieldsArgumentCoercionToString {\n  constructor(element, directive, before, after) {\n    this.element = element;\n    this.directive = directive;\n    this.before = before;\n    this.after = after;\n    this.id = 'FIELDS_ARGUMENT_COERCION_TO_STRING';\n  }\n  toString() {\n    return `Coerced \"fields\" argument for directive @${this.directive} for \"${this.element}\" into a string: coerced from ${this.before} to ${this.after}`;\n  }\n}\nexports.FieldsArgumentCoercionToString = FieldsArgumentCoercionToString;\nclass RemovedTagOnExternal {\n  constructor(application, element) {\n    this.application = application;\n    this.element = element;\n    this.id = 'REMOVED_TAG_ON_EXTERNAL';\n  }\n  toString() {\n    return `Removed ${this.application} application on @external \"${this.element}\" as the @tag application is on another definition`;\n  }\n}\nexports.RemovedTagOnExternal = RemovedTagOnExternal;\nfunction upgradeSubgraphsIfNecessary(inputs) {\n  const changes = new Map();\n  if (inputs.values().every(s => s.isFed2Subgraph())) {\n    return {\n      subgraphs: inputs,\n      changes\n    };\n  }\n  const subgraphs = new federation_1.Subgraphs();\n  let errors = [];\n  const subgraphsUsingInterfaceObject = [];\n  for (const subgraph of inputs.values()) {\n    if (subgraph.isFed2Subgraph()) {\n      subgraphs.add(subgraph);\n      if (subgraph.metadata().interfaceObjectDirective().applications().length > 0) {\n        subgraphsUsingInterfaceObject.push(subgraph.name);\n      }\n    } else {\n      const otherSubgraphs = inputs.values().filter(s => s.name !== subgraph.name);\n      const res = new SchemaUpgrader(subgraph, otherSubgraphs).upgrade();\n      if (res.errors) {\n        errors = errors.concat(res.errors);\n      } else {\n        subgraphs.add(res.upgraded);\n        changes.set(subgraph.name, res.changes);\n      }\n    }\n  }\n  if (errors.length === 0 && subgraphsUsingInterfaceObject.length > 0) {\n    const fed1Subgraphs = inputs.values().filter(s => !s.isFed2Subgraph()).map(s => s.name);\n    errors = [error_1.ERRORS.INTERFACE_OBJECT_USAGE_ERROR.err('The @interfaceObject directive can only be used if all subgraphs have federation 2 subgraph schema (schema with a `@link` to \"https://specs.apollo.dev/federation\" version 2.0 or newer): ' + `@interfaceObject is used in ${(0, federation_1.printSubgraphNames)(subgraphsUsingInterfaceObject)} but ${(0, federation_1.printSubgraphNames)(fed1Subgraphs)} ${fed1Subgraphs.length > 1 ? 'are not' : 'is not a'} federation 2 subgraph schema.`)];\n  }\n  return errors.length === 0 ? {\n    subgraphs,\n    changes\n  } : {\n    errors\n  };\n}\nexports.upgradeSubgraphsIfNecessary = upgradeSubgraphsIfNecessary;\nfunction isFederationTypeExtension(type) {\n  const metadata = (0, federation_1.federationMetadata)(type.schema());\n  (0, utils_1.assert)(metadata, 'Should be a subgraph schema');\n  const hasExtend = type.hasAppliedDirective(metadata.extendsDirective());\n  return (type.hasExtensionElements() || hasExtend) && ((0, definitions_1.isObjectType)(type) || (0, definitions_1.isInterfaceType)(type)) && (hasExtend || !type.hasNonExtensionElements());\n}\nfunction isRootTypeExtension(type) {\n  const metadata = (0, federation_1.federationMetadata)(type.schema());\n  (0, utils_1.assert)(metadata, 'Should be a subgraph schema');\n  return (0, definitions_1.isObjectType)(type) && type.isRootType() && (type.hasAppliedDirective(metadata.extendsDirective()) || type.hasExtensionElements() && !type.hasNonExtensionElements());\n}\nfunction resolvesField(subgraph, field) {\n  const metadata = subgraph.metadata();\n  const t = subgraph.schema.type(field.parent.name);\n  if (!t || !(0, definitions_1.isObjectType)(t)) {\n    return false;\n  }\n  const f = t.field(field.name);\n  return !!f && (!metadata.isFieldExternal(f) || metadata.isFieldPartiallyExternal(f));\n}\nfunction getField(schema, typeName, fieldName) {\n  const type = schema.type(typeName);\n  return type && (0, definitions_1.isCompositeType)(type) ? type.field(fieldName) : undefined;\n}\nclass SchemaUpgrader {\n  constructor(originalSubgraph, otherSubgraphs) {\n    this.originalSubgraph = originalSubgraph;\n    this.otherSubgraphs = otherSubgraphs;\n    this.changes = new utils_1.MultiMap();\n    this.errors = [];\n    this.schema = originalSubgraph.schema.clone();\n    this.renameFederationTypes();\n    this.subgraph = new federation_1.Subgraph(originalSubgraph.name, originalSubgraph.url, this.schema);\n    try {\n      (0, federation_1.setSchemaAsFed2Subgraph)(this.schema);\n    } catch (e) {\n      const causes = (0, error_1.errorCauses)(e);\n      if (causes) {\n        causes.forEach(c => this.addError(c));\n      } else {\n        throw e;\n      }\n    }\n    this.metadata = this.subgraph.metadata();\n  }\n  addError(e) {\n    this.errors.push((0, federation_1.addSubgraphToError)(e, this.subgraph.name, error_1.ERRORS.INVALID_GRAPHQL));\n  }\n  renameFederationTypes() {\n    for (const typeSpec of federationSpec_1.FEDERATION1_TYPES) {\n      const typeNameInOriginal = this.originalSubgraph.metadata().federationTypeNameInSchema(typeSpec.name);\n      const type = this.schema.type(typeNameInOriginal);\n      if (type) {\n        type.rename(`federation__${typeSpec.name}`);\n      }\n    }\n  }\n  external(elt) {\n    const applications = elt.appliedDirectivesOf(this.metadata.externalDirective());\n    return applications.length === 0 ? undefined : applications[0];\n  }\n  addChange(change) {\n    this.changes.add(change.id, change);\n  }\n  checkForExtensionWithNoBase(type) {\n    var _a;\n    if (isRootTypeExtension(type) || !isFederationTypeExtension(type)) {\n      return;\n    }\n    const extensionAST = (_a = (0, utils_1.firstOf)(type.extensions().values())) === null || _a === void 0 ? void 0 : _a.sourceAST;\n    for (const subgraph of this.otherSubgraphs) {\n      const otherType = subgraph.schema.type(type.name);\n      if (otherType && otherType.hasNonExtensionElements()) {\n        return;\n      }\n    }\n    this.addError(error_1.ERRORS.EXTENSION_WITH_NO_BASE.err(`Type \"${type}\" is an extension type, but there is no type definition for \"${type}\" in any subgraph.`, {\n      nodes: extensionAST\n    }));\n  }\n  preUpgradeValidations() {\n    for (const type of this.schema.types()) {\n      this.checkForExtensionWithNoBase(type);\n    }\n  }\n  upgrade() {\n    this.preUpgradeValidations();\n    this.fixFederationDirectivesArguments();\n    this.removeExternalOnInterface();\n    this.removeExternalOnObjectTypes();\n    this.removeExternalOnTypeExtensions();\n    this.fixInactiveProvidesAndRequires();\n    this.removeTypeExtensions();\n    this.removeDirectivesOnInterface();\n    this.removeProvidesOnNonComposite();\n    this.removeUnusedExternals();\n    this.addShareable();\n    this.removeTagOnExternal();\n    if (this.errors.length > 0) {\n      return {\n        errors: this.errors\n      };\n    }\n    try {\n      this.subgraph.validate();\n      return {\n        upgraded: this.subgraph,\n        changes: this.changes\n      };\n    } catch (e) {\n      const errors = (0, error_1.errorCauses)(e);\n      if (!errors) {\n        throw e;\n      }\n      return {\n        errors\n      };\n    }\n  }\n  fixFederationDirectivesArguments() {\n    var _a;\n    for (const directive of [this.metadata.keyDirective(), this.metadata.requiresDirective(), this.metadata.providesDirective()]) {\n      for (const application of Array.from(directive.applications())) {\n        const fields = application.arguments().fields;\n        if (typeof fields !== 'string') {\n          if (Array.isArray(fields) && fields.every(f => typeof f === 'string')) {\n            this.replaceFederationDirectiveApplication(application, application.toString(), fields.join(' '), directive.sourceAST);\n          }\n          continue;\n        }\n        const nodes = application.sourceAST;\n        if (nodes && nodes.kind === 'Directive') {\n          for (const argNode of (_a = nodes.arguments) !== null && _a !== void 0 ? _a : []) {\n            if (argNode.name.value === 'fields') {\n              if (argNode.value.kind === graphql_1.Kind.ENUM) {\n                this.replaceFederationDirectiveApplication(application, (0, graphql_1.print)(nodes), fields, {\n                  ...nodes,\n                  arguments: [{\n                    ...argNode,\n                    value: {\n                      kind: graphql_1.Kind.STRING,\n                      value: fields\n                    }\n                  }]\n                });\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  removeExternalOnInterface() {\n    for (const itf of this.schema.interfaceTypes()) {\n      for (const field of itf.fields()) {\n        const external = this.external(field);\n        if (external) {\n          this.addChange(new ExternalOnInterfaceRemoval(field.coordinate));\n          external.remove();\n        }\n      }\n    }\n  }\n  removeExternalOnObjectTypes() {\n    for (const type of this.schema.objectTypes()) {\n      const external = type.appliedDirectivesOf(this.metadata.externalDirective())[0];\n      if (external) {\n        this.addChange(new ExternalOnObjectTypeRemoval(type.coordinate));\n        external.remove();\n      }\n    }\n  }\n  replaceFederationDirectiveApplication(application, before, fields, updatedSourceAST) {\n    const directive = application.definition;\n    const parent = application.parent;\n    application.remove();\n    const newDirective = parent.applyDirective(directive, {\n      fields\n    });\n    newDirective.sourceAST = updatedSourceAST;\n    this.addChange(new FieldsArgumentCoercionToString(parent.coordinate, directive.name, before, newDirective.toString()));\n  }\n  fixInactiveProvidesAndRequires() {\n    (0, federation_1.removeInactiveProvidesAndRequires)(this.schema, (field, original, updated) => {\n      if (updated) {\n        this.addChange(new InactiveProvidesOrRequiresFieldsRemoval(field.coordinate, original.toString(), updated.toString()));\n      } else {\n        this.addChange(new InactiveProvidesOrRequiresRemoval(field.coordinate, original.toString()));\n      }\n    });\n  }\n  removeExternalOnTypeExtensions() {\n    for (const type of this.schema.types()) {\n      if (!(0, definitions_1.isCompositeType)(type)) {\n        continue;\n      }\n      if (!isFederationTypeExtension(type) && !isRootTypeExtension(type)) {\n        continue;\n      }\n      const keyApplications = type.appliedDirectivesOf(this.metadata.keyDirective());\n      if (keyApplications.length > 0) {\n        for (const keyApplication of type.appliedDirectivesOf(this.metadata.keyDirective())) {\n          (0, federation_1.collectTargetFields)({\n            parentType: type,\n            directive: keyApplication,\n            includeInterfaceFieldsImplementations: false,\n            validate: false\n          }).forEach(field => {\n            if (field.parent !== type) {\n              return;\n            }\n            const external = this.external(field);\n            if (external) {\n              this.addChange(new ExternalOnTypeExtensionRemoval(field.coordinate));\n              external.remove();\n            }\n          });\n        }\n      } else {\n        for (const other of this.otherSubgraphs) {\n          const typeInOther = other.schema.type(type.name);\n          if (!typeInOther) {\n            continue;\n          }\n          (0, utils_1.assert)((0, definitions_1.isCompositeType)(typeInOther), () => `Type ${type} is of kind ${type.kind} in ${this.subgraph.name} but ${typeInOther.kind} in ${other.name}`);\n          const keysInOther = typeInOther.appliedDirectivesOf(other.metadata().keyDirective());\n          if (keysInOther.length === 0) {\n            continue;\n          }\n          (0, federation_1.collectTargetFields)({\n            parentType: typeInOther,\n            directive: keysInOther[0],\n            includeInterfaceFieldsImplementations: false,\n            validate: false\n          }).forEach(field => {\n            if (field.parent !== typeInOther) {\n              return;\n            }\n            const ownField = type.field(field.name);\n            if (!ownField) {\n              return;\n            }\n            const external = this.external(ownField);\n            if (external) {\n              this.addChange(new ExternalOnTypeExtensionRemoval(ownField.coordinate));\n              external.remove();\n            }\n          });\n        }\n      }\n    }\n  }\n  removeTypeExtensions() {\n    for (const type of this.schema.types()) {\n      if (!isFederationTypeExtension(type) && !isRootTypeExtension(type)) {\n        continue;\n      }\n      this.addChange(new TypeExtensionRemoval(type.coordinate));\n      type.removeExtensions();\n    }\n  }\n  removeUnusedExternals() {\n    for (const type of this.schema.types()) {\n      if (!(0, definitions_1.isObjectType)(type) && !(0, definitions_1.isInterfaceType)(type)) {\n        continue;\n      }\n      for (const field of type.fields()) {\n        if (this.metadata.isFieldExternal(field) && !this.metadata.isFieldUsed(field)) {\n          this.addChange(new UnusedExternalRemoval(field.coordinate));\n          field.remove();\n        }\n      }\n      if (!type.hasFields()) {\n        if (type.isReferenced()) {\n          this.addError(error_1.ERRORS.TYPE_WITH_ONLY_UNUSED_EXTERNAL.err(`Type ${type} contains only external fields and all those fields are all unused (they do not appear in any @key, @provides or @requires).`, {\n            nodes: type.sourceAST\n          }));\n        } else {\n          this.addChange(new TypeWithOnlyUnusedExternalRemoval(type.name));\n          type.remove();\n        }\n      }\n    }\n  }\n  removeDirectivesOnInterface() {\n    for (const type of this.schema.interfaceTypes()) {\n      for (const application of type.appliedDirectivesOf(this.metadata.keyDirective())) {\n        this.addChange(new KeyOnInterfaceRemoval(type.name));\n        application.remove();\n      }\n      for (const field of type.fields()) {\n        for (const directive of [this.metadata.providesDirective(), this.metadata.requiresDirective()]) {\n          for (const application of field.appliedDirectivesOf(directive)) {\n            this.addChange(new ProvidesOrRequiresOnInterfaceFieldRemoval(field.coordinate, directive.name));\n            application.remove();\n          }\n        }\n      }\n    }\n  }\n  removeProvidesOnNonComposite() {\n    for (const type of this.schema.objectTypes()) {\n      for (const field of type.fields()) {\n        if ((0, definitions_1.isCompositeType)((0, definitions_1.baseType)(field.type))) {\n          continue;\n        }\n        for (const application of field.appliedDirectivesOf(this.metadata.providesDirective())) {\n          this.addChange(new ProvidesOnNonCompositeRemoval(field.coordinate, field.type.toString()));\n          application.remove();\n        }\n      }\n    }\n  }\n  addShareable() {\n    const originalMetadata = this.originalSubgraph.metadata();\n    const keyDirective = this.metadata.keyDirective();\n    const shareableDirective = this.metadata.shareableDirective();\n    for (const type of this.schema.objectTypes()) {\n      if (type.hasAppliedDirective(keyDirective) || type.isRootType()) {\n        for (const field of type.fields()) {\n          if (originalMetadata.isFieldShareable(field)) {\n            continue;\n          }\n          const otherResolvingSubgraphs = this.otherSubgraphs.filter(s => resolvesField(s, field));\n          if (otherResolvingSubgraphs.length > 0 && !field.hasAppliedDirective(shareableDirective)) {\n            field.applyDirective(shareableDirective);\n            this.addChange(new ShareableFieldAddition(field.coordinate, otherResolvingSubgraphs.map(s => s.name)));\n          }\n        }\n      } else {\n        const otherDeclaringSubgraphs = this.otherSubgraphs.filter(s => s.schema.type(type.name));\n        if (otherDeclaringSubgraphs.length > 0 && !type.hasAppliedDirective(shareableDirective)) {\n          type.applyDirective(shareableDirective);\n          this.addChange(new ShareableTypeAddition(type.coordinate, otherDeclaringSubgraphs.map(s => s.name)));\n        }\n      }\n    }\n  }\n  removeTagOnExternal() {\n    const tagDirective = this.schema.directive('tag');\n    if (!tagDirective) {\n      return;\n    }\n    for (const application of Array.from(tagDirective.applications())) {\n      const element = application.parent;\n      if (!(element instanceof definitions_1.FieldDefinition)) {\n        continue;\n      }\n      if (this.external(element)) {\n        const tagIsUsedInOtherDefinition = this.otherSubgraphs.map(s => getField(s.schema, element.parent.name, element.name)).filter(f => !(f && f.hasAppliedDirective('external'))).some(f => f && f.appliedDirectivesOf('tag').some(d => (0, values_1.valueEquals)(application.arguments(), d.arguments())));\n        if (tagIsUsedInOtherDefinition) {\n          this.addChange(new RemovedTagOnExternal(application.toString(), element.coordinate));\n          application.remove();\n        }\n      }\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["graphql_1","require","error_1","definitions_1","federation_1","utils_1","values_1","federationSpec_1","ExternalOnTypeExtensionRemoval","constructor","field","id","toString","exports","TypeExtensionRemoval","type","ExternalOnInterfaceRemoval","ExternalOnObjectTypeRemoval","UnusedExternalRemoval","TypeWithOnlyUnusedExternalRemoval","InactiveProvidesOrRequiresRemoval","parent","removed","InactiveProvidesOrRequiresFieldsRemoval","original","updated","ShareableFieldAddition","declaringSubgraphs","printSubgraphNames","ShareableTypeAddition","KeyOnInterfaceRemoval","ProvidesOrRequiresOnInterfaceFieldRemoval","directive","ProvidesOnNonCompositeRemoval","FieldsArgumentCoercionToString","element","before","after","RemovedTagOnExternal","application","upgradeSubgraphsIfNecessary","inputs","changes","Map","values","every","s","isFed2Subgraph","subgraphs","Subgraphs","errors","subgraphsUsingInterfaceObject","subgraph","add","metadata","interfaceObjectDirective","applications","length","push","name","otherSubgraphs","filter","res","SchemaUpgrader","upgrade","concat","upgraded","set","fed1Subgraphs","map","ERRORS","INTERFACE_OBJECT_USAGE_ERROR","err","isFederationTypeExtension","federationMetadata","schema","assert","hasExtend","hasAppliedDirective","extendsDirective","hasExtensionElements","isObjectType","isInterfaceType","hasNonExtensionElements","isRootTypeExtension","isRootType","resolvesField","t","f","isFieldExternal","isFieldPartiallyExternal","getField","typeName","fieldName","isCompositeType","undefined","originalSubgraph","MultiMap","clone","renameFederationTypes","Subgraph","url","setSchemaAsFed2Subgraph","e","causes","errorCauses","forEach","c","addError","addSubgraphToError","INVALID_GRAPHQL","typeSpec","FEDERATION1_TYPES","typeNameInOriginal","federationTypeNameInSchema","rename","external","elt","appliedDirectivesOf","externalDirective","addChange","change","checkForExtensionWithNoBase","extensionAST","_a","firstOf","extensions","sourceAST","otherType","EXTENSION_WITH_NO_BASE","nodes","preUpgradeValidations","types","fixFederationDirectivesArguments","removeExternalOnInterface","removeExternalOnObjectTypes","removeExternalOnTypeExtensions","fixInactiveProvidesAndRequires","removeTypeExtensions","removeDirectivesOnInterface","removeProvidesOnNonComposite","removeUnusedExternals","addShareable","removeTagOnExternal","validate","keyDirective","requiresDirective","providesDirective","Array","from","fields","arguments","isArray","replaceFederationDirectiveApplication","join","kind","argNode","value","Kind","ENUM","print","STRING","itf","interfaceTypes","coordinate","remove","objectTypes","updatedSourceAST","definition","newDirective","applyDirective","removeInactiveProvidesAndRequires","keyApplications","keyApplication","collectTargetFields","parentType","includeInterfaceFieldsImplementations","other","typeInOther","keysInOther","ownField","removeExtensions","isFieldUsed","hasFields","isReferenced","TYPE_WITH_ONLY_UNUSED_EXTERNAL","baseType","originalMetadata","shareableDirective","isFieldShareable","otherResolvingSubgraphs","otherDeclaringSubgraphs","tagDirective","FieldDefinition","tagIsUsedInOtherDefinition","some","d","valueEquals"],"sourceRoot":"","sources":["../src/schemaUpgrader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}