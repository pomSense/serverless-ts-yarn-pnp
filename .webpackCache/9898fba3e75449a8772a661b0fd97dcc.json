{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeFields = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst arguments_js_1 = require(\"./arguments.js\");\nfunction fieldAlreadyExists(fieldsArr, otherField) {\n  const resultIndex = fieldsArr.findIndex(field => field.name.value === otherField.name.value);\n  return [resultIndex > -1 ? fieldsArr[resultIndex] : null, resultIndex];\n}\nfunction mergeFields(type, f1, f2, config, directives) {\n  const result = [];\n  if (f2 != null) {\n    result.push(...f2);\n  }\n  if (f1 != null) {\n    for (const field of f1) {\n      const [existing, existingIndex] = fieldAlreadyExists(result, field);\n      if (existing && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n        const newField = (config === null || config === void 0 ? void 0 : config.onFieldTypeConflict) && config.onFieldTypeConflict(existing, field, type, config === null || config === void 0 ? void 0 : config.throwOnConflict) || preventConflicts(type, existing, field, config === null || config === void 0 ? void 0 : config.throwOnConflict);\n        newField.arguments = (0, arguments_js_1.mergeArguments)(field['arguments'] || [], existing['arguments'] || [], config);\n        newField.directives = (0, directives_js_1.mergeDirectives)(field.directives, existing.directives, config, directives);\n        newField.description = field.description || existing.description;\n        result[existingIndex] = newField;\n      } else {\n        result.push(field);\n      }\n    }\n  }\n  if (config && config.sort) {\n    result.sort(utils_1.compareNodes);\n  }\n  if (config && config.exclusions) {\n    const exclusions = config.exclusions;\n    return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n  }\n  return result;\n}\nexports.mergeFields = mergeFields;\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n  const aType = (0, utils_js_1.printTypeNode)(a.type);\n  const bType = (0, utils_js_1.printTypeNode)(b.type);\n  if (aType !== bType) {\n    const t1 = (0, utils_js_1.extractType)(a.type);\n    const t2 = (0, utils_js_1.extractType)(b.type);\n    if (t1.name.value !== t2.name.value) {\n      throw new Error(`Field \"${b.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n    }\n    if (!safeChangeForFieldType(a.type, b.type, !ignoreNullability)) {\n      throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n    }\n  }\n  if ((0, utils_js_1.isNonNullTypeNode)(b.type) && !(0, utils_js_1.isNonNullTypeNode)(a.type)) {\n    a.type = b.type;\n  }\n  return a;\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n  // both are named\n  if (!(0, utils_js_1.isWrappingTypeNode)(oldType) && !(0, utils_js_1.isWrappingTypeNode)(newType)) {\n    return oldType.toString() === newType.toString();\n  }\n  // new is non-null\n  if ((0, utils_js_1.isNonNullTypeNode)(newType)) {\n    const ofType = (0, utils_js_1.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n    return safeChangeForFieldType(ofType, newType.type);\n  }\n  // old is non-null\n  if ((0, utils_js_1.isNonNullTypeNode)(oldType)) {\n    return safeChangeForFieldType(newType, oldType, ignoreNullability);\n  }\n  // old is list\n  if ((0, utils_js_1.isListTypeNode)(oldType)) {\n    return (0, utils_js_1.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type) || (0, utils_js_1.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type']);\n  }\n  return false;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","mergeFields","utils_js_1","require","directives_js_1","utils_1","arguments_js_1","fieldAlreadyExists","fieldsArr","otherField","resultIndex","findIndex","field","name","type","f1","f2","config","directives","result","push","existing","existingIndex","ignoreFieldConflicts","newField","onFieldTypeConflict","throwOnConflict","preventConflicts","arguments","mergeArguments","mergeDirectives","description","sort","compareNodes","exclusions","filter","includes","a","b","ignoreNullability","aType","printTypeNode","bType","t1","extractType","t2","Error","safeChangeForFieldType","isNonNullTypeNode","oldType","newType","isWrappingTypeNode","toString","ofType","isListTypeNode"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/__virtual__/@graphql-tools-merge-virtual-3bffd3f135/0/cache/@graphql-tools-merge-npm-8.4.2-26df56fe04-96d57a3e81.zip/node_modules/@graphql-tools/merge/cjs/typedefs-mergers/fields.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeFields = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst arguments_js_1 = require(\"./arguments.js\");\nfunction fieldAlreadyExists(fieldsArr, otherField) {\n    const resultIndex = fieldsArr.findIndex(field => field.name.value === otherField.name.value);\n    return [resultIndex > -1 ? fieldsArr[resultIndex] : null, resultIndex];\n}\nfunction mergeFields(type, f1, f2, config, directives) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            const [existing, existingIndex] = fieldAlreadyExists(result, field);\n            if (existing && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                const newField = ((config === null || config === void 0 ? void 0 : config.onFieldTypeConflict) && config.onFieldTypeConflict(existing, field, type, config === null || config === void 0 ? void 0 : config.throwOnConflict)) ||\n                    preventConflicts(type, existing, field, config === null || config === void 0 ? void 0 : config.throwOnConflict);\n                newField.arguments = (0, arguments_js_1.mergeArguments)(field['arguments'] || [], existing['arguments'] || [], config);\n                newField.directives = (0, directives_js_1.mergeDirectives)(field.directives, existing.directives, config, directives);\n                newField.description = field.description || existing.description;\n                result[existingIndex] = newField;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nexports.mergeFields = mergeFields;\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0, utils_js_1.printTypeNode)(a.type);\n    const bType = (0, utils_js_1.printTypeNode)(b.type);\n    if (aType !== bType) {\n        const t1 = (0, utils_js_1.extractType)(a.type);\n        const t2 = (0, utils_js_1.extractType)(b.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${b.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n        if (!safeChangeForFieldType(a.type, b.type, !ignoreNullability)) {\n            throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n        }\n    }\n    if ((0, utils_js_1.isNonNullTypeNode)(b.type) && !(0, utils_js_1.isNonNullTypeNode)(a.type)) {\n        a.type = b.type;\n    }\n    return a;\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0, utils_js_1.isWrappingTypeNode)(oldType) && !(0, utils_js_1.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(newType)) {\n        const ofType = (0, utils_js_1.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0, utils_js_1.isListTypeNode)(oldType)) {\n        return (((0, utils_js_1.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0, utils_js_1.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC,MAAMC,eAAe,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAME,OAAO,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC/C,MAAMG,cAAc,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAChD,SAASI,kBAAkBA,CAACC,SAAS,EAAEC,UAAU,EAAE;EAC/C,MAAMC,WAAW,GAAGF,SAAS,CAACG,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACb,KAAK,KAAKS,UAAU,CAACI,IAAI,CAACb,KAAK,CAAC;EAC5F,OAAO,CAACU,WAAW,GAAG,CAAC,CAAC,GAAGF,SAAS,CAACE,WAAW,CAAC,GAAG,IAAI,EAAEA,WAAW,CAAC;AAC1E;AACA,SAAST,WAAWA,CAACa,IAAI,EAAEC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAEC,UAAU,EAAE;EACnD,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIH,EAAE,IAAI,IAAI,EAAE;IACZG,MAAM,CAACC,IAAI,CAAC,GAAGJ,EAAE,CAAC;EACtB;EACA,IAAID,EAAE,IAAI,IAAI,EAAE;IACZ,KAAK,MAAMH,KAAK,IAAIG,EAAE,EAAE;MACpB,MAAM,CAACM,QAAQ,EAAEC,aAAa,CAAC,GAAGf,kBAAkB,CAACY,MAAM,EAAEP,KAAK,CAAC;MACnE,IAAIS,QAAQ,IAAI,EAAEJ,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACM,oBAAoB,CAAC,EAAE;QAC5F,MAAMC,QAAQ,GAAI,CAACP,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACQ,mBAAmB,KAAKR,MAAM,CAACQ,mBAAmB,CAACJ,QAAQ,EAAET,KAAK,EAAEE,IAAI,EAAEG,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACS,eAAe,CAAC,IACvNC,gBAAgB,CAACb,IAAI,EAAEO,QAAQ,EAAET,KAAK,EAAEK,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACS,eAAe,CAAC;QACnHF,QAAQ,CAACI,SAAS,GAAG,CAAC,CAAC,EAAEtB,cAAc,CAACuB,cAAc,EAAEjB,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,EAAES,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,EAAEJ,MAAM,CAAC;QACtHO,QAAQ,CAACN,UAAU,GAAG,CAAC,CAAC,EAAEd,eAAe,CAAC0B,eAAe,EAAElB,KAAK,CAACM,UAAU,EAAEG,QAAQ,CAACH,UAAU,EAAED,MAAM,EAAEC,UAAU,CAAC;QACrHM,QAAQ,CAACO,WAAW,GAAGnB,KAAK,CAACmB,WAAW,IAAIV,QAAQ,CAACU,WAAW;QAChEZ,MAAM,CAACG,aAAa,CAAC,GAAGE,QAAQ;MACpC,CAAC,MACI;QACDL,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC;MACtB;IACJ;EACJ;EACA,IAAIK,MAAM,IAAIA,MAAM,CAACe,IAAI,EAAE;IACvBb,MAAM,CAACa,IAAI,CAAC3B,OAAO,CAAC4B,YAAY,CAAC;EACrC;EACA,IAAIhB,MAAM,IAAIA,MAAM,CAACiB,UAAU,EAAE;IAC7B,MAAMA,UAAU,GAAGjB,MAAM,CAACiB,UAAU;IACpC,OAAOf,MAAM,CAACgB,MAAM,CAACvB,KAAK,IAAI,CAACsB,UAAU,CAACE,QAAQ,CAAE,GAAEtB,IAAI,CAACD,IAAI,CAACb,KAAM,IAAGY,KAAK,CAACC,IAAI,CAACb,KAAM,EAAC,CAAC,CAAC;EACjG;EACA,OAAOmB,MAAM;AACjB;AACApB,OAAO,CAACE,WAAW,GAAGA,WAAW;AACjC,SAAS0B,gBAAgBA,CAACb,IAAI,EAAEuB,CAAC,EAAEC,CAAC,EAAEC,iBAAiB,GAAG,KAAK,EAAE;EAC7D,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEtC,UAAU,CAACuC,aAAa,EAAEJ,CAAC,CAACvB,IAAI,CAAC;EACnD,MAAM4B,KAAK,GAAG,CAAC,CAAC,EAAExC,UAAU,CAACuC,aAAa,EAAEH,CAAC,CAACxB,IAAI,CAAC;EACnD,IAAI0B,KAAK,KAAKE,KAAK,EAAE;IACjB,MAAMC,EAAE,GAAG,CAAC,CAAC,EAAEzC,UAAU,CAAC0C,WAAW,EAAEP,CAAC,CAACvB,IAAI,CAAC;IAC9C,MAAM+B,EAAE,GAAG,CAAC,CAAC,EAAE3C,UAAU,CAAC0C,WAAW,EAAEN,CAAC,CAACxB,IAAI,CAAC;IAC9C,IAAI6B,EAAE,CAAC9B,IAAI,CAACb,KAAK,KAAK6C,EAAE,CAAChC,IAAI,CAACb,KAAK,EAAE;MACjC,MAAM,IAAI8C,KAAK,CAAE,UAASR,CAAC,CAACzB,IAAI,CAACb,KAAM,yDAAwD2C,EAAE,CAAC9B,IAAI,CAACb,KAAM,sCAAqC6C,EAAE,CAAChC,IAAI,CAACb,KAAM,GAAE,CAAC;IACvK;IACA,IAAI,CAAC+C,sBAAsB,CAACV,CAAC,CAACvB,IAAI,EAAEwB,CAAC,CAACxB,IAAI,EAAE,CAACyB,iBAAiB,CAAC,EAAE;MAC7D,MAAM,IAAIO,KAAK,CAAE,UAAShC,IAAI,CAACD,IAAI,CAACb,KAAM,IAAGqC,CAAC,CAACxB,IAAI,CAACb,KAAM,wBAAuBwC,KAAM,SAAQE,KAAM,GAAE,CAAC;IAC5G;EACJ;EACA,IAAI,CAAC,CAAC,EAAExC,UAAU,CAAC8C,iBAAiB,EAAEV,CAAC,CAACxB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAEZ,UAAU,CAAC8C,iBAAiB,EAAEX,CAAC,CAACvB,IAAI,CAAC,EAAE;IACzFuB,CAAC,CAACvB,IAAI,GAAGwB,CAAC,CAACxB,IAAI;EACnB;EACA,OAAOuB,CAAC;AACZ;AACA,SAASU,sBAAsBA,CAACE,OAAO,EAAEC,OAAO,EAAEX,iBAAiB,GAAG,KAAK,EAAE;EACzE;EACA,IAAI,CAAC,CAAC,CAAC,EAAErC,UAAU,CAACiD,kBAAkB,EAAEF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE/C,UAAU,CAACiD,kBAAkB,EAAED,OAAO,CAAC,EAAE;IAC9F,OAAOD,OAAO,CAACG,QAAQ,CAAC,CAAC,KAAKF,OAAO,CAACE,QAAQ,CAAC,CAAC;EACpD;EACA;EACA,IAAI,CAAC,CAAC,EAAElD,UAAU,CAAC8C,iBAAiB,EAAEE,OAAO,CAAC,EAAE;IAC5C,MAAMG,MAAM,GAAG,CAAC,CAAC,EAAEnD,UAAU,CAAC8C,iBAAiB,EAAEC,OAAO,CAAC,GAAGA,OAAO,CAACnC,IAAI,GAAGmC,OAAO;IAClF,OAAOF,sBAAsB,CAACM,MAAM,EAAEH,OAAO,CAACpC,IAAI,CAAC;EACvD;EACA;EACA,IAAI,CAAC,CAAC,EAAEZ,UAAU,CAAC8C,iBAAiB,EAAEC,OAAO,CAAC,EAAE;IAC5C,OAAOF,sBAAsB,CAACG,OAAO,EAAED,OAAO,EAAEV,iBAAiB,CAAC;EACtE;EACA;EACA,IAAI,CAAC,CAAC,EAAErC,UAAU,CAACoD,cAAc,EAAEL,OAAO,CAAC,EAAE;IACzC,OAAS,CAAC,CAAC,EAAE/C,UAAU,CAACoD,cAAc,EAAEJ,OAAO,CAAC,IAAIH,sBAAsB,CAACE,OAAO,CAACnC,IAAI,EAAEoC,OAAO,CAACpC,IAAI,CAAC,IACjG,CAAC,CAAC,EAAEZ,UAAU,CAAC8C,iBAAiB,EAAEE,OAAO,CAAC,IAAIH,sBAAsB,CAACE,OAAO,EAAEC,OAAO,CAAC,MAAM,CAAC,CAAE;EACxG;EACA,OAAO,KAAK;AAChB"},"metadata":{},"sourceType":"module"}