{"ast":null,"code":"\"use strict\";\n\nconst url = require('url');\nconst {\n  getCommaDelimitedHeaders,\n  parseCookie\n} = require('../utils');\nfunction getRequestValuesFromHttpFunctionEvent({\n  event\n}) {\n  const context = event.req;\n  const method = context.method;\n  const urlObject = new url.URL(context.url);\n  const path = urlObject.pathname + urlObject.search;\n  const headers = {\n    cookies: context.headers.cookie\n  };\n  Object.entries(context.headers).forEach(([headerKey, headerValue]) => {\n    headers[headerKey.toLowerCase()] = headerValue;\n  });\n  const remoteAddress = headers['x-forwarded-for'];\n  const body = context.rawBody;\n  if (body) {\n    headers['content-length'] = Buffer.byteLength(body, 'utf8');\n  }\n  return {\n    method,\n    headers,\n    body,\n    remoteAddress,\n    path\n  };\n}\nfunction getResponseToHttpFunction({\n  statusCode,\n  body,\n  headers = {},\n  isBase64Encoded = false,\n  response = {}\n}) {\n  const responseToHttpFunction = {\n    statusCode,\n    body,\n    isBase64Encoded\n  };\n  if (isBase64Encoded) {\n    responseToHttpFunction.body = Buffer.from(body, 'base64');\n    responseToHttpFunction.isBase64Encoded = false;\n  }\n  const cookies = [];\n  // headers['set-cookie'] can be a string of one cookie, or an array of cookies\n  // headerCookies should always be an array\n  const headerCookies = [].concat(headers['set-cookie'] || []);\n\n  // Convert 'set-cookie' to Azure Function 3.x cookie object array\n  // https://github.com/Azure/azure-functions-nodejs-worker/blob/v3.x/types/index.d.ts#L150\n  if (headerCookies.length > 0) {\n    for (const headerCookie of headerCookies) {\n      const parsedCookie = parseCookie(headerCookie);\n      const nameValueTuple = headerCookie.split(';')[0].split('=');\n      const cookie = {\n        name: nameValueTuple[0],\n        value: nameValueTuple[1]\n      };\n      if (headerCookie.toLowerCase().includes('httponly')) {\n        cookie.httpOnly = true;\n      }\n      if (headerCookie.toLowerCase().includes('secure')) {\n        cookie.secure = true;\n      }\n      if (parsedCookie['max-age']) {\n        cookie.maxAge = +parsedCookie['max-age'];\n      }\n      if (parsedCookie.samesite) {\n        cookie.sameSite = parsedCookie.samesite;\n      }\n      if (parsedCookie.expires && typeof parsedCookie.expires === 'string') {\n        cookie.expires = new Date(parsedCookie.expires);\n      } else if (parsedCookie.expires && typeof parsedCookie.expires === 'number') {\n        cookie.expires = parsedCookie.expires;\n      }\n      if (parsedCookie.path) {\n        cookie.path = parsedCookie.path;\n      }\n      if (parsedCookie.domain) {\n        cookie.domain = parsedCookie.domain;\n      }\n      cookies.push(cookie);\n    }\n    responseToHttpFunction.cookies = cookies;\n    delete headers['set-cookie'];\n  }\n  responseToHttpFunction.headers = getCommaDelimitedHeaders({\n    headersMap: headers\n  });\n  return responseToHttpFunction;\n}\nmodule.exports = {\n  getRequest: getRequestValuesFromHttpFunctionEvent,\n  getResponse: getResponseToHttpFunction\n};","map":{"version":3,"names":["url","require","getCommaDelimitedHeaders","parseCookie","getRequestValuesFromHttpFunctionEvent","event","context","req","method","urlObject","URL","path","pathname","search","headers","cookies","cookie","Object","entries","forEach","headerKey","headerValue","toLowerCase","remoteAddress","body","rawBody","Buffer","byteLength","getResponseToHttpFunction","statusCode","isBase64Encoded","response","responseToHttpFunction","from","headerCookies","concat","length","headerCookie","parsedCookie","nameValueTuple","split","name","value","includes","httpOnly","secure","maxAge","samesite","sameSite","expires","Date","domain","push","headersMap","module","exports","getRequest","getResponse"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/@vendia-serverless-express-npm-4.10.4-2e67e59920-f33d3f0f08.zip/node_modules/@vendia/serverless-express/src/event-sources/azure/http-function-runtime-v3.js"],"sourcesContent":["const url = require('url')\nconst { getCommaDelimitedHeaders, parseCookie } = require('../utils')\n\nfunction getRequestValuesFromHttpFunctionEvent ({ event }) {\n  const context = event.req\n\n  const method = context.method\n  const urlObject = new url.URL(context.url)\n  const path = urlObject.pathname + urlObject.search\n  const headers = { cookies: context.headers.cookie }\n\n  Object.entries(context.headers).forEach(([headerKey, headerValue]) => {\n    headers[headerKey.toLowerCase()] = headerValue\n  })\n\n  const remoteAddress = headers['x-forwarded-for']\n\n  const body = context.rawBody\n  if (body) {\n    headers['content-length'] = Buffer.byteLength(body, 'utf8')\n  }\n\n  return {\n    method,\n    headers,\n    body,\n    remoteAddress,\n    path\n  }\n}\n\nfunction getResponseToHttpFunction ({ statusCode, body, headers = {}, isBase64Encoded = false, response = {} }) {\n  const responseToHttpFunction = {\n    statusCode,\n    body,\n    isBase64Encoded\n  }\n\n  if (isBase64Encoded) {\n    responseToHttpFunction.body = Buffer.from(body, 'base64')\n    responseToHttpFunction.isBase64Encoded = false\n  }\n\n  const cookies = []\n  // headers['set-cookie'] can be a string of one cookie, or an array of cookies\n  // headerCookies should always be an array\n  const headerCookies = [].concat(headers['set-cookie'] || [])\n\n  // Convert 'set-cookie' to Azure Function 3.x cookie object array\n  // https://github.com/Azure/azure-functions-nodejs-worker/blob/v3.x/types/index.d.ts#L150\n  if (headerCookies.length > 0) {\n    for (const headerCookie of headerCookies) {\n      const parsedCookie = parseCookie(headerCookie)\n      const nameValueTuple = headerCookie.split(';')[0].split('=')\n\n      const cookie = { name: nameValueTuple[0], value: nameValueTuple[1] }\n\n      if (headerCookie.toLowerCase().includes('httponly')) {\n        cookie.httpOnly = true\n      }\n\n      if (headerCookie.toLowerCase().includes('secure')) {\n        cookie.secure = true\n      }\n\n      if (parsedCookie['max-age']) {\n        cookie.maxAge = +parsedCookie['max-age']\n      }\n\n      if (parsedCookie.samesite) {\n        cookie.sameSite = parsedCookie.samesite\n      }\n\n      if (parsedCookie.expires && typeof parsedCookie.expires === 'string') {\n        cookie.expires = new Date(parsedCookie.expires)\n      } else if (parsedCookie.expires && typeof parsedCookie.expires === 'number') {\n        cookie.expires = parsedCookie.expires\n      }\n\n      if (parsedCookie.path) {\n        cookie.path = parsedCookie.path\n      }\n\n      if (parsedCookie.domain) {\n        cookie.domain = parsedCookie.domain\n      }\n\n      cookies.push(cookie)\n    }\n\n    responseToHttpFunction.cookies = cookies\n    delete headers['set-cookie']\n  }\n\n  responseToHttpFunction.headers = getCommaDelimitedHeaders({ headersMap: headers })\n\n  return responseToHttpFunction\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromHttpFunctionEvent,\n  getResponse: getResponseToHttpFunction\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}