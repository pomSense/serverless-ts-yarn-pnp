{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = undefined && undefined.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = undefined && undefined.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = undefined && undefined.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApolloServer = void 0;\nconst apollo_server_express_1 = require(\"apollo-server-express\");\nconst express_1 = __importDefault(require(\"express\"));\nconst serverless_express_1 = __importStar(require(\"@vendia/serverless-express\"));\nfunction defaultExpressAppFromMiddleware(middleware) {\n  const app = (0, express_1.default)();\n  app.use(middleware);\n  return app;\n}\nclass ApolloServer extends apollo_server_express_1.ApolloServer {\n  serverlessFramework() {\n    return true;\n  }\n  createHandler(options) {\n    let realHandler;\n    return async (...args) => {\n      var _a;\n      await this.ensureStarted();\n      if (!realHandler) {\n        const middleware = this.getMiddleware({\n          path: '/',\n          ...(options === null || options === void 0 ? void 0 : options.expressGetMiddlewareOptions)\n        });\n        const app = ((_a = options === null || options === void 0 ? void 0 : options.expressAppFromMiddleware) !== null && _a !== void 0 ? _a : defaultExpressAppFromMiddleware)(middleware);\n        realHandler = (0, serverless_express_1.default)({\n          app\n        });\n      }\n      return await realHandler(...args);\n    };\n  }\n  async createGraphQLServerOptions(req, res) {\n    const {\n      event,\n      context\n    } = (0, serverless_express_1.getCurrentInvoke)();\n    const contextParams = {\n      event,\n      context,\n      express: {\n        req,\n        res\n      }\n    };\n    return super.graphQLServerOptions(contextParams);\n  }\n}\nexports.ApolloServer = ApolloServer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAAA,uBAAA,GAAAC,OAAA;AAMA,MAAAC,SAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,MAAAG,oBAAA,GAAAC,YAAA,CAAAJ,OAAA;AAiBA,SAASK,+BAA+BA,CACtCC,UAAkC;EAElC,MAAMC,GAAG,GAAG,IAAAN,SAAA,CAAAO,OAAO,GAAE;EACrBD,GAAG,CAACE,GAAG,CAACH,UAAU,CAAC;EACnB,OAAOC,GAAG;AACZ;AACA,MAAaG,YAAa,SAAQX,uBAAA,CAAAW,YAAgD;EAC7DC,mBAAmBA,CAAA;IACpC,OAAO,IAAI;EACb;EAEOC,aAAaA,CAClBC,OAA8B;IAE9B,IAAIC,WAAqC;IACzC,OAAO,OAAO,GAAGC,IAAI,KAAI;;MACvB,MAAM,IAAI,CAACC,aAAa,EAAE;MAC1B,IAAI,CAACF,WAAW,EAAE;QAChB,MAAMR,UAAU,GAAG,IAAI,CAACW,aAAa,CAInC;UACEC,IAAI,EAAE,GAAG;UACT,IAAGL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,2BAA2B;SACxC,CACF;QACD,MAAMZ,GAAG,GAAG,CACV,CAAAa,EAAA,GAAAP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,wBAAwB,cAAAD,EAAA,cAAAA,EAAA,GAAIf,+BAA+B,EACpEC,UAAU,CAAC;QACbQ,WAAW,GAAG,IAAAX,oBAAA,CAAAK,OAAiB,EAAC;UAAED;QAAG,CAAE,CAAC;;MAE1C,OAAQ,MAAMO,WAAW,CAAC,GAAGC,IAAI,CAAC;IACpC,CAAC;EACH;EAMS,MAAMO,0BAA0BA,CACvCC,GAAoB,EACpBC,GAAqB;IAErB,MAAM;MAAEC,KAAK;MAAEC;IAAO,CAAE,GAAG,IAAAvB,oBAAA,CAAAwB,gBAAgB,GAAE;IAC7C,MAAMC,aAAa,GAAgC;MACjDH,KAAK;MACLC,OAAO;MACPG,OAAO,EAAE;QAAEN,GAAG;QAAEC;MAAG;KACpB;IACD,OAAO,KAAK,CAACM,oBAAoB,CAACF,aAAa,CAAC;EAClD;;AA7CFG,OAAA,CAAArB,YAAA,GAAAA,YAAA","names":["apollo_server_express_1","require","express_1","__importDefault","serverless_express_1","__importStar","defaultExpressAppFromMiddleware","middleware","app","default","use","ApolloServer","serverlessFramework","createHandler","options","realHandler","args","ensureStarted","getMiddleware","path","expressGetMiddlewareOptions","_a","expressAppFromMiddleware","createGraphQLServerOptions","req","res","event","context","getCurrentInvoke","contextParams","express","graphQLServerOptions","exports"],"sourceRoot":"","sources":["../src/ApolloServer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}