{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Supergraph = exports.isFed1Supergraph = exports.validateSupergraph = exports.DEFAULT_SUPPORTED_SUPERGRAPH_FEATURES = void 0;\nconst coreSpec_1 = require(\"./coreSpec\");\nconst definitions_1 = require(\"./definitions\");\nconst joinSpec_1 = require(\"./joinSpec\");\nconst buildSchema_1 = require(\"./buildSchema\");\nconst extractSubgraphsFromSupergraph_1 = require(\"./extractSubgraphsFromSupergraph\");\nconst error_1 = require(\"./error\");\nexports.DEFAULT_SUPPORTED_SUPERGRAPH_FEATURES = new Set(['https://specs.apollo.dev/core/v0.1', 'https://specs.apollo.dev/core/v0.2', 'https://specs.apollo.dev/join/v0.1', 'https://specs.apollo.dev/join/v0.2', 'https://specs.apollo.dev/join/v0.3', 'https://specs.apollo.dev/tag/v0.1', 'https://specs.apollo.dev/tag/v0.2', 'https://specs.apollo.dev/tag/v0.3', 'https://specs.apollo.dev/inaccessible/v0.1', 'https://specs.apollo.dev/inaccessible/v0.2']);\nconst coreVersionZeroDotOneUrl = coreSpec_1.FeatureUrl.parse('https://specs.apollo.dev/core/v0.1');\nfunction checkFeatureSupport(coreFeatures, supportedFeatures) {\n  const errors = [];\n  const coreItself = coreFeatures.coreItself;\n  if (coreItself.url.equals(coreVersionZeroDotOneUrl)) {\n    const purposefulFeatures = [...coreFeatures.allFeatures()].filter(f => f.purpose);\n    if (purposefulFeatures.length > 0) {\n      errors.push(error_1.ERRORS.UNSUPPORTED_LINKED_FEATURE.err(`the \\`for:\\` argument is unsupported by version ${coreItself.url.version} ` + `of the core spec. Please upgrade to at least @core v0.2 (https://specs.apollo.dev/core/v0.2).`, {\n        nodes: (0, definitions_1.sourceASTs)(coreItself.directive, ...purposefulFeatures.map(f => f.directive))\n      }));\n    }\n  }\n  for (const feature of coreFeatures.allFeatures()) {\n    if (feature.url.equals(coreVersionZeroDotOneUrl) || feature.purpose === 'EXECUTION' || feature.purpose === 'SECURITY') {\n      if (!supportedFeatures.has(feature.url.base.toString())) {\n        errors.push(error_1.ERRORS.UNSUPPORTED_LINKED_FEATURE.err(`feature ${feature.url} is for: ${feature.purpose} but is unsupported`, {\n          nodes: feature.directive.sourceAST\n        }));\n      }\n    }\n  }\n  if (errors.length > 0) {\n    throw (0, coreSpec_1.ErrCoreCheckFailed)(errors);\n  }\n}\nfunction validateSupergraph(supergraph) {\n  const coreFeatures = supergraph.coreFeatures;\n  if (!coreFeatures) {\n    throw error_1.ERRORS.INVALID_FEDERATION_SUPERGRAPH.err(\"Invalid supergraph: must be a core schema\");\n  }\n  const joinFeature = coreFeatures.getByIdentity(joinSpec_1.joinIdentity);\n  if (!joinFeature) {\n    throw error_1.ERRORS.INVALID_FEDERATION_SUPERGRAPH.err(\"Invalid supergraph: must use the join spec\");\n  }\n  const joinSpec = joinSpec_1.JOIN_VERSIONS.find(joinFeature.url.version);\n  if (!joinSpec) {\n    throw error_1.ERRORS.INVALID_FEDERATION_SUPERGRAPH.err(`Invalid supergraph: uses unsupported join spec version ${joinFeature.url.version} (supported versions: ${joinSpec_1.JOIN_VERSIONS.versions().join(', ')})`);\n  }\n  return [coreFeatures, joinSpec];\n}\nexports.validateSupergraph = validateSupergraph;\nfunction isFed1Supergraph(supergraph) {\n  return validateSupergraph(supergraph)[1].version.equals(new coreSpec_1.FeatureVersion(0, 1));\n}\nexports.isFed1Supergraph = isFed1Supergraph;\nclass Supergraph {\n  constructor(schema, supportedFeatures = exports.DEFAULT_SUPPORTED_SUPERGRAPH_FEATURES, shouldValidate = true) {\n    this.schema = schema;\n    this.shouldValidate = shouldValidate;\n    const [coreFeatures] = validateSupergraph(schema);\n    if (supportedFeatures !== null) {\n      checkFeatureSupport(coreFeatures, supportedFeatures);\n    }\n    if (shouldValidate) {\n      schema.validate();\n    } else {\n      schema.assumeValid();\n    }\n    this.containedSubgraphs = (0, extractSubgraphsFromSupergraph_1.extractSubgraphsNamesAndUrlsFromSupergraph)(schema);\n  }\n  static build(supergraphSdl, options) {\n    const schema = typeof supergraphSdl === 'string' ? (0, buildSchema_1.buildSchema)(supergraphSdl, {\n      validate: false\n    }) : (0, buildSchema_1.buildSchemaFromAST)(supergraphSdl, {\n      validate: false\n    });\n    return new Supergraph(schema, options === null || options === void 0 ? void 0 : options.supportedFeatures, options === null || options === void 0 ? void 0 : options.validateSupergraph);\n  }\n  subgraphsMetadata() {\n    return this.containedSubgraphs;\n  }\n  subgraphs() {\n    if (!this._subgraphs) {\n      this._subgraphs = (0, extractSubgraphsFromSupergraph_1.extractSubgraphsFromSupergraph)(this.schema, this.shouldValidate);\n    }\n    return this._subgraphs;\n  }\n  apiSchema() {\n    return this.schema.toAPISchema();\n  }\n}\nexports.Supergraph = Supergraph;","map":{"version":3,"mappings":"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","names":["coreSpec_1","require","definitions_1","joinSpec_1","buildSchema_1","extractSubgraphsFromSupergraph_1","error_1","exports","DEFAULT_SUPPORTED_SUPERGRAPH_FEATURES","Set","coreVersionZeroDotOneUrl","FeatureUrl","parse","checkFeatureSupport","coreFeatures","supportedFeatures","errors","coreItself","url","equals","purposefulFeatures","allFeatures","filter","f","purpose","length","push","ERRORS","UNSUPPORTED_LINKED_FEATURE","err","version","nodes","sourceASTs","directive","map","feature","has","base","toString","sourceAST","ErrCoreCheckFailed","validateSupergraph","supergraph","INVALID_FEDERATION_SUPERGRAPH","joinFeature","getByIdentity","joinIdentity","joinSpec","JOIN_VERSIONS","find","versions","join","isFed1Supergraph","FeatureVersion","Supergraph","constructor","schema","shouldValidate","validate","assumeValid","containedSubgraphs","extractSubgraphsNamesAndUrlsFromSupergraph","build","supergraphSdl","options","buildSchema","buildSchemaFromAST","subgraphsMetadata","subgraphs","_subgraphs","extractSubgraphsFromSupergraph","apiSchema","toAPISchema"],"sourceRoot":"","sources":["../src/supergraphs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}