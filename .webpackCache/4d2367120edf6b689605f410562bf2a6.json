{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildFederatedSchema = exports.buildSubgraphSchema = void 0;\nconst util_1 = require(\"util\");\nconst graphql_1 = require(\"graphql\");\nconst schema_helper_1 = require(\"./schema-helper\");\nconst federation_internals_1 = require(\"@apollo/federation-internals\");\nconst types_1 = require(\"./types\");\nfunction buildSubgraphSchema(modulesOrSDL) {\n  var _a;\n  let shapedModulesOrSDL;\n  if ('typeDefs' in modulesOrSDL) {\n    const {\n      typeDefs,\n      resolvers\n    } = modulesOrSDL;\n    const augmentedTypeDefs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n    shapedModulesOrSDL = augmentedTypeDefs.map((typeDefs, i) => {\n      const module = {\n        typeDefs\n      };\n      if (i === 0 && resolvers) module.resolvers = resolvers;\n      return module;\n    });\n  } else {\n    shapedModulesOrSDL = modulesOrSDL;\n  }\n  const modules = (0, schema_helper_1.modulesFromSDL)(shapedModulesOrSDL);\n  const documentAST = (0, graphql_1.concatAST)(modules.map(module => module.typeDefs));\n  const subgraph = (0, federation_internals_1.buildSubgraph)(federation_internals_1.FEDERATION_UNNAMED_SUBGRAPH_NAME, '', documentAST, false);\n  const sdl = (0, federation_internals_1.printSchema)(subgraph.schema);\n  const schema = subgraph.schema.toGraphQLJSSchema(true);\n  const queryRootName = (_a = subgraph.schema.schemaDefinition.rootType('query')) === null || _a === void 0 ? void 0 : _a.name;\n  (0, federation_internals_1.assert)(queryRootName, 'A Query root type should have been added by `buildSubgraph`');\n  (0, schema_helper_1.addResolversToSchema)(schema, {\n    [queryRootName]: {\n      _service: () => ({\n        sdl\n      })\n    }\n  });\n  if (subgraph.metadata().entityType()) {\n    (0, schema_helper_1.addResolversToSchema)(schema, {\n      [queryRootName]: {\n        _entities: (_source, {\n          representations\n        }, context, info) => (0, types_1.entitiesResolver)({\n          representations,\n          context,\n          info\n        })\n      },\n      _Entity: {\n        __resolveType(parent) {\n          return parent.__typename;\n        }\n      }\n    });\n  }\n  for (const module of modules) {\n    if (!module.resolvers) continue;\n    (0, schema_helper_1.addResolversToSchema)(schema, module.resolvers);\n  }\n  return schema;\n}\nexports.buildSubgraphSchema = buildSubgraphSchema;\nexports.buildFederatedSchema = (0, util_1.deprecate)(buildSubgraphSchema, `'buildFederatedSchema' is deprecated. Use 'buildSubgraphSchema' instead.`);","map":{"version":3,"mappings":"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","names":["util_1","require","graphql_1","schema_helper_1","federation_internals_1","types_1","buildSubgraphSchema","modulesOrSDL","shapedModulesOrSDL","typeDefs","resolvers","augmentedTypeDefs","Array","isArray","map","i","module","modules","modulesFromSDL","documentAST","concatAST","subgraph","buildSubgraph","FEDERATION_UNNAMED_SUBGRAPH_NAME","sdl","printSchema","schema","toGraphQLJSSchema","queryRootName","_a","schemaDefinition","rootType","name","assert","addResolversToSchema","_service","metadata","entityType","_entities","_source","representations","context","info","entitiesResolver","_Entity","__resolveType","parent","__typename","exports","buildFederatedSchema","deprecate"],"sourceRoot":"","sources":["../src/buildSubgraphSchema.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}