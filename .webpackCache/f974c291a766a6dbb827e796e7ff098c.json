{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateMiddlewareGeneratorFromRuleTree = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"./utils\");\nconst validation_1 = require(\"./validation\");\n/**\n *\n * @param options\n *\n * Generates a middleware function from a given rule and\n * initializes the cache object in context.\n *\n */\nfunction generateFieldMiddlewareFromRule(rule, options) {\n  async function middleware(resolve, parent, args, ctx, info) {\n    // Cache\n    if (!ctx) {\n      ctx = {};\n    }\n    if (!ctx._shield) {\n      ctx._shield = {\n        cache: {}\n      };\n    }\n    // Execution\n    try {\n      const res = await rule.resolve(parent, args, ctx, info, options);\n      if (res === true) {\n        return await resolve(parent, args, ctx, info);\n      } else if (res === false) {\n        if (typeof options.fallbackError === 'function') {\n          return await options.fallbackError(null, parent, args, ctx, info);\n        }\n        return options.fallbackError;\n      } else {\n        return res;\n      }\n    } catch (err) {\n      if (options.debug) {\n        throw err;\n      } else if (options.allowExternalErrors) {\n        return err;\n      } else {\n        if (typeof options.fallbackError === 'function') {\n          return await options.fallbackError(err, parent, args, ctx, info);\n        }\n        return options.fallbackError;\n      }\n    }\n  }\n  if (utils_1.isRule(rule) && rule.extractFragment()) {\n    return {\n      fragment: rule.extractFragment(),\n      resolve: middleware\n    };\n  }\n  if (utils_1.isLogicRule(rule)) {\n    return {\n      fragments: rule.extractFragments(),\n      resolve: middleware\n    };\n  }\n  return middleware;\n}\n/**\n *\n * @param type\n * @param rules\n * @param options\n *\n * Generates middleware from rule for a particular type.\n *\n */\nfunction applyRuleToType(type, rules, options) {\n  if (utils_1.isRuleFunction(rules)) {\n    /* Apply defined rule function to every field */\n    const fieldMap = type.getFields();\n    const middleware = Object.keys(fieldMap).reduce((middleware, field) => {\n      return Object.assign(Object.assign({}, middleware), {\n        [field]: generateFieldMiddlewareFromRule(rules, options)\n      });\n    }, {});\n    return middleware;\n  } else if (utils_1.isRuleFieldMap(rules)) {\n    /* Apply rules assigned to each field to each field */\n    const fieldMap = type.getFields();\n    /* Extract default type wildcard if any and remove it for validation */\n    const defaultTypeRule = rules['*'];\n    delete rules['*'];\n    /* Validation */\n    const fieldErrors = Object.keys(rules).filter(type => !Object.prototype.hasOwnProperty.call(fieldMap, type)).map(field => `${type.name}.${field}`).join(', ');\n    if (fieldErrors.length > 0) {\n      throw new validation_1.ValidationError(`It seems like you have applied rules to ${fieldErrors} fields but Shield cannot find them in your schema.`);\n    }\n    /* Generation */\n    const middleware = Object.keys(fieldMap).reduce((middleware, field) => Object.assign(Object.assign({}, middleware), {\n      [field]: generateFieldMiddlewareFromRule(utils_1.withDefault(defaultTypeRule || options.fallbackRule)(rules[field]), options)\n    }), {});\n    return middleware;\n  } else {\n    /* Apply fallbackRule to type with no defined rule */\n    const fieldMap = type.getFields();\n    const middleware = Object.keys(fieldMap).reduce((middleware, field) => Object.assign(Object.assign({}, middleware), {\n      [field]: generateFieldMiddlewareFromRule(options.fallbackRule, options)\n    }), {});\n    return middleware;\n  }\n}\n/**\n *\n * @param schema\n * @param rule\n * @param options\n *\n * Applies the same rule over entire schema.\n *\n */\nfunction applyRuleToSchema(schema, rule, options) {\n  const typeMap = schema.getTypeMap();\n  const middleware = Object.keys(typeMap).filter(type => !graphql_1.isIntrospectionType(typeMap[type])).reduce((middleware, typeName) => {\n    const type = typeMap[typeName];\n    if (graphql_1.isObjectType(type)) {\n      return Object.assign(Object.assign({}, middleware), {\n        [typeName]: applyRuleToType(type, rule, options)\n      });\n    } else {\n      return middleware;\n    }\n  }, {});\n  return middleware;\n}\n/**\n *\n * @param rules\n * @param wrapper\n *\n * Converts rule tree to middleware.\n *\n */\nfunction generateMiddlewareFromSchemaAndRuleTree(schema, rules, options) {\n  if (utils_1.isRuleFunction(rules)) {\n    /* Applies rule to entire schema. */\n    return applyRuleToSchema(schema, rules, options);\n  } else {\n    /**\n     * Checks type map and field map and applies rules\n     * to particular fields.\n     */\n    const typeMap = schema.getTypeMap();\n    /* Validation */\n    const typeErrors = Object.keys(rules).filter(type => !Object.prototype.hasOwnProperty.call(typeMap, type)).join(', ');\n    if (typeErrors.length > 0) {\n      throw new validation_1.ValidationError(`It seems like you have applied rules to ${typeErrors} types but Shield cannot find them in your schema.`);\n    }\n    // Generation\n    const middleware = Object.keys(typeMap).filter(type => !graphql_1.isIntrospectionType(typeMap[type])).reduce((middleware, typeName) => {\n      const type = typeMap[typeName];\n      if (graphql_1.isObjectType(type)) {\n        return Object.assign(Object.assign({}, middleware), {\n          [typeName]: applyRuleToType(type, rules[typeName], options)\n        });\n      } else {\n        return middleware;\n      }\n    }, {});\n    return middleware;\n  }\n}\n/**\n *\n * @param ruleTree\n * @param options\n *\n * Generates middleware from given rules.\n *\n */\nfunction generateMiddlewareGeneratorFromRuleTree(ruleTree, options) {\n  return schema => generateMiddlewareFromSchemaAndRuleTree(schema, ruleTree, options);\n}\nexports.generateMiddlewareGeneratorFromRuleTree = generateMiddlewareGeneratorFromRuleTree;","map":{"version":3,"mappings":"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","names":["graphql_1","require","utils_1","validation_1","generateFieldMiddlewareFromRule","rule","options","middleware","resolve","parent","args","ctx","info","_shield","cache","res","fallbackError","err","debug","allowExternalErrors","isRule","extractFragment","fragment","isLogicRule","fragments","extractFragments","applyRuleToType","type","rules","isRuleFunction","fieldMap","getFields","Object","keys","reduce","field","assign","isRuleFieldMap","defaultTypeRule","fieldErrors","filter","prototype","hasOwnProperty","call","map","name","join","length","ValidationError","withDefault","fallbackRule","applyRuleToSchema","schema","typeMap","getTypeMap","isIntrospectionType","typeName","isObjectType","generateMiddlewareFromSchemaAndRuleTree","typeErrors","generateMiddlewareGeneratorFromRuleTree","ruleTree","exports"],"sourceRoot":"","sources":["../src/generator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}