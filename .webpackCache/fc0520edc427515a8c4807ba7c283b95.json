{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _baseAssignValue = require(\"./_baseAssignValue.js\");\nvar _baseAssignValue2 = _interopRequireDefault(_baseAssignValue);\nvar _baseForOwn = require(\"./_baseForOwn.js\");\nvar _baseForOwn2 = _interopRequireDefault(_baseForOwn);\nvar _baseIteratee = require(\"./_baseIteratee.js\");\nvar _baseIteratee2 = _interopRequireDefault(_baseIteratee);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = (0, _baseIteratee2.default)(iteratee, 3);\n  (0, _baseForOwn2.default)(object, function (value, key, object) {\n    (0, _baseAssignValue2.default)(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\nexports.default = mapKeys;","map":{"version":3,"names":["_baseAssignValue","require","_baseAssignValue2","_interopRequireDefault","_baseForOwn","_baseForOwn2","_baseIteratee","_baseIteratee2","obj","__esModule","default","mapKeys","object","iteratee","result","baseIteratee","baseForOwn","value","key","baseAssignValue","exports"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-05cbffad6e.zip/node_modules/lodash-es/mapKeys.js"],"sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nexport default mapKeys;\n"],"mappings":";;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAAoD,IAAAC,iBAAA,GAAAC,sBAAA,CAAAH,gBAAA;AACpD,IAAAI,WAAA,GAAAH,OAAA;AAA0C,IAAAI,YAAA,GAAAF,sBAAA,CAAAC,WAAA;AAC1C,IAAAE,aAAA,GAAAL,OAAA;AAA8C,IAAAM,cAAA,GAAAJ,sBAAA,CAAAG,aAAA;AAAA,SAAAH,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,OAAOA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACjC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACfD,QAAQ,GAAG,IAAAE,sBAAY,EAACF,QAAQ,EAAE,CAAC,CAAC;EAEpC,IAAAG,oBAAU,EAACJ,MAAM,EAAE,UAASK,KAAK,EAAEC,GAAG,EAAEN,MAAM,EAAE;IAC9C,IAAAO,yBAAe,EAACL,MAAM,EAAED,QAAQ,CAACI,KAAK,EAAEC,GAAG,EAAEN,MAAM,CAAC,EAAEK,KAAK,CAAC;EAC9D,CAAC,CAAC;EACF,OAAOH,MAAM;AACf;AAACM,OAAA,CAAAV,OAAA,GAEcC,OAAO"},"metadata":{},"sourceType":"module"}