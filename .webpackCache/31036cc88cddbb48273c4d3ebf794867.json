{"ast":null,"code":"\"use strict\";\n\n/**\n * DynamoDB Toolbox: A simple set of tools for working with Amazon DynamoDB\n * @author Jeremy Daly <jeremy@jeremydaly.com>\n * @license MIT\n */\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst validateTypes_1 = __importDefault(require(\"./validateTypes\"));\nconst utils_1 = require(\"./utils\");\n// Get partitionKey/sortKey\nexports.default = DocumentClient => (data, schema, partitionKey, sortKey) => {\n  // TODO: Think about a better way to reference pk/sk - can it work with secondary indexes?\n  partitionKey = schema[partitionKey].map || partitionKey;\n  sortKey = schema[sortKey] && schema[sortKey].map || sortKey || null;\n  // Intialize validate type\n  let validateType = validateTypes_1.default(DocumentClient);\n  // TODO: Add tests for 0 values\n  let pk = data[partitionKey];\n  if (pk === undefined || pk === null || pk === '') {\n    utils_1.error(`'${partitionKey}'${schema[partitionKey].alias ? ` or '${schema[partitionKey].alias}'` : ''} is required`);\n  }\n  const sk = data[sortKey];\n  if (sortKey && (sk === undefined || sk === null || sk === '')) {\n    utils_1.error(`'${sortKey}'${schema[sortKey].alias ? ` or '${schema[sortKey].alias}'` : ''} is required`);\n  }\n  return Object.assign({\n    [partitionKey]: utils_1.transformAttr(schema[partitionKey], validateType(schema[partitionKey], partitionKey, pk), data)\n  }, sortKey !== null ? {\n    [sortKey]: utils_1.transformAttr(schema[sortKey], validateType(schema[sortKey], sortKey, sk), data)\n  } : {}); // end assign\n}; // end get keys","map":{"version":3,"names":["__importDefault","undefined","mod","__esModule","Object","defineProperty","exports","value","validateTypes_1","require","utils_1","default","DocumentClient","data","schema","partitionKey","sortKey","map","validateType","pk","error","alias","sk","assign","transformAttr"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/dynamodb-toolbox-npm-0.3.5-3ff4bf5328-d75542b529.zip/node_modules/dynamodb-toolbox/dist/lib/getKey.js"],"sourcesContent":["\"use strict\";\n/**\n * DynamoDB Toolbox: A simple set of tools for working with Amazon DynamoDB\n * @author Jeremy Daly <jeremy@jeremydaly.com>\n * @license MIT\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validateTypes_1 = __importDefault(require(\"./validateTypes\"));\nconst utils_1 = require(\"./utils\");\n// Get partitionKey/sortKey\nexports.default = (DocumentClient) => (data, schema, partitionKey, sortKey) => {\n    // TODO: Think about a better way to reference pk/sk - can it work with secondary indexes?\n    partitionKey = schema[partitionKey].map || partitionKey;\n    sortKey = (schema[sortKey] && schema[sortKey].map) || sortKey || null;\n    // Intialize validate type\n    let validateType = validateTypes_1.default(DocumentClient);\n    // TODO: Add tests for 0 values\n    let pk = data[partitionKey];\n    if (pk === undefined || pk === null || pk === '') {\n        utils_1.error(`'${partitionKey}'${schema[partitionKey].alias ? ` or '${schema[partitionKey].alias}'` : ''} is required`);\n    }\n    const sk = data[sortKey];\n    if (sortKey && (sk === undefined || sk === null || sk === '')) {\n        utils_1.error(`'${sortKey}'${schema[sortKey].alias ? ` or '${schema[sortKey].alias}'` : ''} is required`);\n    }\n    return Object.assign({ [partitionKey]: utils_1.transformAttr(schema[partitionKey], validateType(schema[partitionKey], partitionKey, pk), data) }, sortKey !== null ? { [sortKey]: utils_1.transformAttr(schema[sortKey], validateType(schema[sortKey], sortKey, sk), data) } : {}); // end assign\n}; // end get keys\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA,IAAIA,eAAe,GAAIC,SAAA,IAAQA,SAAA,CAAKD,eAAe,IAAK,UAAUE,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,eAAe,GAAGR,eAAe,CAACS,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACnE,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC;AACAH,OAAO,CAACK,OAAO,GAAIC,cAAc,IAAK,CAACC,IAAI,EAAEC,MAAM,EAAEC,YAAY,EAAEC,OAAO,KAAK;EAC3E;EACAD,YAAY,GAAGD,MAAM,CAACC,YAAY,CAAC,CAACE,GAAG,IAAIF,YAAY;EACvDC,OAAO,GAAIF,MAAM,CAACE,OAAO,CAAC,IAAIF,MAAM,CAACE,OAAO,CAAC,CAACC,GAAG,IAAKD,OAAO,IAAI,IAAI;EACrE;EACA,IAAIE,YAAY,GAAGV,eAAe,CAACG,OAAO,CAACC,cAAc,CAAC;EAC1D;EACA,IAAIO,EAAE,GAAGN,IAAI,CAACE,YAAY,CAAC;EAC3B,IAAII,EAAE,KAAKlB,SAAS,IAAIkB,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,EAAE,EAAE;IAC9CT,OAAO,CAACU,KAAK,CAAE,IAAGL,YAAa,IAAGD,MAAM,CAACC,YAAY,CAAC,CAACM,KAAK,GAAI,QAAOP,MAAM,CAACC,YAAY,CAAC,CAACM,KAAM,GAAE,GAAG,EAAG,cAAa,CAAC;EAC5H;EACA,MAAMC,EAAE,GAAGT,IAAI,CAACG,OAAO,CAAC;EACxB,IAAIA,OAAO,KAAKM,EAAE,KAAKrB,SAAS,IAAIqB,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,EAAE,CAAC,EAAE;IAC3DZ,OAAO,CAACU,KAAK,CAAE,IAAGJ,OAAQ,IAAGF,MAAM,CAACE,OAAO,CAAC,CAACK,KAAK,GAAI,QAAOP,MAAM,CAACE,OAAO,CAAC,CAACK,KAAM,GAAE,GAAG,EAAG,cAAa,CAAC;EAC7G;EACA,OAAOjB,MAAM,CAACmB,MAAM,CAAC;IAAE,CAACR,YAAY,GAAGL,OAAO,CAACc,aAAa,CAACV,MAAM,CAACC,YAAY,CAAC,EAAEG,YAAY,CAACJ,MAAM,CAACC,YAAY,CAAC,EAAEA,YAAY,EAAEI,EAAE,CAAC,EAAEN,IAAI;EAAE,CAAC,EAAEG,OAAO,KAAK,IAAI,GAAG;IAAE,CAACA,OAAO,GAAGN,OAAO,CAACc,aAAa,CAACV,MAAM,CAACE,OAAO,CAAC,EAAEE,YAAY,CAACJ,MAAM,CAACE,OAAO,CAAC,EAAEA,OAAO,EAAEM,EAAE,CAAC,EAAET,IAAI;EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxR,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}