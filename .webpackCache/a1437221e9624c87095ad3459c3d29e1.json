{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = undefined && undefined.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = undefined && undefined.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApolloServerBase = exports.convertNodeHttpToRequest = exports.formatApolloErrors = exports.UserInputError = exports.ForbiddenError = exports.AuthenticationError = exports.ValidationError = exports.SyntaxError = exports.toApolloError = exports.ApolloError = exports.resolveGraphqlOptions = exports.isHttpQueryError = exports.HttpQueryError = exports.runHttpQuery = void 0;\nvar runHttpQuery_1 = require(\"./runHttpQuery\");\nObject.defineProperty(exports, \"runHttpQuery\", {\n  enumerable: true,\n  get: function () {\n    return runHttpQuery_1.runHttpQuery;\n  }\n});\nObject.defineProperty(exports, \"HttpQueryError\", {\n  enumerable: true,\n  get: function () {\n    return runHttpQuery_1.HttpQueryError;\n  }\n});\nObject.defineProperty(exports, \"isHttpQueryError\", {\n  enumerable: true,\n  get: function () {\n    return runHttpQuery_1.isHttpQueryError;\n  }\n});\nvar graphqlOptions_1 = require(\"./graphqlOptions\");\nObject.defineProperty(exports, \"resolveGraphqlOptions\", {\n  enumerable: true,\n  get: function () {\n    return graphqlOptions_1.resolveGraphqlOptions;\n  }\n});\nvar apollo_server_errors_1 = require(\"apollo-server-errors\");\nObject.defineProperty(exports, \"ApolloError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.ApolloError;\n  }\n});\nObject.defineProperty(exports, \"toApolloError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.toApolloError;\n  }\n});\nObject.defineProperty(exports, \"SyntaxError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.SyntaxError;\n  }\n});\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.ValidationError;\n  }\n});\nObject.defineProperty(exports, \"AuthenticationError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.AuthenticationError;\n  }\n});\nObject.defineProperty(exports, \"ForbiddenError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.ForbiddenError;\n  }\n});\nObject.defineProperty(exports, \"UserInputError\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.UserInputError;\n  }\n});\nObject.defineProperty(exports, \"formatApolloErrors\", {\n  enumerable: true,\n  get: function () {\n    return apollo_server_errors_1.formatApolloErrors;\n  }\n});\nvar nodeHttpToRequest_1 = require(\"./nodeHttpToRequest\");\nObject.defineProperty(exports, \"convertNodeHttpToRequest\", {\n  enumerable: true,\n  get: function () {\n    return nodeHttpToRequest_1.convertNodeHttpToRequest;\n  }\n});\nvar ApolloServer_1 = require(\"./ApolloServer\");\nObject.defineProperty(exports, \"ApolloServerBase\", {\n  enumerable: true,\n  get: function () {\n    return ApolloServer_1.ApolloServerBase;\n  }\n});\n__exportStar(require(\"./types\"), exports);\nvar apollo_server_types_1 = require(\"apollo-server-types\");\n__exportStar(require(\"./gql\"), exports);\n__exportStar(require(\"./plugin\"), exports);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACEC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,cAAA,CAAAO,YAAY;EAAA;AAAA;AAEZL,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,cAAA,CAAAQ,cAAc;EAAA;AAAA;AACdN,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,cAAA,CAAAS,gBAAgB;EAAA;AAAA;AAGlB,IAAAC,gBAAA,GAAAT,OAAA;AAEEC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAI,gBAAA,CAAAC,qBAAqB;EAAA;AAAA;AAIvB,IAAAC,sBAAA,GAAAX,OAAA;AACEC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAC,WAAW;EAAA;AAAA;AACXX,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAE,aAAa;EAAA;AAAA;AACbZ,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAG,WAAW;EAAA;AAAA;AACXb,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAI,eAAe;EAAA;AAAA;AACfd,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAK,mBAAmB;EAAA;AAAA;AACnBf,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAM,cAAc;EAAA;AAAA;AACdhB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAO,cAAc;EAAA;AAAA;AACdjB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,sBAAA,CAAAQ,kBAAkB;EAAA;AAAA;AAGpB,IAAAC,mBAAA,GAAApB,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAe,mBAAA,CAAAC,wBAAwB;EAAA;AAAA;AAGjC,IAAAC,cAAA,GAAAtB,OAAA;AAASC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAiB,cAAA,CAAAC,gBAAgB;EAAA;AAAA;AACzBC,YAAA,CAAAxB,OAAA,aAAAG,OAAA;AACA,IAAAsB,qBAAA,GAAAzB,OAAA;AAYAwB,YAAA,CAAAxB,OAAA,WAAAG,OAAA;AACAqB,YAAA,CAAAxB,OAAA,cAAAG,OAAA","names":["runHttpQuery_1","require","Object","defineProperty","exports","enumerable","get","runHttpQuery","HttpQueryError","isHttpQueryError","graphqlOptions_1","resolveGraphqlOptions","apollo_server_errors_1","ApolloError","toApolloError","SyntaxError","ValidationError","AuthenticationError","ForbiddenError","UserInputError","formatApolloErrors","nodeHttpToRequest_1","convertNodeHttpToRequest","ApolloServer_1","ApolloServerBase","__exportStar","apollo_server_types_1"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}