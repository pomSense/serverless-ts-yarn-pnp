{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\nfunction objectHash(object, options) {\n  options = applyDefaults(object, options);\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function (object) {\n  return objectHash(object);\n};\nexports.keys = function (object) {\n  return objectHash(object, {\n    excludeValues: true,\n    algorithm: 'sha1',\n    encoding: 'hex'\n  });\n};\nexports.MD5 = function (object) {\n  return objectHash(object, {\n    algorithm: 'md5',\n    encoding: 'hex'\n  });\n};\nexports.keysMD5 = function (object) {\n  return objectHash(object, {\n    algorithm: 'md5',\n    encoding: 'hex',\n    excludeValues: true\n  });\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\nfunction applyDefaults(object, sourceOptions) {\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n  if (typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n  if (hashes.indexOf(options.algorithm) === -1) {\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' + 'supported values: ' + hashes.join(', '));\n  }\n  if (encodings.indexOf(options.encoding) === -1 && options.algorithm !== 'passthrough') {\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' + 'supported values: ' + encodings.join(', '));\n  }\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if (typeof f !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\nfunction hash(object, options) {\n  var hashingStream;\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end = hashingStream.update;\n  }\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function (object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n  options = applyDefaults(object, options);\n  return typeHasher(options, stream).dispatch(object);\n};\nfunction typeHasher(options, writeTo, context) {\n  context = context || [];\n  var write = function (str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n  return {\n    dispatch: function (value) {\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function (object) {\n      var pattern = /\\[object (.*)\\]/i;\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) {\n        // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n      var objectNumber = null;\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n      if (objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if (this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      } else {\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n        if (options.excludeKeys) {\n          keys = keys.filter(function (key) {\n            return !options.excludeKeys(key);\n          });\n        }\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function (key) {\n          self.dispatch(key);\n          write(':');\n          if (!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function (arr, unordered) {\n      unordered = typeof unordered !== 'undefined' ? unordered : options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function (entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can’t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we’re done\n      var contextAdditions = [];\n      var entries = arr.map(function (entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function (date) {\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function (sym) {\n      return write('symbol:' + sym.toString());\n    },\n    _error: function (err) {\n      return write('error:' + err.toString());\n    },\n    _boolean: function (bool) {\n      return write('bool:' + bool.toString());\n    },\n    _string: function (string) {\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function (fn) {\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function (number) {\n      return write('number:' + number.toString());\n    },\n    _xml: function (xml) {\n      return write('xml:' + xml.toString());\n    },\n    _null: function () {\n      return write('Null');\n    },\n    _undefined: function () {\n      return write('Undefined');\n    },\n    _regexp: function (regex) {\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function (arr) {\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function (arr) {\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function (arr) {\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function (arr) {\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function (arr) {\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function (arr) {\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function (arr) {\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function (arr) {\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function (arr) {\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function (arr) {\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function (url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function (map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function (set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _file: function (file) {\n      write('file:');\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    _blob: function () {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n      throw Error('Hashing Blob objects is currently not supported\\n' + '(see https://github.com/puleos/object-hash/issues/26)\\n' + 'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function () {\n      return write('domwindow');\n    },\n    _bigint: function (number) {\n      return write('bigint:' + number.toString());\n    },\n    /* Node.js standard native objects */\n    _process: function () {\n      return write('process');\n    },\n    _timer: function () {\n      return write('timer');\n    },\n    _pipe: function () {\n      return write('pipe');\n    },\n    _tcp: function () {\n      return write('tcp');\n    },\n    _udp: function () {\n      return write('udp');\n    },\n    _tty: function () {\n      return write('tty');\n    },\n    _statwatcher: function () {\n      return write('statwatcher');\n    },\n    _securecontext: function () {\n      return write('securecontext');\n    },\n    _connection: function () {\n      return write('connection');\n    },\n    _zlib: function () {\n      return write('zlib');\n    },\n    _context: function () {\n      return write('context');\n    },\n    _nodescript: function () {\n      return write('nodescript');\n    },\n    _httpparser: function () {\n      return write('httpparser');\n    },\n    _dataview: function () {\n      return write('dataview');\n    },\n    _signal: function () {\n      return write('signal');\n    },\n    _fsevent: function () {\n      return write('fsevent');\n    },\n    _tlswrap: function () {\n      return write('tlswrap');\n    }\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n    write: function (b) {\n      this.buf += b;\n    },\n    end: function (b) {\n      this.buf += b;\n    },\n    read: function () {\n      return this.buf;\n    }\n  };\n}","map":{"version":3,"names":["crypto","require","exports","module","objectHash","object","options","applyDefaults","hash","sha1","keys","excludeValues","algorithm","encoding","MD5","keysMD5","hashes","getHashes","slice","push","encodings","sourceOptions","toLowerCase","ignoreUnknown","respectType","respectFunctionNames","respectFunctionProperties","unorderedArrays","unorderedSets","unorderedObjects","replacer","undefined","excludeKeys","Error","i","length","indexOf","join","isNativeFunction","f","exp","exec","Function","prototype","toString","call","hashingStream","createHash","PassThrough","write","update","end","hasher","typeHasher","dispatch","digest","buf","read","writeToStream","stream","writeTo","context","str","value","type","_object","pattern","objString","Object","objType","objectNumber","Buffer","isBuffer","sort","splice","filter","key","self","forEach","_array","arr","unordered","entry","contextAdditions","entries","map","strm","localContext","concat","_date","date","toJSON","_symbol","sym","_error","err","_boolean","bool","_string","string","_function","fn","String","name","_number","number","_xml","xml","_null","_undefined","_regexp","regex","_uint8array","Array","_uint8clampedarray","_int8array","_uint16array","_int16array","_uint32array","_int32array","_float32array","_float64array","_arraybuffer","Uint8Array","_url","url","_map","from","_set","set","_file","file","size","lastModfied","_blob","_domwindow","_bigint","_process","_timer","_pipe","_tcp","_udp","_tty","_statwatcher","_securecontext","_connection","_zlib","_context","_nodescript","_httpparser","_dataview","_signal","_fsevent","_tlswrap","b"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/object-hash-npm-2.2.0-d97a921cc1-55ba841e3a.zip/node_modules/object-hash/index.js"],"sourcesContent":["'use strict';\n\nvar crypto = require('crypto');\n\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */\nexports = module.exports = objectHash;\n\nfunction objectHash(object, options){\n  options = applyDefaults(object, options);\n\n  return hash(object, options);\n}\n\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */\nexports.sha1 = function(object){\n  return objectHash(object);\n};\nexports.keys = function(object){\n  return objectHash(object, {excludeValues: true, algorithm: 'sha1', encoding: 'hex'});\n};\nexports.MD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex'});\n};\nexports.keysMD5 = function(object){\n  return objectHash(object, {algorithm: 'md5', encoding: 'hex', excludeValues: true});\n};\n\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : ['sha1', 'md5'];\nhashes.push('passthrough');\nvar encodings = ['buffer', 'hex', 'binary', 'base64'];\n\nfunction applyDefaults(object, sourceOptions){\n  sourceOptions = sourceOptions || {};\n\n  // create a copy rather than mutating\n  var options = {};\n  options.algorithm = sourceOptions.algorithm || 'sha1';\n  options.encoding = sourceOptions.encoding || 'hex';\n  options.excludeValues = sourceOptions.excludeValues ? true : false;\n  options.algorithm = options.algorithm.toLowerCase();\n  options.encoding = options.encoding.toLowerCase();\n  options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n  options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n  options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n  options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n  options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n  options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n  options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n  options.replacer = sourceOptions.replacer || undefined;\n  options.excludeKeys = sourceOptions.excludeKeys || undefined;\n\n  if(typeof object === 'undefined') {\n    throw new Error('Object argument required.');\n  }\n\n  // if there is a case-insensitive match in the hashes list, accept it\n  // (i.e. SHA256 for sha256)\n  for (var i = 0; i < hashes.length; ++i) {\n    if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n      options.algorithm = hashes[i];\n    }\n  }\n\n  if(hashes.indexOf(options.algorithm) === -1){\n    throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' +\n      'supported values: ' + hashes.join(', '));\n  }\n\n  if(encodings.indexOf(options.encoding) === -1 &&\n     options.algorithm !== 'passthrough'){\n    throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' +\n      'supported values: ' + encodings.join(', '));\n  }\n\n  return options;\n}\n\n/** Check if the given function is a native function */\nfunction isNativeFunction(f) {\n  if ((typeof f) !== 'function') {\n    return false;\n  }\n  var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n  return exp.exec(Function.prototype.toString.call(f)) != null;\n}\n\nfunction hash(object, options) {\n  var hashingStream;\n\n  if (options.algorithm !== 'passthrough') {\n    hashingStream = crypto.createHash(options.algorithm);\n  } else {\n    hashingStream = new PassThrough();\n  }\n\n  if (typeof hashingStream.write === 'undefined') {\n    hashingStream.write = hashingStream.update;\n    hashingStream.end   = hashingStream.update;\n  }\n\n  var hasher = typeHasher(options, hashingStream);\n  hasher.dispatch(object);\n  if (!hashingStream.update) {\n    hashingStream.end('');\n  }\n\n  if (hashingStream.digest) {\n    return hashingStream.digest(options.encoding === 'buffer' ? undefined : options.encoding);\n  }\n\n  var buf = hashingStream.read();\n  if (options.encoding === 'buffer') {\n    return buf;\n  }\n\n  return buf.toString(options.encoding);\n}\n\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */\nexports.writeToStream = function(object, options, stream) {\n  if (typeof stream === 'undefined') {\n    stream = options;\n    options = {};\n  }\n\n  options = applyDefaults(object, options);\n\n  return typeHasher(options, stream).dispatch(object);\n};\n\nfunction typeHasher(options, writeTo, context){\n  context = context || [];\n  var write = function(str) {\n    if (writeTo.update) {\n      return writeTo.update(str, 'utf8');\n    } else {\n      return writeTo.write(str, 'utf8');\n    }\n  };\n\n  return {\n    dispatch: function(value){\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n\n      var type = typeof value;\n      if (value === null) {\n        type = 'null';\n      }\n\n      //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n\n      return this['_' + type](value);\n    },\n    _object: function(object) {\n      var pattern = (/\\[object (.*)\\]/i);\n      var objString = Object.prototype.toString.call(object);\n      var objType = pattern.exec(objString);\n      if (!objType) { // object type did not match [object ...]\n        objType = 'unknown:[' + objString + ']';\n      } else {\n        objType = objType[1]; // take only the class name\n      }\n\n      objType = objType.toLowerCase();\n\n      var objectNumber = null;\n\n      if ((objectNumber = context.indexOf(object)) >= 0) {\n        return this.dispatch('[CIRCULAR:' + objectNumber + ']');\n      } else {\n        context.push(object);\n      }\n\n      if (typeof Buffer !== 'undefined' && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write('buffer:');\n        return write(object);\n      }\n\n      if(objType !== 'object' && objType !== 'function' && objType !== 'asyncfunction') {\n        if(this['_' + objType]) {\n          this['_' + objType](object);\n        } else if (options.ignoreUnknown) {\n          return write('[' + objType + ']');\n        } else {\n          throw new Error('Unknown object type \"' + objType + '\"');\n        }\n      }else{\n        var keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        // Make sure to incorporate special properties, so\n        // Types with different prototypes will produce\n        // a different hash and objects derived from\n        // different functions (`new Foo`, `new Bar`) will\n        // produce different hashes.\n        // We never do this for native functions since some\n        // seem to break because of that.\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          keys.splice(0, 0, 'prototype', '__proto__', 'constructor');\n        }\n\n        if (options.excludeKeys) {\n          keys = keys.filter(function(key) { return !options.excludeKeys(key); });\n        }\n\n        write('object:' + keys.length + ':');\n        var self = this;\n        return keys.forEach(function(key){\n          self.dispatch(key);\n          write(':');\n          if(!options.excludeValues) {\n            self.dispatch(object[key]);\n          }\n          write(',');\n        });\n      }\n    },\n    _array: function(arr, unordered){\n      unordered = typeof unordered !== 'undefined' ? unordered :\n        options.unorderedArrays !== false; // default to options.unorderedArrays\n\n      var self = this;\n      write('array:' + arr.length + ':');\n      if (!unordered || arr.length <= 1) {\n        return arr.forEach(function(entry) {\n          return self.dispatch(entry);\n        });\n      }\n\n      // the unordered case is a little more complicated:\n      // since there is no canonical ordering on objects,\n      // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n      // we first serialize each entry using a PassThrough stream\n      // before sorting.\n      // also: we can’t use the same context array for all entries\n      // since the order of hashing should *not* matter. instead,\n      // we keep track of the additions to a copy of the context array\n      // and add all of them to the global context array when we’re done\n      var contextAdditions = [];\n      var entries = arr.map(function(entry) {\n        var strm = new PassThrough();\n        var localContext = context.slice(); // make copy\n        var hasher = typeHasher(options, strm, localContext);\n        hasher.dispatch(entry);\n        // take only what was added to localContext and append it to contextAdditions\n        contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n        return strm.read().toString();\n      });\n      context = context.concat(contextAdditions);\n      entries.sort();\n      return this._array(entries, false);\n    },\n    _date: function(date){\n      return write('date:' + date.toJSON());\n    },\n    _symbol: function(sym){\n      return write('symbol:' + sym.toString());\n    },\n    _error: function(err){\n      return write('error:' + err.toString());\n    },\n    _boolean: function(bool){\n      return write('bool:' + bool.toString());\n    },\n    _string: function(string){\n      write('string:' + string.length + ':');\n      write(string.toString());\n    },\n    _function: function(fn){\n      write('fn:');\n      if (isNativeFunction(fn)) {\n        this.dispatch('[native]');\n      } else {\n        this.dispatch(fn.toString());\n      }\n\n      if (options.respectFunctionNames !== false) {\n        // Make sure we can still distinguish native functions\n        // by their name, otherwise String and Function will\n        // have the same hash\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n\n      if (options.respectFunctionProperties) {\n        this._object(fn);\n      }\n    },\n    _number: function(number){\n      return write('number:' + number.toString());\n    },\n    _xml: function(xml){\n      return write('xml:' + xml.toString());\n    },\n    _null: function() {\n      return write('Null');\n    },\n    _undefined: function() {\n      return write('Undefined');\n    },\n    _regexp: function(regex){\n      return write('regex:' + regex.toString());\n    },\n    _uint8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint8clampedarray: function(arr){\n      write('uint8clampedarray:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int8array: function(arr){\n      write('uint8array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int16array: function(arr){\n      write('uint16array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _uint32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _int32array: function(arr){\n      write('uint32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float32array: function(arr){\n      write('float32array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _float64array: function(arr){\n      write('float64array:');\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    _arraybuffer: function(arr){\n      write('arraybuffer:');\n      return this.dispatch(new Uint8Array(arr));\n    },\n    _url: function(url) {\n      return write('url:' + url.toString(), 'utf8');\n    },\n    _map: function(map) {\n      write('map:');\n      var arr = Array.from(map);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _set: function(set) {\n      write('set:');\n      var arr = Array.from(set);\n      return this._array(arr, options.unorderedSets !== false);\n    },\n    _file: function(file) {\n      write('file:');\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    _blob: function() {\n      if (options.ignoreUnknown) {\n        return write('[blob]');\n      }\n\n      throw Error('Hashing Blob objects is currently not supported\\n' +\n        '(see https://github.com/puleos/object-hash/issues/26)\\n' +\n        'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n    },\n    _domwindow: function() { return write('domwindow'); },\n    _bigint: function(number){\n      return write('bigint:' + number.toString());\n    },\n    /* Node.js standard native objects */\n    _process: function() { return write('process'); },\n    _timer: function() { return write('timer'); },\n    _pipe: function() { return write('pipe'); },\n    _tcp: function() { return write('tcp'); },\n    _udp: function() { return write('udp'); },\n    _tty: function() { return write('tty'); },\n    _statwatcher: function() { return write('statwatcher'); },\n    _securecontext: function() { return write('securecontext'); },\n    _connection: function() { return write('connection'); },\n    _zlib: function() { return write('zlib'); },\n    _context: function() { return write('context'); },\n    _nodescript: function() { return write('nodescript'); },\n    _httpparser: function() { return write('httpparser'); },\n    _dataview: function() { return write('dataview'); },\n    _signal: function() { return write('signal'); },\n    _fsevent: function() { return write('fsevent'); },\n    _tlswrap: function() { return write('tlswrap'); },\n  };\n}\n\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n  return {\n    buf: '',\n\n    write: function(b) {\n      this.buf += b;\n    },\n\n    end: function(b) {\n      this.buf += b;\n    },\n\n    read: function() {\n      return this.buf;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}