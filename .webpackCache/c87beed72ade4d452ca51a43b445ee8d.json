{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoreFeature = exports.defaultSchemaBlueprint = exports.SchemaBlueprint = exports.NamedSchemaElementWithType = exports.NamedSchemaElement = exports.SchemaElement = exports.Extension = exports.sourceASTs = exports.DirectiveTargetElement = exports.isLeafType = exports.typeFromAST = exports.typeToAST = exports.isTypeSystemDirectiveLocation = exports.typeSystemDirectiveLocations = exports.isExecutableDirectiveLocation = exports.executableDirectiveLocations = exports.isConditionalDirective = exports.supertypes = exports.runtimeTypesIntersects = exports.possibleRuntimeTypes = exports.isCompositeType = exports.isAbstractType = exports.isNullableType = exports.baseType = exports.filterTypesOfKind = exports.isTypeOfKind = exports.isInputType = exports.isOutputType = exports.isInputObjectType = exports.isUnionType = exports.isEnumType = exports.isInterfaceType = exports.isObjectType = exports.isIDType = exports.isBooleanType = exports.isFloatType = exports.isStringType = exports.isIntType = exports.isCustomScalarType = exports.isScalarType = exports.isNonNullType = exports.isListType = exports.isWrapperType = exports.isNamedType = exports.isSchemaRootType = exports.defaultRootName = exports.allSchemaRootKinds = exports.typenameFieldName = exports.ErrGraphQLAPISchemaValidationFailed = exports.ErrGraphQLValidationFailed = void 0;\nexports.copyDirectiveDefinitionToSchema = exports.newNamedType = exports.variableDefinitionFromAST = exports.variableDefinitionsFromAST = exports.VariableDefinitions = exports.VariableDefinition = exports.isVariable = exports.VariableCollector = exports.Variable = exports.directiveApplicationsSubstraction = exports.isDirectiveApplicationsSubset = exports.sameDirectiveApplications = exports.sameDirectiveApplication = exports.Directive = exports.DirectiveDefinition = exports.EnumValue = exports.ArgumentDefinition = exports.InputFieldDefinition = exports.FieldDefinition = exports.NonNullType = exports.ListType = exports.InputObjectType = exports.EnumType = exports.UnionType = exports.UnionMember = exports.InterfaceType = exports.ObjectType = exports.InterfaceImplementation = exports.ScalarType = exports.SchemaDefinition = exports.RootType = exports.Schema = exports.CoreFeatures = void 0;\nconst graphql_1 = require(\"graphql\");\nconst coreSpec_1 = require(\"./coreSpec\");\nconst utils_1 = require(\"./utils\");\nconst values_1 = require(\"./values\");\nconst inaccessibleSpec_1 = require(\"./inaccessibleSpec\");\nconst print_1 = require(\"./print\");\nconst types_1 = require(\"./types\");\nconst introspection_1 = require(\"./introspection\");\nconst validate_1 = require(\"graphql/validation/validate\");\nconst specifiedRules_1 = require(\"graphql/validation/specifiedRules\");\nconst validate_2 = require(\"./validate\");\nconst directiveAndTypeSpecification_1 = require(\"./directiveAndTypeSpecification\");\nconst suggestions_1 = require(\"./suggestions\");\nconst error_1 = require(\"./error\");\nconst validationErrorCode = 'GraphQLValidationFailed';\nconst DEFAULT_VALIDATION_ERROR_MESSAGE = 'The schema is not a valid GraphQL schema.';\nconst ErrGraphQLValidationFailed = (causes, message = DEFAULT_VALIDATION_ERROR_MESSAGE) => (0, error_1.aggregateError)(validationErrorCode, message, causes);\nexports.ErrGraphQLValidationFailed = ErrGraphQLValidationFailed;\nconst apiSchemaValidationErrorCode = 'GraphQLAPISchemaValidationFailed';\nconst ErrGraphQLAPISchemaValidationFailed = causes => (0, error_1.aggregateError)(apiSchemaValidationErrorCode, 'The supergraph schema failed to produce a valid API schema', causes);\nexports.ErrGraphQLAPISchemaValidationFailed = ErrGraphQLAPISchemaValidationFailed;\nexports.typenameFieldName = '__typename';\nexports.allSchemaRootKinds = ['query', 'mutation', 'subscription'];\nfunction defaultRootName(rootKind) {\n  return rootKind.charAt(0).toUpperCase() + rootKind.slice(1);\n}\nexports.defaultRootName = defaultRootName;\nfunction checkDefaultSchemaRoot(type) {\n  if (type.kind !== 'ObjectType') {\n    return undefined;\n  }\n  switch (type.name) {\n    case 'Query':\n      return 'query';\n    case 'Mutation':\n      return 'mutation';\n    case 'Subscription':\n      return 'subscription';\n    default:\n      return undefined;\n  }\n}\nfunction isSchemaRootType(type) {\n  return isObjectType(type) && type.isRootType();\n}\nexports.isSchemaRootType = isSchemaRootType;\nfunction isNamedType(type) {\n  return type instanceof BaseNamedType;\n}\nexports.isNamedType = isNamedType;\nfunction isWrapperType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexports.isWrapperType = isWrapperType;\nfunction isListType(type) {\n  return type.kind == 'ListType';\n}\nexports.isListType = isListType;\nfunction isNonNullType(type) {\n  return type.kind == 'NonNullType';\n}\nexports.isNonNullType = isNonNullType;\nfunction isScalarType(type) {\n  return type.kind == 'ScalarType';\n}\nexports.isScalarType = isScalarType;\nfunction isCustomScalarType(type) {\n  return isScalarType(type) && !graphQLBuiltInTypes.includes(type.name);\n}\nexports.isCustomScalarType = isCustomScalarType;\nfunction isIntType(type) {\n  return type === type.schema().intType();\n}\nexports.isIntType = isIntType;\nfunction isStringType(type) {\n  return type === type.schema().stringType();\n}\nexports.isStringType = isStringType;\nfunction isFloatType(type) {\n  return type === type.schema().floatType();\n}\nexports.isFloatType = isFloatType;\nfunction isBooleanType(type) {\n  return type === type.schema().booleanType();\n}\nexports.isBooleanType = isBooleanType;\nfunction isIDType(type) {\n  return type === type.schema().idType();\n}\nexports.isIDType = isIDType;\nfunction isObjectType(type) {\n  return type.kind == 'ObjectType';\n}\nexports.isObjectType = isObjectType;\nfunction isInterfaceType(type) {\n  return type.kind == 'InterfaceType';\n}\nexports.isInterfaceType = isInterfaceType;\nfunction isEnumType(type) {\n  return type.kind == 'EnumType';\n}\nexports.isEnumType = isEnumType;\nfunction isUnionType(type) {\n  return type.kind == 'UnionType';\n}\nexports.isUnionType = isUnionType;\nfunction isInputObjectType(type) {\n  return type.kind == 'InputObjectType';\n}\nexports.isInputObjectType = isInputObjectType;\nfunction isOutputType(type) {\n  switch (baseType(type).kind) {\n    case 'ScalarType':\n    case 'ObjectType':\n    case 'UnionType':\n    case 'EnumType':\n    case 'InterfaceType':\n      return true;\n    default:\n      return false;\n  }\n}\nexports.isOutputType = isOutputType;\nfunction isInputType(type) {\n  switch (baseType(type).kind) {\n    case 'ScalarType':\n    case 'EnumType':\n    case 'InputObjectType':\n      return true;\n    default:\n      return false;\n  }\n}\nexports.isInputType = isInputType;\nfunction isTypeOfKind(type, kind) {\n  return type.kind === kind;\n}\nexports.isTypeOfKind = isTypeOfKind;\nfunction filterTypesOfKind(types, kind) {\n  return types.reduce((acc, type) => {\n    if (isTypeOfKind(type, kind)) {\n      acc.push(type);\n    }\n    return acc;\n  }, []);\n}\nexports.filterTypesOfKind = filterTypesOfKind;\nfunction baseType(type) {\n  return isWrapperType(type) ? type.baseType() : type;\n}\nexports.baseType = baseType;\nfunction isNullableType(type) {\n  return !isNonNullType(type);\n}\nexports.isNullableType = isNullableType;\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexports.isAbstractType = isAbstractType;\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexports.isCompositeType = isCompositeType;\nfunction possibleRuntimeTypes(type) {\n  switch (type.kind) {\n    case 'InterfaceType':\n      return type.possibleRuntimeTypes();\n    case 'UnionType':\n      return type.types();\n    case 'ObjectType':\n      return [type];\n  }\n}\nexports.possibleRuntimeTypes = possibleRuntimeTypes;\nfunction runtimeTypesIntersects(t1, t2) {\n  if (t1 === t2) {\n    return true;\n  }\n  const rt1 = possibleRuntimeTypes(t1);\n  const rt2 = possibleRuntimeTypes(t2);\n  for (const obj1 of rt1) {\n    if (rt2.some(obj2 => obj1.name === obj2.name)) {\n      return true;\n    }\n  }\n  return false;\n}\nexports.runtimeTypesIntersects = runtimeTypesIntersects;\nfunction supertypes(type) {\n  switch (type.kind) {\n    case 'InterfaceType':\n      return type.interfaces();\n    case 'UnionType':\n      return [];\n    case 'ObjectType':\n      return type.interfaces().concat(type.unionsWhereMember());\n  }\n}\nexports.supertypes = supertypes;\nfunction isConditionalDirective(directive) {\n  return ['include', 'skip'].includes(directive.name);\n}\nexports.isConditionalDirective = isConditionalDirective;\nexports.executableDirectiveLocations = [graphql_1.DirectiveLocation.QUERY, graphql_1.DirectiveLocation.MUTATION, graphql_1.DirectiveLocation.SUBSCRIPTION, graphql_1.DirectiveLocation.FIELD, graphql_1.DirectiveLocation.FRAGMENT_DEFINITION, graphql_1.DirectiveLocation.FRAGMENT_SPREAD, graphql_1.DirectiveLocation.INLINE_FRAGMENT, graphql_1.DirectiveLocation.VARIABLE_DEFINITION];\nconst executableDirectiveLocationsSet = new Set(exports.executableDirectiveLocations);\nfunction isExecutableDirectiveLocation(loc) {\n  return executableDirectiveLocationsSet.has(loc);\n}\nexports.isExecutableDirectiveLocation = isExecutableDirectiveLocation;\nexports.typeSystemDirectiveLocations = [graphql_1.DirectiveLocation.SCHEMA, graphql_1.DirectiveLocation.SCALAR, graphql_1.DirectiveLocation.OBJECT, graphql_1.DirectiveLocation.FIELD_DEFINITION, graphql_1.DirectiveLocation.ARGUMENT_DEFINITION, graphql_1.DirectiveLocation.INTERFACE, graphql_1.DirectiveLocation.UNION, graphql_1.DirectiveLocation.ENUM, graphql_1.DirectiveLocation.ENUM_VALUE, graphql_1.DirectiveLocation.INPUT_OBJECT, graphql_1.DirectiveLocation.INPUT_FIELD_DEFINITION];\nconst typeSystemDirectiveLocationsSet = new Set(exports.typeSystemDirectiveLocations);\nfunction isTypeSystemDirectiveLocation(loc) {\n  return typeSystemDirectiveLocationsSet.has(loc);\n}\nexports.isTypeSystemDirectiveLocation = isTypeSystemDirectiveLocation;\nfunction typeToAST(type) {\n  switch (type.kind) {\n    case 'ListType':\n      return {\n        kind: graphql_1.Kind.LIST_TYPE,\n        type: typeToAST(type.ofType)\n      };\n    case 'NonNullType':\n      return {\n        kind: graphql_1.Kind.NON_NULL_TYPE,\n        type: typeToAST(type.ofType)\n      };\n    default:\n      return {\n        kind: graphql_1.Kind.NAMED_TYPE,\n        name: {\n          kind: graphql_1.Kind.NAME,\n          value: type.name\n        }\n      };\n  }\n}\nexports.typeToAST = typeToAST;\nfunction typeFromAST(schema, node) {\n  switch (node.kind) {\n    case graphql_1.Kind.LIST_TYPE:\n      return new ListType(typeFromAST(schema, node.type));\n    case graphql_1.Kind.NON_NULL_TYPE:\n      return new NonNullType(typeFromAST(schema, node.type));\n    default:\n      const type = schema.type(node.name.value);\n      if (!type) {\n        throw error_1.ERRORS.INVALID_GRAPHQL.err(`Unknown type \"${node.name.value}\"`, {\n          nodes: node\n        });\n      }\n      return type;\n  }\n}\nexports.typeFromAST = typeFromAST;\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexports.isLeafType = isLeafType;\nclass DirectiveTargetElement {\n  constructor(_schema, directives = []) {\n    this._schema = _schema;\n    this.appliedDirectives = directives.map(d => this.attachDirective(d));\n  }\n  schema() {\n    return this._schema;\n  }\n  attachDirective(directive) {\n    const toAdd = directive.isAttached() ? new Directive(directive.name, directive.arguments()) : directive;\n    Element.prototype['setParent'].call(toAdd, this);\n    return toAdd;\n  }\n  appliedDirectivesOf(nameOrDefinition) {\n    const directiveName = typeof nameOrDefinition === 'string' ? nameOrDefinition : nameOrDefinition.name;\n    return this.appliedDirectives.filter(d => d.name == directiveName);\n  }\n  hasAppliedDirective(nameOrDefinition) {\n    const directiveName = typeof nameOrDefinition === 'string' ? nameOrDefinition : nameOrDefinition.name;\n    return this.appliedDirectives.some(d => d.name == directiveName);\n  }\n  appliedDirectivesToDirectiveNodes() {\n    if (this.appliedDirectives.length == 0) {\n      return undefined;\n    }\n    return this.appliedDirectives.map(directive => {\n      return {\n        kind: graphql_1.Kind.DIRECTIVE,\n        name: {\n          kind: graphql_1.Kind.NAME,\n          value: directive.name\n        },\n        arguments: directive.argumentsToAST()\n      };\n    });\n  }\n  appliedDirectivesToString() {\n    return this.appliedDirectives.length == 0 ? '' : ' ' + this.appliedDirectives.join(' ');\n  }\n  collectVariablesInAppliedDirectives(collector) {\n    for (const applied of this.appliedDirectives) {\n      collector.collectInArguments(applied.arguments());\n    }\n  }\n}\nexports.DirectiveTargetElement = DirectiveTargetElement;\nfunction sourceASTs(...elts) {\n  return elts.map(elt => elt === null || elt === void 0 ? void 0 : elt.sourceAST).filter(elt => elt !== undefined);\n}\nexports.sourceASTs = sourceASTs;\nclass Element {\n  schema() {\n    const schema = this.schemaInternal();\n    (0, utils_1.assert)(schema, 'requested schema does not exist. Probably because the element is unattached');\n    return schema;\n  }\n  schemaInternal() {\n    if (!this._parent) {\n      return undefined;\n    } else if (this._parent instanceof Schema) {\n      return this._parent;\n    } else if (this._parent instanceof SchemaElement) {\n      return this._parent.schemaInternal();\n    } else if (this._parent instanceof DirectiveTargetElement) {\n      return this._parent.schema();\n    }\n    (0, utils_1.assert)(false, 'unreachable code. parent is of unknown type');\n  }\n  get parent() {\n    (0, utils_1.assert)(this._parent, 'trying to access non-existent parent');\n    return this._parent;\n  }\n  isAttached() {\n    return !!this._parent;\n  }\n  setParent(parent) {\n    (0, utils_1.assert)(!this._parent, \"Cannot set parent of an already attached element\");\n    this._parent = parent;\n    this.onAttached();\n  }\n  onAttached() {}\n  checkUpdate() {\n    (0, utils_1.assert)(this.isAttached(), () => `Cannot modify detached element ${this}`);\n  }\n}\nclass Extension {\n  get extendedElement() {\n    return this._extendedElement;\n  }\n  setExtendedElement(element) {\n    (0, utils_1.assert)(!this._extendedElement, \"Cannot attached already attached extension\");\n    this._extendedElement = element;\n  }\n}\nexports.Extension = Extension;\nclass SchemaElement extends Element {\n  addUnappliedDirective({\n    nameOrDef,\n    args,\n    extension,\n    directive\n  }) {\n    const toAdd = {\n      nameOrDef,\n      args: args !== null && args !== void 0 ? args : {},\n      extension,\n      directive\n    };\n    if (this._unappliedDirectives) {\n      this._unappliedDirectives.push(toAdd);\n    } else {\n      this._unappliedDirectives = [toAdd];\n    }\n  }\n  processUnappliedDirectives() {\n    var _a;\n    for (const {\n      nameOrDef,\n      args,\n      extension,\n      directive\n    } of (_a = this._unappliedDirectives) !== null && _a !== void 0 ? _a : []) {\n      const d = this.applyDirective(nameOrDef, args);\n      d.setOfExtension(extension);\n      d.sourceAST = directive;\n    }\n    this._unappliedDirectives = undefined;\n  }\n  get appliedDirectives() {\n    var _a;\n    return (_a = this._appliedDirectives) !== null && _a !== void 0 ? _a : [];\n  }\n  appliedDirectivesOf(nameOrDefinition) {\n    const directiveName = typeof nameOrDefinition === 'string' ? nameOrDefinition : nameOrDefinition.name;\n    return this.appliedDirectives.filter(d => d.name == directiveName);\n  }\n  hasAppliedDirective(nameOrDefinition) {\n    return (typeof nameOrDefinition === 'string' ? this.appliedDirectivesOf(nameOrDefinition) : this.appliedDirectivesOf(nameOrDefinition)).length !== 0;\n  }\n  applyDirective(nameOrDef, args, asFirstDirective = false) {\n    var _a;\n    let toAdd;\n    if (typeof nameOrDef === 'string') {\n      this.checkUpdate();\n      toAdd = new Directive(nameOrDef, args !== null && args !== void 0 ? args : Object.create(null));\n      const def = (_a = this.schema().directive(nameOrDef)) !== null && _a !== void 0 ? _a : this.schema().blueprint.onMissingDirectiveDefinition(this.schema(), toAdd);\n      if (!def) {\n        throw this.schema().blueprint.onGraphQLJSValidationError(this.schema(), error_1.ERRORS.INVALID_GRAPHQL.err(`Unknown directive \"@${nameOrDef}\".`));\n      }\n      if (Array.isArray(def)) {\n        throw (0, exports.ErrGraphQLValidationFailed)(def);\n      }\n    } else {\n      this.checkUpdate(nameOrDef);\n      toAdd = new Directive(nameOrDef.name, args !== null && args !== void 0 ? args : Object.create(null));\n    }\n    Element.prototype['setParent'].call(toAdd, this);\n    if (this._appliedDirectives) {\n      if (asFirstDirective) {\n        this._appliedDirectives.unshift(toAdd);\n      } else {\n        this._appliedDirectives.push(toAdd);\n      }\n    } else {\n      this._appliedDirectives = [toAdd];\n    }\n    DirectiveDefinition.prototype['addReferencer'].call(toAdd.definition, toAdd);\n    this.onModification();\n    return toAdd;\n  }\n  removeAppliedDirectives() {\n    if (!this._appliedDirectives) {\n      return;\n    }\n    const applied = this._appliedDirectives.concat();\n    applied.forEach(d => d.remove());\n  }\n  onModification() {\n    const schema = this.schemaInternal();\n    if (schema) {\n      Schema.prototype['onModification'].call(schema);\n    }\n  }\n  isElementBuiltIn() {\n    return false;\n  }\n  removeTypeReferenceInternal(type) {\n    this.removeTypeReference(type);\n  }\n  checkRemoval() {\n    (0, utils_1.assert)(!this.isElementBuiltIn() || Schema.prototype['canModifyBuiltIn'].call(this.schema()), () => `Cannot modify built-in ${this}`);\n  }\n  checkUpdate(addedElement) {\n    super.checkUpdate();\n    if (!Schema.prototype['canModifyBuiltIn'].call(this.schema())) {\n      let thisElement = this;\n      while (thisElement && thisElement instanceof SchemaElement) {\n        (0, utils_1.assert)(!thisElement.isElementBuiltIn(), () => `Cannot modify built-in (or part of built-in) ${this}`);\n        thisElement = thisElement.parent;\n      }\n    }\n    if (addedElement && addedElement.isAttached()) {\n      const thatSchema = addedElement.schema();\n      (0, utils_1.assert)(!thatSchema || thatSchema === this.schema(), () => `Cannot add element ${addedElement} to ${this} as it is attached to another schema`);\n    }\n  }\n}\nexports.SchemaElement = SchemaElement;\nclass NamedSchemaElement extends SchemaElement {\n  constructor(name) {\n    super();\n    this._name = name;\n  }\n  get name() {\n    return this._name;\n  }\n}\nexports.NamedSchemaElement = NamedSchemaElement;\nclass BaseNamedType extends NamedSchemaElement {\n  constructor(name, isBuiltIn = false) {\n    super(name);\n    this.isBuiltIn = isBuiltIn;\n    this.preserveEmptyDefinition = false;\n  }\n  addReferencer(referencer) {\n    if (this._referencers) {\n      if (!this._referencers.includes(referencer)) {\n        this._referencers.push(referencer);\n      }\n    } else {\n      this._referencers = [referencer];\n    }\n  }\n  removeReferencer(referencer) {\n    if (this._referencers) {\n      (0, utils_1.removeArrayElement)(referencer, this._referencers);\n    }\n  }\n  get coordinate() {\n    return this.name;\n  }\n  *allChildElements() {}\n  extensions() {\n    var _a;\n    return (_a = this._extensions) !== null && _a !== void 0 ? _a : [];\n  }\n  hasExtension(extension) {\n    var _a, _b;\n    return (_b = (_a = this._extensions) === null || _a === void 0 ? void 0 : _a.includes(extension)) !== null && _b !== void 0 ? _b : false;\n  }\n  newExtension() {\n    return this.addExtension(new Extension());\n  }\n  addExtension(extension) {\n    this.checkUpdate();\n    if (this.hasExtension(extension)) {\n      return extension;\n    }\n    (0, utils_1.assert)(!extension.extendedElement, () => `Cannot add extension to type ${this}: it is already added to another type`);\n    if (this._extensions) {\n      this._extensions.push(extension);\n    } else {\n      this._extensions = [extension];\n    }\n    Extension.prototype['setExtendedElement'].call(extension, this);\n    this.onModification();\n    return extension;\n  }\n  removeExtensions() {\n    if (!this._extensions) {\n      return;\n    }\n    this._extensions = undefined;\n    for (const directive of this.appliedDirectives) {\n      directive.removeOfExtension();\n    }\n    this.removeInnerElementsExtensions();\n  }\n  isIntrospectionType() {\n    return (0, introspection_1.isIntrospectionName)(this.name);\n  }\n  hasExtensionElements() {\n    return !!this._extensions;\n  }\n  hasNonExtensionElements() {\n    return this.preserveEmptyDefinition || this.appliedDirectives.some(d => d.ofExtension() === undefined) || this.hasNonExtensionInnerElements();\n  }\n  isElementBuiltIn() {\n    return this.isBuiltIn;\n  }\n  rename(newName) {\n    this.checkUpdate();\n    const oldName = this._name;\n    this._name = newName;\n    Schema.prototype['renameTypeInternal'].call(this._parent, oldName, newName);\n    this.onModification();\n  }\n  remove() {\n    var _a, _b;\n    if (!this._parent) {\n      return [];\n    }\n    this.checkRemoval();\n    this.onModification();\n    this.sourceAST = undefined;\n    this.removeAppliedDirectives();\n    this.removeInnerElements();\n    const toReturn = (_b = (_a = this._referencers) === null || _a === void 0 ? void 0 : _a.map(r => {\n      SchemaElement.prototype['removeTypeReferenceInternal'].call(r, this);\n      return r;\n    })) !== null && _b !== void 0 ? _b : [];\n    this._referencers = undefined;\n    Schema.prototype['removeTypeInternal'].call(this._parent, this);\n    this._parent = undefined;\n    return toReturn;\n  }\n  removeRecursive() {\n    this.remove().forEach(ref => this.removeReferenceRecursive(ref));\n  }\n  referencers() {\n    var _a;\n    return (_a = this._referencers) !== null && _a !== void 0 ? _a : [];\n  }\n  isReferenced() {\n    return !!this._referencers;\n  }\n  toString() {\n    return this.name;\n  }\n}\nclass NamedSchemaElementWithType extends NamedSchemaElement {\n  get type() {\n    return this._type;\n  }\n  set type(type) {\n    if (type) {\n      this.checkUpdate(type);\n    } else {\n      this.checkRemoval();\n    }\n    if (this._type) {\n      removeReferenceToType(this, this._type);\n    }\n    this._type = type;\n    if (type) {\n      addReferenceToType(this, type);\n    }\n  }\n  removeTypeReference(type) {\n    (0, utils_1.assert)(this._type && baseType(this._type) === type, () => `Cannot remove reference to type ${type} on ${this} as its type is ${this._type}`);\n    this._type = undefined;\n  }\n}\nexports.NamedSchemaElementWithType = NamedSchemaElementWithType;\nclass BaseExtensionMember extends Element {\n  ofExtension() {\n    return this._extension;\n  }\n  removeOfExtension() {\n    this._extension = undefined;\n  }\n  setOfExtension(extension) {\n    var _a;\n    this.checkUpdate();\n    (0, utils_1.assert)(!extension || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.hasExtension(extension)), () => `Cannot set object as part of the provided extension: it is not an extension of parent ${this.parent}`);\n    this._extension = extension;\n  }\n  remove() {\n    this.removeInner();\n    Schema.prototype['onModification'].call(this.schema());\n    this._extension = undefined;\n    this._parent = undefined;\n  }\n}\nclass SchemaBlueprint {\n  onMissingDirectiveDefinition(_schema, _directive) {\n    return undefined;\n  }\n  onDirectiveDefinitionAndSchemaParsed(_) {\n    return [];\n  }\n  ignoreParsedField(_type, _fieldName) {\n    return false;\n  }\n  onConstructed(_) {}\n  onAddedCoreFeature(_schema, _feature) {}\n  onInvalidation(_) {}\n  onValidation(_schema) {\n    return [];\n  }\n  validationRules() {\n    return specifiedRules_1.specifiedSDLRules;\n  }\n  onGraphQLJSValidationError(schema, error) {\n    var _a;\n    const matcher = /^Unknown directive \"@(?<directive>[_A-Za-z][_0-9A-Za-z]*)\"\\.$/.exec(error.message);\n    const name = (_a = matcher === null || matcher === void 0 ? void 0 : matcher.groups) === null || _a === void 0 ? void 0 : _a.directive;\n    if (!name) {\n      return error;\n    }\n    const allDefinedDirectiveNames = schema.allDirectives().map(d => d.name);\n    const suggestions = (0, suggestions_1.suggestionList)(name, allDefinedDirectiveNames);\n    if (suggestions.length === 0) {\n      return this.onUnknownDirectiveValidationError(schema, name, error);\n    } else {\n      return (0, error_1.withModifiedErrorMessage)(error, `${error.message}${(0, suggestions_1.didYouMean)(suggestions.map(s => '@' + s))}`);\n    }\n  }\n  onUnknownDirectiveValidationError(_schema, _unknownDirectiveName, error) {\n    return error;\n  }\n  applyDirectivesAfterParsing() {\n    return false;\n  }\n}\nexports.SchemaBlueprint = SchemaBlueprint;\nexports.defaultSchemaBlueprint = new SchemaBlueprint();\nclass CoreFeature {\n  constructor(url, nameInSchema, directive, imports, purpose) {\n    this.url = url;\n    this.nameInSchema = nameInSchema;\n    this.directive = directive;\n    this.imports = imports;\n    this.purpose = purpose;\n  }\n  isFeatureDefinition(element) {\n    const importName = element.kind === 'DirectiveDefinition' ? '@' + element.name : element.name;\n    return element.name.startsWith(this.nameInSchema + '__') || element.kind === 'DirectiveDefinition' && element.name === this.nameInSchema || !!this.imports.find(i => {\n      var _a;\n      return importName === ((_a = i.as) !== null && _a !== void 0 ? _a : i.name);\n    });\n  }\n  directiveNameInSchema(name) {\n    var _a, _b;\n    const elementImport = this.imports.find(i => i.name.charAt(0) === '@' && i.name.slice(1) === name);\n    return elementImport ? (_b = (_a = elementImport.as) === null || _a === void 0 ? void 0 : _a.slice(1)) !== null && _b !== void 0 ? _b : name : name === this.url.name ? this.nameInSchema : this.nameInSchema + '__' + name;\n  }\n  typeNameInSchema(name) {\n    var _a;\n    const elementImport = this.imports.find(i => i.name === name);\n    return elementImport ? (_a = elementImport.as) !== null && _a !== void 0 ? _a : name : this.nameInSchema + '__' + name;\n  }\n}\nexports.CoreFeature = CoreFeature;\nclass CoreFeatures {\n  constructor(coreItself) {\n    this.coreItself = coreItself;\n    this.byAlias = new Map();\n    this.byIdentity = new Map();\n    this.add(coreItself);\n    const coreDef = (0, coreSpec_1.findCoreSpecVersion)(coreItself.url);\n    if (!coreDef) {\n      throw error_1.ERRORS.UNKNOWN_LINK_VERSION.err(`Schema uses unknown version ${coreItself.url.version} of the ${coreItself.url.name} spec`);\n    }\n    this.coreDefinition = coreDef;\n  }\n  getByIdentity(identity) {\n    return this.byIdentity.get(identity);\n  }\n  allFeatures() {\n    return this.byIdentity.values();\n  }\n  removeFeature(featureIdentity) {\n    const feature = this.byIdentity.get(featureIdentity);\n    if (feature) {\n      this.byIdentity.delete(featureIdentity);\n      this.byAlias.delete(feature.nameInSchema);\n    }\n  }\n  maybeAddFeature(directive) {\n    var _a, _b;\n    if (((_a = directive.definition) === null || _a === void 0 ? void 0 : _a.name) !== this.coreItself.nameInSchema) {\n      return undefined;\n    }\n    const typedDirective = directive;\n    const args = typedDirective.arguments();\n    const url = this.coreDefinition.extractFeatureUrl(args);\n    const existing = this.byIdentity.get(url.identity);\n    if (existing) {\n      throw error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Duplicate inclusion of feature ${url.identity}`);\n    }\n    const imports = (0, coreSpec_1.extractCoreFeatureImports)(url, typedDirective);\n    const feature = new CoreFeature(url, (_b = args.as) !== null && _b !== void 0 ? _b : url.name, directive, imports, args.for);\n    this.add(feature);\n    directive.schema().blueprint.onAddedCoreFeature(directive.schema(), feature);\n    return feature;\n  }\n  add(feature) {\n    this.byAlias.set(feature.nameInSchema, feature);\n    this.byIdentity.set(feature.url.identity, feature);\n  }\n  sourceFeature(element) {\n    var _a, _b;\n    const isDirective = element instanceof DirectiveDefinition || element instanceof Directive;\n    const splitted = element.name.split('__');\n    if (splitted.length > 1) {\n      const feature = this.byAlias.get(splitted[0]);\n      return feature ? {\n        feature,\n        nameInFeature: splitted[1],\n        isImported: false\n      } : undefined;\n    } else {\n      const importName = isDirective ? '@' + element.name : element.name;\n      const allFeatures = [this.coreItself, ...this.byIdentity.values()];\n      for (const feature of allFeatures) {\n        for (const {\n          as,\n          name\n        } of feature.imports) {\n          if ((as !== null && as !== void 0 ? as : name) === importName) {\n            return {\n              feature,\n              nameInFeature: name.slice(1),\n              isImported: true\n            };\n          }\n        }\n      }\n      const directFeature = this.byAlias.get(element.name);\n      if (directFeature && isDirective) {\n        return {\n          feature: directFeature,\n          nameInFeature: (_b = (_a = directFeature.imports.find(imp => imp.as === `@${element.name}`)) === null || _a === void 0 ? void 0 : _a.name.slice(1)) !== null && _b !== void 0 ? _b : element.name,\n          isImported: true\n        };\n      }\n      return undefined;\n    }\n  }\n}\nexports.CoreFeatures = CoreFeatures;\nconst graphQLBuiltInTypes = ['Int', 'Float', 'String', 'Boolean', 'ID'];\nconst graphQLBuiltInTypesSpecifications = graphQLBuiltInTypes.map(name => (0, directiveAndTypeSpecification_1.createScalarTypeSpecification)({\n  name\n}));\nconst graphQLBuiltInDirectivesSpecifications = [(0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n  name: 'include',\n  locations: [graphql_1.DirectiveLocation.FIELD, graphql_1.DirectiveLocation.FRAGMENT_SPREAD, graphql_1.DirectiveLocation.INLINE_FRAGMENT],\n  args: [{\n    name: 'if',\n    type: schema => new NonNullType(schema.booleanType())\n  }]\n}), (0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n  name: 'skip',\n  locations: [graphql_1.DirectiveLocation.FIELD, graphql_1.DirectiveLocation.FRAGMENT_SPREAD, graphql_1.DirectiveLocation.INLINE_FRAGMENT],\n  args: [{\n    name: 'if',\n    type: schema => new NonNullType(schema.booleanType())\n  }]\n}), (0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n  name: 'deprecated',\n  locations: [graphql_1.DirectiveLocation.FIELD_DEFINITION, graphql_1.DirectiveLocation.ENUM_VALUE, graphql_1.DirectiveLocation.ARGUMENT_DEFINITION, graphql_1.DirectiveLocation.INPUT_FIELD_DEFINITION],\n  args: [{\n    name: 'reason',\n    type: schema => schema.stringType(),\n    defaultValue: 'No longer supported'\n  }]\n}), (0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n  name: 'specifiedBy',\n  locations: [graphql_1.DirectiveLocation.SCALAR],\n  args: [{\n    name: 'url',\n    type: schema => new NonNullType(schema.stringType())\n  }]\n}), (0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n  name: 'defer',\n  locations: [graphql_1.DirectiveLocation.FRAGMENT_SPREAD, graphql_1.DirectiveLocation.INLINE_FRAGMENT],\n  args: [{\n    name: 'label',\n    type: schema => schema.stringType()\n  }, {\n    name: 'if',\n    type: schema => new NonNullType(schema.booleanType()),\n    defaultValue: true\n  }]\n}), (0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n  name: 'stream',\n  locations: [graphql_1.DirectiveLocation.FIELD],\n  args: [{\n    name: 'label',\n    type: schema => schema.stringType()\n  }, {\n    name: 'initialCount',\n    type: schema => schema.intType(),\n    defaultValue: 0\n  }, {\n    name: 'if',\n    type: schema => new NonNullType(schema.booleanType()),\n    defaultValue: true\n  }]\n})];\nconst coordinateRegexp = /^@?[_A-Za-z][_0-9A-Za-z]*(\\.[_A-Za-z][_0-9A-Za-z]*)?(\\([_A-Za-z][_0-9A-Za-z]*:\\))?$/;\nclass Schema {\n  constructor(blueprint = exports.defaultSchemaBlueprint, config = {}) {\n    this.blueprint = blueprint;\n    this.config = config;\n    this._builtInTypes = new utils_1.MapWithCachedArrays();\n    this._types = new utils_1.MapWithCachedArrays();\n    this._builtInDirectives = new utils_1.MapWithCachedArrays();\n    this._directives = new utils_1.MapWithCachedArrays();\n    this.isConstructed = false;\n    this.isValidated = false;\n    this._schemaDefinition = new SchemaDefinition();\n    Element.prototype['setParent'].call(this._schemaDefinition, this);\n    graphQLBuiltInTypesSpecifications.forEach(spec => spec.checkOrAdd(this, undefined, true));\n    graphQLBuiltInDirectivesSpecifications.forEach(spec => spec.checkOrAdd(this, undefined, true));\n    blueprint.onConstructed(this);\n    this.isConstructed = true;\n  }\n  canModifyBuiltIn() {\n    return !this.isConstructed;\n  }\n  runWithBuiltInModificationAllowed(fct) {\n    const wasConstructed = this.isConstructed;\n    this.isConstructed = false;\n    fct();\n    this.isConstructed = wasConstructed;\n  }\n  renameTypeInternal(oldName, newName) {\n    this._types.set(newName, this._types.get(oldName));\n    this._types.delete(oldName);\n  }\n  removeTypeInternal(type) {\n    this._types.delete(type.name);\n  }\n  removeDirectiveInternal(definition) {\n    this._directives.delete(definition.name);\n  }\n  markAsCoreSchema(coreItself) {\n    this._coreFeatures = new CoreFeatures(coreItself);\n  }\n  unmarkAsCoreSchema() {\n    this._coreFeatures = undefined;\n  }\n  onModification() {\n    if (this.isConstructed) {\n      this.invalidate();\n      this.cachedDocument = undefined;\n      this.apiSchema = undefined;\n    }\n  }\n  isCoreSchema() {\n    return this.coreFeatures !== undefined;\n  }\n  get coreFeatures() {\n    return this._coreFeatures;\n  }\n  toAST() {\n    var _a;\n    if (!this.cachedDocument) {\n      const ast = (0, graphql_1.parse)((0, print_1.printSchema)(this), {\n        noLocation: true\n      });\n      const shouldCache = (_a = this.config.cacheAST) !== null && _a !== void 0 ? _a : false;\n      if (!shouldCache) {\n        return ast;\n      }\n      this.cachedDocument = ast;\n    }\n    return this.cachedDocument;\n  }\n  toAPISchema() {\n    if (!this.apiSchema) {\n      this.validate();\n      const apiSchema = this.clone();\n      for (const toRemoveIfCustom of ['defer', 'stream']) {\n        const directive = apiSchema.directive(toRemoveIfCustom);\n        if (directive && !directive.isBuiltIn) {\n          directive.removeRecursive();\n        }\n      }\n      (0, inaccessibleSpec_1.removeInaccessibleElements)(apiSchema);\n      (0, coreSpec_1.removeAllCoreFeatures)(apiSchema);\n      (0, utils_1.assert)(!apiSchema.isCoreSchema(), \"The API schema shouldn't be a core schema\");\n      apiSchema.validate();\n      this.apiSchema = apiSchema;\n    }\n    return this.apiSchema;\n  }\n  emptyASTDefinitionsForExtensionsWithoutDefinition() {\n    const nodes = [];\n    if (this.schemaDefinition.hasExtensionElements() && !this.schemaDefinition.hasNonExtensionElements()) {\n      const node = {\n        kind: graphql_1.Kind.SCHEMA_DEFINITION,\n        operationTypes: []\n      };\n      nodes.push(node);\n    }\n    for (const type of this.types()) {\n      if (type.hasExtensionElements() && !type.hasNonExtensionElements()) {\n        const node = {\n          kind: type.astDefinitionKind,\n          name: {\n            kind: graphql_1.Kind.NAME,\n            value: type.name\n          }\n        };\n        nodes.push(node);\n      }\n    }\n    return nodes;\n  }\n  toGraphQLJSSchema(config) {\n    var _a, _b;\n    const includeDefer = (_a = config === null || config === void 0 ? void 0 : config.includeDefer) !== null && _a !== void 0 ? _a : false;\n    const includeStream = (_b = config === null || config === void 0 ? void 0 : config.includeStream) !== null && _b !== void 0 ? _b : false;\n    let ast = this.toAST();\n    const additionalNodes = this.emptyASTDefinitionsForExtensionsWithoutDefinition();\n    if (includeDefer) {\n      additionalNodes.push(this.deferDirective().toAST());\n    }\n    if (includeStream) {\n      additionalNodes.push(this.streamDirective().toAST());\n    }\n    if (additionalNodes.length > 0) {\n      ast = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: ast.definitions.concat(additionalNodes)\n      };\n    }\n    const graphQLSchema = (0, graphql_1.buildASTSchema)(ast);\n    if (additionalNodes.length > 0) {\n      for (const node of additionalNodes) {\n        switch (node.kind) {\n          case graphql_1.Kind.SCHEMA_DEFINITION:\n            graphQLSchema.astNode = undefined;\n            break;\n          case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n          case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n          case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n          case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n          case graphql_1.Kind.UNION_TYPE_DEFINITION:\n          case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            const type = graphQLSchema.getType(node.name.value);\n            if (type) {\n              type.astNode = undefined;\n            }\n        }\n      }\n    }\n    return graphQLSchema;\n  }\n  get schemaDefinition() {\n    return this._schemaDefinition;\n  }\n  types() {\n    return this._types.values();\n  }\n  interfaceTypes() {\n    return filterTypesOfKind(this.types(), 'InterfaceType');\n  }\n  objectTypes() {\n    return filterTypesOfKind(this.types(), 'ObjectType');\n  }\n  unionTypes() {\n    return filterTypesOfKind(this.types(), 'UnionType');\n  }\n  scalarTypes() {\n    return filterTypesOfKind(this.types(), 'ScalarType');\n  }\n  inputTypes() {\n    return filterTypesOfKind(this.types(), 'InputObjectType');\n  }\n  enumTypes() {\n    return filterTypesOfKind(this.types(), 'EnumType');\n  }\n  builtInTypes(includeShadowed = false) {\n    const allBuiltIns = this._builtInTypes.values();\n    return includeShadowed ? allBuiltIns : allBuiltIns.filter(t => !this.isShadowedBuiltInType(t));\n  }\n  isShadowedBuiltInType(type) {\n    return type.isBuiltIn && this._types.has(type.name);\n  }\n  allTypes() {\n    return this.builtInTypes().concat(this.types());\n  }\n  type(name) {\n    const type = this._types.get(name);\n    return type ? type : this._builtInTypes.get(name);\n  }\n  typeOfKind(name, kind) {\n    const type = this.type(name);\n    return type && type.kind === kind ? type : undefined;\n  }\n  intType() {\n    return this._builtInTypes.get('Int');\n  }\n  floatType() {\n    return this._builtInTypes.get('Float');\n  }\n  stringType() {\n    return this._builtInTypes.get('String');\n  }\n  booleanType() {\n    return this._builtInTypes.get('Boolean');\n  }\n  idType() {\n    return this._builtInTypes.get('ID');\n  }\n  builtInScalarTypes() {\n    return [this.intType(), this.floatType(), this.stringType(), this.booleanType(), this.idType()];\n  }\n  addType(type) {\n    const existing = this.type(type.name);\n    if (existing) {\n      (0, utils_1.assert)(existing.isBuiltIn, () => `Type ${type} already exists in this schema`);\n    }\n    if (type.isAttached()) {\n      (0, utils_1.assert)(type.parent == this, () => `Cannot add type ${type} to this schema; it is already attached to another schema`);\n      return type;\n    }\n    if (type.isBuiltIn) {\n      (0, utils_1.assert)(!this.isConstructed, `Cannot add built-in ${type} to this schema (built-ins can only be added at schema construction time)`);\n      this._builtInTypes.set(type.name, type);\n    } else {\n      this._types.set(type.name, type);\n    }\n    Element.prototype['setParent'].call(type, this);\n    const defaultSchemaRoot = checkDefaultSchemaRoot(type);\n    if (defaultSchemaRoot && !this.schemaDefinition.root(defaultSchemaRoot)) {\n      this.schemaDefinition.setRoot(defaultSchemaRoot, type);\n    }\n    this.onModification();\n    return type;\n  }\n  directives() {\n    return this._directives.values();\n  }\n  builtInDirectives(includeShadowed = false) {\n    return includeShadowed ? this._builtInDirectives.values() : this._builtInDirectives.values().filter(d => !this.isShadowedBuiltInDirective(d));\n  }\n  allDirectives() {\n    return this.builtInDirectives().concat(this.directives());\n  }\n  isShadowedBuiltInDirective(directive) {\n    return directive.isBuiltIn && this._directives.has(directive.name);\n  }\n  directive(name) {\n    const directive = this._directives.get(name);\n    return directive ? directive : this.builtInDirective(name);\n  }\n  builtInDirective(name) {\n    return this._builtInDirectives.get(name);\n  }\n  *allNamedSchemaElement() {\n    for (const type of this.types()) {\n      yield type;\n      yield* type.allChildElements();\n    }\n    for (const directive of this.directives()) {\n      yield directive;\n      yield* directive.arguments();\n    }\n  }\n  *allSchemaElement() {\n    yield this._schemaDefinition;\n    yield* this.allNamedSchemaElement();\n  }\n  addDirectiveDefinition(directiveOrName) {\n    const definition = typeof directiveOrName === 'string' ? new DirectiveDefinition(directiveOrName) : directiveOrName;\n    const existing = this.directive(definition.name);\n    (0, utils_1.assert)(!existing || existing.isBuiltIn, () => `Directive ${definition} already exists in this schema`);\n    if (definition.isAttached()) {\n      (0, utils_1.assert)(definition.parent == this, () => `Cannot add directive ${definition} to this schema; it is already attached to another schema`);\n      return definition;\n    }\n    if (definition.isBuiltIn) {\n      (0, utils_1.assert)(!this.isConstructed, () => `Cannot add built-in ${definition} to this schema (built-ins can only be added at schema construction time)`);\n      this._builtInDirectives.set(definition.name, definition);\n    } else {\n      this._directives.set(definition.name, definition);\n    }\n    Element.prototype['setParent'].call(definition, this);\n    this.onModification();\n    return definition;\n  }\n  invalidate() {\n    if (this.isValidated) {\n      this.blueprint.onInvalidation(this);\n    }\n    this.isValidated = false;\n  }\n  assumeValid() {\n    this.runWithBuiltInModificationAllowed(() => {\n      (0, introspection_1.addIntrospectionFields)(this);\n    });\n    this.isValidated = true;\n  }\n  validate() {\n    if (this.isValidated) {\n      return;\n    }\n    this.runWithBuiltInModificationAllowed(() => {\n      (0, introspection_1.addIntrospectionFields)(this);\n    });\n    let errors = (0, validate_1.validateSDL)(this.toAST(), undefined, this.blueprint.validationRules()).map(e => this.blueprint.onGraphQLJSValidationError(this, e));\n    errors = errors.concat((0, validate_2.validateSchema)(this));\n    if (errors.length === 0) {\n      this.runWithBuiltInModificationAllowed(() => {\n        errors = this.blueprint.onValidation(this);\n      });\n    }\n    if (errors.length > 0) {\n      throw (0, exports.ErrGraphQLValidationFailed)(errors);\n    }\n    this.isValidated = true;\n  }\n  clone(builtIns) {\n    const cloned = new Schema(builtIns !== null && builtIns !== void 0 ? builtIns : this.blueprint);\n    copy(this, cloned);\n    if (this.isValidated) {\n      cloned.assumeValid();\n    }\n    return cloned;\n  }\n  getBuiltInDirective(name) {\n    const directive = this.directive(name);\n    (0, utils_1.assert)(directive, `The provided schema has not be built with the ${name} directive built-in`);\n    return directive;\n  }\n  includeDirective() {\n    return this.getBuiltInDirective('include');\n  }\n  skipDirective() {\n    return this.getBuiltInDirective('skip');\n  }\n  deprecatedDirective() {\n    return this.getBuiltInDirective('deprecated');\n  }\n  specifiedByDirective() {\n    return this.getBuiltInDirective('specifiedBy');\n  }\n  deferDirective() {\n    return this.getBuiltInDirective('defer');\n  }\n  streamDirective() {\n    return this.getBuiltInDirective('stream');\n  }\n  elementByCoordinate(coordinate) {\n    if (!coordinate.match(coordinateRegexp)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid argument \"${coordinate}: it is not a syntactically valid graphQL coordinate.\"`);\n    }\n    const argStartIdx = coordinate.indexOf('(');\n    const start = argStartIdx < 0 ? coordinate : coordinate.slice(0, argStartIdx);\n    const argName = argStartIdx < 0 ? undefined : coordinate.slice(argStartIdx + 1, coordinate.length - 2);\n    const splittedStart = start.split('.');\n    const typeOrDirectiveName = splittedStart[0];\n    const fieldOrEnumName = splittedStart[1];\n    const isDirective = typeOrDirectiveName.startsWith('@');\n    if (isDirective) {\n      if (fieldOrEnumName) {\n        throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid argument \"${coordinate}: it is not a syntactically valid graphQL coordinate.\"`);\n      }\n      const directive = this.directive(typeOrDirectiveName.slice(1));\n      return argName ? directive === null || directive === void 0 ? void 0 : directive.argument(argName) : directive;\n    } else {\n      const type = this.type(typeOrDirectiveName);\n      if (!type || !fieldOrEnumName) {\n        return type;\n      }\n      switch (type.kind) {\n        case 'ObjectType':\n        case 'InterfaceType':\n          const field = type.field(fieldOrEnumName);\n          return argName ? field === null || field === void 0 ? void 0 : field.argument(argName) : field;\n        case 'InputObjectType':\n          if (argName) {\n            throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid argument \"${coordinate}: it is not a syntactically valid graphQL coordinate.\"`);\n          }\n          return type.field(fieldOrEnumName);\n        case 'EnumType':\n          if (argName) {\n            throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid argument \"${coordinate}: it is not a syntactically valid graphQL coordinate.\"`);\n          }\n          return type.value(fieldOrEnumName);\n        default:\n          throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid argument \"${coordinate}: it is not a syntactically valid graphQL coordinate.\"`);\n      }\n    }\n  }\n}\nexports.Schema = Schema;\nclass RootType extends BaseExtensionMember {\n  constructor(rootKind, type) {\n    super();\n    this.rootKind = rootKind;\n    this.type = type;\n  }\n  isDefaultRootName() {\n    return defaultRootName(this.rootKind) == this.type.name;\n  }\n  removeInner() {\n    SchemaDefinition.prototype['removeRootType'].call(this._parent, this);\n  }\n}\nexports.RootType = RootType;\nclass SchemaDefinition extends SchemaElement {\n  constructor() {\n    super(...arguments);\n    this.kind = 'SchemaDefinition';\n    this._roots = new utils_1.MapWithCachedArrays();\n    this.preserveEmptyDefinition = false;\n  }\n  roots() {\n    return this._roots.values();\n  }\n  applyDirective(nameOrDef, args, asFirstDirective = false) {\n    var _a, _b;\n    const applied = super.applyDirective(nameOrDef, args, asFirstDirective);\n    const schema = this.schema();\n    const coreFeatures = schema.coreFeatures;\n    if ((0, coreSpec_1.isCoreSpecDirectiveApplication)(applied)) {\n      if (coreFeatures) {\n        throw error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid duplicate application of @core/@link`);\n      }\n      const schemaDirective = applied;\n      const args = schemaDirective.arguments();\n      const url = coreSpec_1.FeatureUrl.parse((_a = args.url) !== null && _a !== void 0 ? _a : args.feature);\n      const imports = (0, coreSpec_1.extractCoreFeatureImports)(url, schemaDirective);\n      const core = new CoreFeature(url, (_b = args.as) !== null && _b !== void 0 ? _b : url.name, schemaDirective, imports, args.for);\n      Schema.prototype['markAsCoreSchema'].call(schema, core);\n      this.appliedDirectives.filter(a => a !== applied).forEach(other => CoreFeatures.prototype['maybeAddFeature'].call(schema.coreFeatures, other));\n    } else if (coreFeatures) {\n      CoreFeatures.prototype['maybeAddFeature'].call(coreFeatures, applied);\n    }\n    this.onModification();\n    return applied;\n  }\n  root(rootKind) {\n    return this._roots.get(rootKind);\n  }\n  rootType(rootKind) {\n    var _a;\n    return (_a = this.root(rootKind)) === null || _a === void 0 ? void 0 : _a.type;\n  }\n  setRoot(rootKind, nameOrType) {\n    let toSet;\n    if (typeof nameOrType === 'string') {\n      this.checkUpdate();\n      const obj = this.schema().type(nameOrType);\n      if (!obj) {\n        throw error_1.ERRORS.INVALID_GRAPHQL.err(`Cannot set schema ${rootKind} root to unknown type ${nameOrType}`);\n      } else if (obj.kind != 'ObjectType') {\n        throw error_1.ERRORS.INVALID_GRAPHQL.err(`${defaultRootName(rootKind)} root type must be an Object type${rootKind === 'query' ? '' : ' if provided'}, it cannot be set to ${nameOrType} (an ${obj.kind}).`);\n      }\n      toSet = new RootType(rootKind, obj);\n    } else {\n      this.checkUpdate(nameOrType);\n      toSet = new RootType(rootKind, nameOrType);\n    }\n    const prevRoot = this._roots.get(rootKind);\n    if (prevRoot) {\n      removeReferenceToType(this, prevRoot.type);\n    }\n    this._roots.set(rootKind, toSet);\n    Element.prototype['setParent'].call(toSet, this);\n    addReferenceToType(this, toSet.type);\n    this.onModification();\n    return toSet;\n  }\n  extensions() {\n    var _a;\n    return (_a = this._extensions) !== null && _a !== void 0 ? _a : [];\n  }\n  hasExtension(extension) {\n    var _a, _b;\n    return (_b = (_a = this._extensions) === null || _a === void 0 ? void 0 : _a.includes(extension)) !== null && _b !== void 0 ? _b : false;\n  }\n  newExtension() {\n    return this.addExtension(new Extension());\n  }\n  addExtension(extension) {\n    this.checkUpdate();\n    if (this.hasExtension(extension)) {\n      return extension;\n    }\n    (0, utils_1.assert)(!extension.extendedElement, 'Cannot add extension to this schema: extension is already added to another schema');\n    if (this._extensions) {\n      this._extensions.push(extension);\n    } else {\n      this._extensions = [extension];\n    }\n    Extension.prototype['setExtendedElement'].call(extension, this);\n    this.onModification();\n    return extension;\n  }\n  hasExtensionElements() {\n    return !!this._extensions;\n  }\n  hasNonExtensionElements() {\n    return this.preserveEmptyDefinition || this.appliedDirectives.some(d => d.ofExtension() === undefined) || this.roots().some(r => r.ofExtension() === undefined);\n  }\n  removeRootType(rootType) {\n    this._roots.delete(rootType.rootKind);\n    removeReferenceToType(this, rootType.type);\n  }\n  removeTypeReference(toRemove) {\n    for (const rootType of this.roots()) {\n      if (rootType.type == toRemove) {\n        this._roots.delete(rootType.rootKind);\n      }\n    }\n  }\n  toString() {\n    return `schema[${this._roots.keys().join(', ')}]`;\n  }\n}\nexports.SchemaDefinition = SchemaDefinition;\nclass ScalarType extends BaseNamedType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'ScalarType';\n    this.astDefinitionKind = graphql_1.Kind.SCALAR_TYPE_DEFINITION;\n  }\n  removeTypeReference(type) {\n    (0, utils_1.assert)(false, `Scalar type ${this} can't reference other types; shouldn't be asked to remove reference to ${type}`);\n  }\n  hasNonExtensionInnerElements() {\n    return false;\n  }\n  removeInnerElementsExtensions() {}\n  removeInnerElements() {}\n  removeReferenceRecursive(ref) {\n    ref.remove();\n  }\n}\nexports.ScalarType = ScalarType;\nclass InterfaceImplementation extends BaseExtensionMember {\n  constructor(itf) {\n    super();\n    this.interface = itf;\n  }\n  removeInner() {\n    FieldBasedType.prototype['removeInterfaceImplementation'].call(this._parent, this.interface);\n  }\n  toString() {\n    return `'implements ${this.interface}'`;\n  }\n}\nexports.InterfaceImplementation = InterfaceImplementation;\nclass FieldBasedType extends BaseNamedType {\n  constructor() {\n    super(...arguments);\n    this._fields = new utils_1.MapWithCachedArrays();\n  }\n  onAttached() {\n    Schema.prototype['runWithBuiltInModificationAllowed'].call(this.schema(), () => {\n      this.addField(new FieldDefinition(exports.typenameFieldName, true), new NonNullType(this.schema().stringType()));\n    });\n  }\n  removeFieldInternal(field) {\n    this._fields.delete(field.name);\n    this._cachedNonBuiltInFields = undefined;\n  }\n  interfaceImplementations() {\n    var _a, _b;\n    return (_b = (_a = this._interfaceImplementations) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : [];\n  }\n  interfaceImplementation(type) {\n    return this._interfaceImplementations ? this._interfaceImplementations.get(typeof type === 'string' ? type : type.name) : undefined;\n  }\n  interfaces() {\n    return this.interfaceImplementations().map(impl => impl.interface);\n  }\n  implementsInterface(type) {\n    var _a, _b;\n    return (_b = (_a = this._interfaceImplementations) === null || _a === void 0 ? void 0 : _a.has(typeof type === 'string' ? type : type.name)) !== null && _b !== void 0 ? _b : false;\n  }\n  addImplementedInterface(nameOrItfOrItfImpl) {\n    var _a;\n    let toAdd;\n    if (nameOrItfOrItfImpl instanceof InterfaceImplementation) {\n      this.checkUpdate(nameOrItfOrItfImpl);\n      toAdd = nameOrItfOrItfImpl;\n    } else {\n      let itf;\n      if (typeof nameOrItfOrItfImpl === 'string') {\n        this.checkUpdate();\n        const maybeItf = this.schema().type(nameOrItfOrItfImpl);\n        if (!maybeItf) {\n          throw error_1.ERRORS.INVALID_GRAPHQL.err(`Cannot implement unknown type ${nameOrItfOrItfImpl}`);\n        } else if (maybeItf.kind != 'InterfaceType') {\n          throw error_1.ERRORS.INVALID_GRAPHQL.err(`Cannot implement non-interface type ${nameOrItfOrItfImpl} (of type ${maybeItf.kind})`);\n        }\n        itf = maybeItf;\n      } else {\n        itf = nameOrItfOrItfImpl;\n      }\n      toAdd = new InterfaceImplementation(itf);\n    }\n    const existing = (_a = this._interfaceImplementations) === null || _a === void 0 ? void 0 : _a.get(toAdd.interface.name);\n    if (!existing) {\n      if (!this._interfaceImplementations) {\n        this._interfaceImplementations = new utils_1.MapWithCachedArrays();\n      }\n      this._interfaceImplementations.set(toAdd.interface.name, toAdd);\n      addReferenceToType(this, toAdd.interface);\n      Element.prototype['setParent'].call(toAdd, this);\n      this.onModification();\n      return toAdd;\n    } else {\n      return existing;\n    }\n  }\n  fields() {\n    if (!this._cachedNonBuiltInFields) {\n      this._cachedNonBuiltInFields = this._fields.values().filter(f => !f.isBuiltIn);\n    }\n    return this._cachedNonBuiltInFields;\n  }\n  hasFields() {\n    return this.fields().length > 0;\n  }\n  builtInFields() {\n    return this.allFields().filter(f => f.isBuiltIn);\n  }\n  allFields() {\n    return this._fields.values();\n  }\n  field(name) {\n    return this._fields.get(name);\n  }\n  typenameField() {\n    return this.field(exports.typenameFieldName);\n  }\n  addField(nameOrField, type) {\n    let toAdd;\n    if (typeof nameOrField === 'string') {\n      this.checkUpdate();\n      toAdd = new FieldDefinition(nameOrField);\n    } else {\n      this.checkUpdate(nameOrField);\n      toAdd = nameOrField;\n    }\n    if (this.field(toAdd.name)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Field ${toAdd.name} already exists on ${this}`);\n    }\n    if (type && !isOutputType(type)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid input type ${type} for field ${toAdd.name}: object and interface field types should be output types.`);\n    }\n    this._fields.set(toAdd.name, toAdd);\n    this._cachedNonBuiltInFields = undefined;\n    Element.prototype['setParent'].call(toAdd, this);\n    if (type) {\n      toAdd.type = type;\n    }\n    this.onModification();\n    return toAdd;\n  }\n  *allChildElements() {\n    for (const field of this._fields.values()) {\n      yield field;\n      yield* field.arguments();\n    }\n  }\n  removeInterfaceImplementation(itf) {\n    var _a;\n    (_a = this._interfaceImplementations) === null || _a === void 0 ? void 0 : _a.delete(itf.name);\n    removeReferenceToType(this, itf);\n  }\n  removeTypeReference(type) {\n    var _a;\n    (_a = this._interfaceImplementations) === null || _a === void 0 ? void 0 : _a.delete(type.name);\n  }\n  removeInnerElements() {\n    for (const interfaceImpl of this.interfaceImplementations()) {\n      interfaceImpl.remove();\n    }\n    for (const field of this.allFields()) {\n      if (field.isBuiltIn) {\n        FieldDefinition.prototype['removeParent'].call(field);\n      } else {\n        field.remove();\n      }\n    }\n  }\n  hasNonExtensionInnerElements() {\n    return this.interfaceImplementations().some(itf => itf.ofExtension() === undefined) || this.fields().some(f => f.ofExtension() === undefined);\n  }\n  removeInnerElementsExtensions() {\n    this.interfaceImplementations().forEach(itf => itf.removeOfExtension());\n    this.fields().forEach(f => f.removeOfExtension());\n  }\n}\nclass ObjectType extends FieldBasedType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'ObjectType';\n    this.astDefinitionKind = graphql_1.Kind.OBJECT_TYPE_DEFINITION;\n  }\n  isRootType() {\n    const schema = this.schema();\n    return schema.schemaDefinition.roots().some(rt => rt.type == this);\n  }\n  isQueryRootType() {\n    var _a;\n    const schema = this.schema();\n    return ((_a = schema.schemaDefinition.root('query')) === null || _a === void 0 ? void 0 : _a.type) === this;\n  }\n  isSubscriptionRootType() {\n    var _a;\n    const schema = this.schema();\n    return ((_a = schema.schemaDefinition.root('subscription')) === null || _a === void 0 ? void 0 : _a.type) === this;\n  }\n  removeReferenceRecursive(ref) {\n    switch (ref.kind) {\n      case 'FieldDefinition':\n        ref.removeRecursive();\n        break;\n      case 'UnionType':\n        if (ref.membersCount() === 0) {\n          ref.removeRecursive();\n        }\n        break;\n    }\n  }\n  unionsWhereMember() {\n    var _a, _b;\n    return (_b = (_a = this._referencers) === null || _a === void 0 ? void 0 : _a.filter(r => r instanceof BaseNamedType && isUnionType(r))) !== null && _b !== void 0 ? _b : [];\n  }\n}\nexports.ObjectType = ObjectType;\nclass InterfaceType extends FieldBasedType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'InterfaceType';\n    this.astDefinitionKind = graphql_1.Kind.INTERFACE_TYPE_DEFINITION;\n  }\n  allImplementations() {\n    return this.referencers().filter(ref => ref.kind === 'ObjectType' || ref.kind === 'InterfaceType');\n  }\n  possibleRuntimeTypes() {\n    return this.allImplementations().filter(impl => impl.kind === 'ObjectType');\n  }\n  isPossibleRuntimeType(type) {\n    const typeName = typeof type === 'string' ? type : type.name;\n    return this.possibleRuntimeTypes().some(t => t.name == typeName);\n  }\n  removeReferenceRecursive(ref) {\n    if (ref.kind === 'FieldDefinition') {\n      ref.removeRecursive();\n    }\n  }\n}\nexports.InterfaceType = InterfaceType;\nclass UnionMember extends BaseExtensionMember {\n  constructor(type) {\n    super();\n    this.type = type;\n  }\n  removeInner() {\n    UnionType.prototype['removeMember'].call(this._parent, this.type);\n  }\n}\nexports.UnionMember = UnionMember;\nclass UnionType extends BaseNamedType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'UnionType';\n    this.astDefinitionKind = graphql_1.Kind.UNION_TYPE_DEFINITION;\n    this._members = new utils_1.MapWithCachedArrays();\n  }\n  onAttached() {\n    Schema.prototype['runWithBuiltInModificationAllowed'].call(this.schema(), () => {\n      this._typenameField = new FieldDefinition(exports.typenameFieldName, true);\n      Element.prototype['setParent'].call(this._typenameField, this);\n      this._typenameField.type = new NonNullType(this.schema().stringType());\n    });\n  }\n  types() {\n    return this.members().map(m => m.type);\n  }\n  members() {\n    return this._members.values();\n  }\n  membersCount() {\n    return this._members.size;\n  }\n  hasTypeMember(type) {\n    return this._members.has(typeof type === 'string' ? type : type.name);\n  }\n  addType(nameOrTypeOrMember) {\n    let toAdd;\n    if (nameOrTypeOrMember instanceof UnionMember) {\n      this.checkUpdate(nameOrTypeOrMember);\n      toAdd = nameOrTypeOrMember;\n    } else {\n      let obj;\n      if (typeof nameOrTypeOrMember === 'string') {\n        this.checkUpdate();\n        const maybeObj = this.schema().type(nameOrTypeOrMember);\n        if (!maybeObj) {\n          throw error_1.ERRORS.INVALID_GRAPHQL.err(`Cannot add unknown type ${nameOrTypeOrMember} as member of union type ${this.name}`);\n        } else if (maybeObj.kind != 'ObjectType') {\n          throw error_1.ERRORS.INVALID_GRAPHQL.err(`Cannot add non-object type ${nameOrTypeOrMember} (of type ${maybeObj.kind}) as member of union type ${this.name}`);\n        }\n        obj = maybeObj;\n      } else {\n        this.checkUpdate(nameOrTypeOrMember);\n        obj = nameOrTypeOrMember;\n      }\n      toAdd = new UnionMember(obj);\n    }\n    const existing = this._members.get(toAdd.type.name);\n    if (!existing) {\n      this._members.set(toAdd.type.name, toAdd);\n      Element.prototype['setParent'].call(toAdd, this);\n      addReferenceToType(this, toAdd.type);\n      this.onModification();\n      return toAdd;\n    } else {\n      return existing;\n    }\n  }\n  clearTypes() {\n    for (const type of this.types()) {\n      this.removeMember(type);\n    }\n    this.onModification();\n  }\n  field(name) {\n    if (name === exports.typenameFieldName && this._typenameField) {\n      return this._typenameField;\n    }\n    return undefined;\n  }\n  typenameField() {\n    return this._typenameField;\n  }\n  removeMember(type) {\n    this._members.delete(type.name);\n    removeReferenceToType(this, type);\n  }\n  removeTypeReference(type) {\n    this._members.delete(type.name);\n  }\n  removeInnerElements() {\n    for (const member of this.members()) {\n      member.remove();\n    }\n  }\n  hasNonExtensionInnerElements() {\n    return this.members().some(m => m.ofExtension() === undefined);\n  }\n  removeReferenceRecursive(ref) {\n    ref.removeRecursive();\n  }\n  removeInnerElementsExtensions() {\n    this.members().forEach(m => m.removeOfExtension());\n  }\n}\nexports.UnionType = UnionType;\nclass EnumType extends BaseNamedType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'EnumType';\n    this.astDefinitionKind = graphql_1.Kind.ENUM_TYPE_DEFINITION;\n    this._values = [];\n  }\n  get values() {\n    return Array.from(this._values);\n  }\n  value(name) {\n    return this._values.find(v => v.name === name);\n  }\n  addValue(nameOrValue) {\n    let toAdd;\n    if (typeof nameOrValue === 'string') {\n      this.checkUpdate();\n      toAdd = new EnumValue(nameOrValue);\n    } else {\n      this.checkUpdate(nameOrValue);\n      toAdd = nameOrValue;\n    }\n    const existing = this.value(toAdd.name);\n    if (!existing) {\n      this._values.push(toAdd);\n      Element.prototype['setParent'].call(toAdd, this);\n      this.onModification();\n      return toAdd;\n    } else {\n      return existing;\n    }\n  }\n  removeTypeReference(type) {\n    (0, utils_1.assert)(false, `Eum type ${this} can't reference other types; shouldn't be asked to remove reference to ${type}`);\n  }\n  removeValueInternal(value) {\n    (0, utils_1.removeArrayElement)(value, this._values);\n  }\n  removeInnerElements() {\n    const values = this.values;\n    for (const value of values) {\n      value.remove();\n    }\n  }\n  hasNonExtensionInnerElements() {\n    return this._values.some(v => v.ofExtension() === undefined);\n  }\n  removeReferenceRecursive(ref) {\n    ref.removeRecursive();\n  }\n  removeInnerElementsExtensions() {\n    this._values.forEach(v => v.removeOfExtension());\n  }\n}\nexports.EnumType = EnumType;\nclass InputObjectType extends BaseNamedType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'InputObjectType';\n    this.astDefinitionKind = graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION;\n    this._fields = new Map();\n  }\n  fields() {\n    if (!this._cachedFieldsArray) {\n      this._cachedFieldsArray = (0, utils_1.mapValues)(this._fields);\n    }\n    return this._cachedFieldsArray;\n  }\n  field(name) {\n    return this._fields.get(name);\n  }\n  addField(nameOrField, type) {\n    const toAdd = typeof nameOrField === 'string' ? new InputFieldDefinition(nameOrField) : nameOrField;\n    this.checkUpdate(toAdd);\n    if (this.field(toAdd.name)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Field ${toAdd.name} already exists on ${this}`);\n    }\n    if (type && !isInputType(type)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid output type ${type} for field ${toAdd.name}: input field types should be input types.`);\n    }\n    this._fields.set(toAdd.name, toAdd);\n    this._cachedFieldsArray = undefined;\n    Element.prototype['setParent'].call(toAdd, this);\n    if (typeof nameOrField === 'string' && type) {\n      toAdd.type = type;\n    }\n    this.onModification();\n    return toAdd;\n  }\n  hasFields() {\n    return this._fields.size > 0;\n  }\n  *allChildElements() {\n    yield* this._fields.values();\n  }\n  removeTypeReference(type) {\n    (0, utils_1.assert)(false, `Input Object type ${this} can't reference other types; shouldn't be asked to remove reference to ${type}`);\n  }\n  removeInnerElements() {\n    for (const field of this.fields()) {\n      field.remove();\n    }\n  }\n  removeFieldInternal(field) {\n    this._fields.delete(field.name);\n    this._cachedFieldsArray = undefined;\n  }\n  hasNonExtensionInnerElements() {\n    return this.fields().some(f => f.ofExtension() === undefined);\n  }\n  removeReferenceRecursive(ref) {\n    if (ref.kind === 'ArgumentDefinition') {\n      ref.parent().removeRecursive();\n    } else {\n      ref.removeRecursive();\n    }\n  }\n  removeInnerElementsExtensions() {\n    this.fields().forEach(f => f.removeOfExtension());\n  }\n}\nexports.InputObjectType = InputObjectType;\nclass BaseWrapperType {\n  constructor(_type) {\n    this._type = _type;\n    (0, utils_1.assert)(this._type, 'Cannot wrap an undefined/null type');\n  }\n  schema() {\n    return this.baseType().schema();\n  }\n  isAttached() {\n    return this.baseType().isAttached();\n  }\n  get ofType() {\n    return this._type;\n  }\n  baseType() {\n    return baseType(this._type);\n  }\n}\nclass ListType extends BaseWrapperType {\n  constructor(type) {\n    super(type);\n    this.kind = 'ListType';\n  }\n  toString() {\n    return `[${this.ofType}]`;\n  }\n}\nexports.ListType = ListType;\nclass NonNullType extends BaseWrapperType {\n  constructor(type) {\n    super(type);\n    this.kind = 'NonNullType';\n  }\n  toString() {\n    return `${this.ofType}!`;\n  }\n}\nexports.NonNullType = NonNullType;\nclass FieldDefinition extends NamedSchemaElementWithType {\n  constructor(name, isBuiltIn = false) {\n    super(name);\n    this.isBuiltIn = isBuiltIn;\n    this.kind = 'FieldDefinition';\n  }\n  isElementBuiltIn() {\n    return this.isBuiltIn;\n  }\n  get coordinate() {\n    const parent = this._parent;\n    return `${parent == undefined ? '<detached>' : parent.coordinate}.${this.name}`;\n  }\n  hasArguments() {\n    return !!this._args && this._args.size > 0;\n  }\n  arguments() {\n    var _a, _b;\n    return (_b = (_a = this._args) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : [];\n  }\n  argument(name) {\n    var _a;\n    return (_a = this._args) === null || _a === void 0 ? void 0 : _a.get(name);\n  }\n  addArgument(nameOrArg, type, defaultValue) {\n    let toAdd;\n    if (typeof nameOrArg === 'string') {\n      this.checkUpdate();\n      toAdd = new ArgumentDefinition(nameOrArg);\n      toAdd.defaultValue = defaultValue;\n    } else {\n      this.checkUpdate(nameOrArg);\n      toAdd = nameOrArg;\n    }\n    const existing = this.argument(toAdd.name);\n    if (existing) {\n      if (type && existing.type && !(0, types_1.sameType)(type, existing.type)) {\n        throw error_1.ERRORS.INVALID_GRAPHQL.err(`Argument ${toAdd.name} already exists on field ${this.name} with a different type (${existing.type})`);\n      }\n      if (defaultValue && (!existing.defaultValue || !(0, values_1.valueEquals)(defaultValue, existing.defaultValue))) {\n        throw error_1.ERRORS.INVALID_GRAPHQL.err(`Argument ${toAdd.name} already exists on field ${this.name} with a different default value (${(0, values_1.valueToString)(existing.defaultValue)})`);\n      }\n      return existing;\n    }\n    if (type && !isInputType(type)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid output type ${type} for argument ${toAdd.name} of ${this}: arguments should be input types.`);\n    }\n    if (!this._args) {\n      this._args = new utils_1.MapWithCachedArrays();\n    }\n    this._args.set(toAdd.name, toAdd);\n    Element.prototype['setParent'].call(toAdd, this);\n    if (typeof nameOrArg === 'string') {\n      toAdd.type = type;\n    }\n    this.onModification();\n    return toAdd;\n  }\n  ofExtension() {\n    return this._extension;\n  }\n  removeOfExtension() {\n    this._extension = undefined;\n  }\n  setOfExtension(extension) {\n    var _a;\n    this.checkUpdate();\n    (0, utils_1.assert)(!extension || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.hasExtension(extension)), () => `Cannot mark field ${this.name} as part of the provided extension: it is not an extension of field parent type ${this.parent}`);\n    this._extension = extension;\n    this.onModification();\n  }\n  isIntrospectionField() {\n    return (0, introspection_1.isIntrospectionName)(this.name);\n  }\n  isSchemaIntrospectionField() {\n    return introspection_1.introspectionFieldNames.includes(this.name);\n  }\n  removeArgumentInternal(name) {\n    if (this._args) {\n      this._args.delete(name);\n    }\n  }\n  removeParent() {\n    this._parent = undefined;\n  }\n  isDeprecated() {\n    return this.hasAppliedDirective('deprecated');\n  }\n  remove() {\n    if (!this._parent) {\n      return [];\n    }\n    this.checkRemoval();\n    this.onModification();\n    this.sourceAST = undefined;\n    this.type = undefined;\n    this.removeAppliedDirectives();\n    for (const arg of this.arguments()) {\n      arg.remove();\n    }\n    FieldBasedType.prototype['removeFieldInternal'].call(this._parent, this);\n    this._parent = undefined;\n    this._extension = undefined;\n    return [];\n  }\n  removeRecursive() {\n    const parent = this._parent;\n    this.remove();\n    if (parent && !isUnionType(parent) && parent.fields().length === 0) {\n      parent.removeRecursive();\n    }\n  }\n  toString() {\n    const args = this.hasArguments() ? '(' + this.arguments().map(arg => arg.toString()).join(', ') + ')' : \"\";\n    return `${this.name}${args}: ${this.type}`;\n  }\n}\nexports.FieldDefinition = FieldDefinition;\nclass InputFieldDefinition extends NamedSchemaElementWithType {\n  constructor() {\n    super(...arguments);\n    this.kind = 'InputFieldDefinition';\n  }\n  get coordinate() {\n    const parent = this._parent;\n    return `${parent == undefined ? '<detached>' : parent.coordinate}.${this.name}`;\n  }\n  isRequired() {\n    return isNonNullType(this.type) && this.defaultValue === undefined;\n  }\n  ofExtension() {\n    return this._extension;\n  }\n  removeOfExtension() {\n    this._extension = undefined;\n  }\n  setOfExtension(extension) {\n    var _a;\n    this.checkUpdate();\n    (0, utils_1.assert)(!extension || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.hasExtension(extension)), () => `Cannot mark field ${this.name} as part of the provided extension: it is not an extension of field parent type ${this.parent}`);\n    this._extension = extension;\n    this.onModification();\n  }\n  isDeprecated() {\n    return this.hasAppliedDirective('deprecated');\n  }\n  remove() {\n    if (!this._parent) {\n      return [];\n    }\n    this.checkRemoval();\n    this.onModification();\n    this.sourceAST = undefined;\n    this.type = undefined;\n    this.defaultValue = undefined;\n    this.removeAppliedDirectives();\n    InputObjectType.prototype['removeFieldInternal'].call(this._parent, this);\n    this._parent = undefined;\n    this._extension = undefined;\n    return [];\n  }\n  removeRecursive() {\n    const parent = this._parent;\n    this.remove();\n    if (parent && parent.fields().length === 0) {\n      parent.removeRecursive();\n    }\n  }\n  toString() {\n    const defaultStr = this.defaultValue === undefined ? \"\" : ` = ${(0, values_1.valueToString)(this.defaultValue, this.type)}`;\n    return `${this.name}: ${this.type}${defaultStr}`;\n  }\n}\nexports.InputFieldDefinition = InputFieldDefinition;\nclass ArgumentDefinition extends NamedSchemaElementWithType {\n  constructor(name) {\n    super(name);\n    this.kind = 'ArgumentDefinition';\n  }\n  get coordinate() {\n    const parent = this._parent;\n    return `${parent == undefined ? '<detached>' : parent.coordinate}(${this.name}:)`;\n  }\n  isRequired() {\n    return isNonNullType(this.type) && this.defaultValue === undefined;\n  }\n  isDeprecated() {\n    return this.hasAppliedDirective('deprecated');\n  }\n  remove() {\n    if (!this._parent) {\n      return [];\n    }\n    this.checkRemoval();\n    this.onModification();\n    this.sourceAST = undefined;\n    this.type = undefined;\n    this.defaultValue = undefined;\n    this.removeAppliedDirectives();\n    if (this._parent instanceof FieldDefinition) {\n      FieldDefinition.prototype['removeArgumentInternal'].call(this._parent, this.name);\n    } else {\n      DirectiveDefinition.prototype['removeArgumentInternal'].call(this._parent, this.name);\n    }\n    this._parent = undefined;\n    return [];\n  }\n  toString() {\n    const defaultStr = this.defaultValue === undefined ? \"\" : ` = ${(0, values_1.valueToString)(this.defaultValue, this.type)}`;\n    return `${this.name}: ${this.type}${defaultStr}`;\n  }\n}\nexports.ArgumentDefinition = ArgumentDefinition;\nclass EnumValue extends NamedSchemaElement {\n  constructor() {\n    super(...arguments);\n    this.kind = 'EnumValue';\n  }\n  get coordinate() {\n    const parent = this._parent;\n    return `${parent == undefined ? '<detached>' : parent.coordinate}.${this.name}`;\n  }\n  ofExtension() {\n    return this._extension;\n  }\n  removeOfExtension() {\n    this._extension = undefined;\n  }\n  setOfExtension(extension) {\n    var _a;\n    this.checkUpdate();\n    (0, utils_1.assert)(!extension || ((_a = this._parent) === null || _a === void 0 ? void 0 : _a.hasExtension(extension)), () => `Cannot mark field ${this.name} as part of the provided extension: it is not an extension of enum value parent type ${this.parent}`);\n    this._extension = extension;\n    this.onModification();\n  }\n  isDeprecated() {\n    return this.hasAppliedDirective('deprecated');\n  }\n  remove() {\n    if (!this._parent) {\n      return [];\n    }\n    this.checkRemoval();\n    this.onModification();\n    this.sourceAST = undefined;\n    this.removeAppliedDirectives();\n    EnumType.prototype['removeValueInternal'].call(this._parent, this);\n    this._parent = undefined;\n    this._extension = undefined;\n    return [];\n  }\n  removeTypeReference(type) {\n    (0, utils_1.assert)(false, `Enum value ${this} can't reference other types; shouldn't be asked to remove reference to ${type}`);\n  }\n  toString() {\n    return `${this.name}`;\n  }\n}\nexports.EnumValue = EnumValue;\nclass DirectiveDefinition extends NamedSchemaElement {\n  constructor(name, isBuiltIn = false) {\n    super(name);\n    this.isBuiltIn = isBuiltIn;\n    this.kind = 'DirectiveDefinition';\n    this.repeatable = false;\n    this._locations = [];\n  }\n  get coordinate() {\n    return `@${this.name}`;\n  }\n  arguments() {\n    var _a, _b;\n    return (_b = (_a = this._args) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : [];\n  }\n  argument(name) {\n    var _a;\n    return (_a = this._args) === null || _a === void 0 ? void 0 : _a.get(name);\n  }\n  addArgument(nameOrArg, type, defaultValue) {\n    let toAdd;\n    if (typeof nameOrArg === 'string') {\n      this.checkUpdate();\n      toAdd = new ArgumentDefinition(nameOrArg);\n      toAdd.defaultValue = defaultValue;\n    } else {\n      this.checkUpdate(nameOrArg);\n      toAdd = nameOrArg;\n    }\n    if (this.argument(toAdd.name)) {\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Argument ${toAdd.name} already exists on field ${this.name}`);\n    }\n    if (!this._args) {\n      this._args = new utils_1.MapWithCachedArrays();\n    }\n    this._args.set(toAdd.name, toAdd);\n    Element.prototype['setParent'].call(toAdd, this);\n    if (typeof nameOrArg === 'string') {\n      toAdd.type = type;\n    }\n    this.onModification();\n    return toAdd;\n  }\n  removeArgumentInternal(name) {\n    var _a;\n    (_a = this._args) === null || _a === void 0 ? void 0 : _a.delete(name);\n  }\n  get locations() {\n    return this._locations;\n  }\n  addLocations(...locations) {\n    let modified = false;\n    for (const location of locations) {\n      if (!this._locations.includes(location)) {\n        this._locations.push(location);\n        modified = true;\n      }\n    }\n    if (modified) {\n      this.onModification();\n    }\n    return this;\n  }\n  addAllLocations() {\n    return this.addLocations(...Object.values(graphql_1.DirectiveLocation));\n  }\n  addAllTypeLocations() {\n    return this.addLocations(graphql_1.DirectiveLocation.SCALAR, graphql_1.DirectiveLocation.OBJECT, graphql_1.DirectiveLocation.INTERFACE, graphql_1.DirectiveLocation.UNION, graphql_1.DirectiveLocation.ENUM, graphql_1.DirectiveLocation.INPUT_OBJECT);\n  }\n  removeLocations(...locations) {\n    let modified = false;\n    for (const location of locations) {\n      modified || (modified = (0, utils_1.removeArrayElement)(location, this._locations));\n    }\n    if (modified) {\n      this.onModification();\n    }\n    return this;\n  }\n  hasExecutableLocations() {\n    return this.locations.some(loc => isExecutableDirectiveLocation(loc));\n  }\n  hasTypeSystemLocations() {\n    return this.locations.some(loc => isTypeSystemDirectiveLocation(loc));\n  }\n  applications() {\n    var _a;\n    return (_a = this._referencers) !== null && _a !== void 0 ? _a : [];\n  }\n  addReferencer(referencer) {\n    (0, utils_1.assert)(referencer, 'Referencer should exists');\n    if (this._referencers) {\n      if (!this._referencers.includes(referencer)) {\n        this._referencers.push(referencer);\n      }\n    } else {\n      this._referencers = [referencer];\n    }\n  }\n  removeReferencer(referencer) {\n    if (this._referencers) {\n      (0, utils_1.removeArrayElement)(referencer, this._referencers);\n    }\n  }\n  removeTypeReference(type) {\n    (0, utils_1.assert)(false, `Directive definition ${this} can't reference other types (it's arguments can); shouldn't be asked to remove reference to ${type}`);\n  }\n  remove() {\n    var _a;\n    if (!this._parent) {\n      return [];\n    }\n    this.checkRemoval();\n    this.onModification();\n    this.sourceAST = undefined;\n    (0, utils_1.assert)(!this._appliedDirectives || this._appliedDirectives.length === 0, \"Directive definition should not have directive applied to it\");\n    for (const arg of this.arguments()) {\n      arg.remove();\n    }\n    const toReturn = (_a = this._referencers) !== null && _a !== void 0 ? _a : [];\n    this._referencers = undefined;\n    Schema.prototype['removeDirectiveInternal'].call(this._parent, this);\n    this._parent = undefined;\n    return toReturn;\n  }\n  removeRecursive() {\n    this.remove().forEach(ref => ref.remove());\n  }\n  toAST() {\n    const doc = (0, graphql_1.parse)((0, print_1.printDirectiveDefinition)(this));\n    return doc.definitions[0];\n  }\n  toString() {\n    return `@${this.name}`;\n  }\n}\nexports.DirectiveDefinition = DirectiveDefinition;\nclass Directive extends Element {\n  constructor(name, _args = Object.create(null)) {\n    super();\n    this.name = name;\n    this._args = _args;\n  }\n  schema() {\n    return this.parent.schema();\n  }\n  get definition() {\n    if (!this.isAttached()) {\n      return undefined;\n    }\n    const doc = this.schema();\n    return doc.directive(this.name);\n  }\n  arguments(includeDefaultValues = false) {\n    if (!includeDefaultValues) {\n      return this._args;\n    }\n    const definition = this.definition;\n    (0, utils_1.assert)(definition, () => `Cannot include default values for arguments: cannot find directive definition for ${this.name}`);\n    const updated = Object.create(null);\n    for (const argDef of definition.arguments()) {\n      const argValue = (0, values_1.withDefaultValues)(this._args[argDef.name], argDef);\n      if (argValue !== undefined) {\n        updated[argDef.name] = argValue;\n      }\n    }\n    return updated;\n  }\n  onModification() {\n    if (this.isAttachedToSchemaElement()) {\n      Schema.prototype['onModification'].call(this.schema());\n    }\n  }\n  isAttachedToSchemaElement() {\n    return this.isAttached();\n  }\n  setArguments(args) {\n    this._args = args;\n    this.onModification();\n  }\n  argumentType(name) {\n    var _a, _b;\n    return (_b = (_a = this.definition) === null || _a === void 0 ? void 0 : _a.argument(name)) === null || _b === void 0 ? void 0 : _b.type;\n  }\n  matchArguments(expectedArgs) {\n    const entries = Object.entries(this._args);\n    if (entries.length !== Object.keys(expectedArgs).length) {\n      return false;\n    }\n    for (const [key, val] of entries) {\n      if (!(key in expectedArgs)) {\n        return false;\n      }\n      const expectedVal = expectedArgs[key];\n      if (!(0, values_1.valueEquals)(expectedVal, val)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  ofExtension() {\n    return this._extension;\n  }\n  removeOfExtension() {\n    this._extension = undefined;\n  }\n  setOfExtension(extension) {\n    this.checkUpdate();\n    if (extension) {\n      const parent = this.parent;\n      (0, utils_1.assert)(parent instanceof SchemaDefinition || parent instanceof BaseNamedType, 'Can only mark directive parts of extensions when directly apply to type or schema definition.');\n      (0, utils_1.assert)(parent.hasExtension(extension), () => `Cannot mark directive ${this.name} as part of the provided extension: it is not an extension of parent ${parent}`);\n    }\n    this._extension = extension;\n    this.onModification();\n  }\n  argumentsToAST() {\n    const entries = Object.entries(this._args);\n    if (entries.length === 0) {\n      return undefined;\n    }\n    const definition = this.definition;\n    (0, utils_1.assert)(definition, () => `Cannot convert arguments of detached directive ${this}`);\n    return entries.map(([n, v]) => {\n      return {\n        kind: graphql_1.Kind.ARGUMENT,\n        name: {\n          kind: graphql_1.Kind.NAME,\n          value: n\n        },\n        value: (0, values_1.valueToAST)(v, definition.argument(n).type)\n      };\n    });\n  }\n  remove() {\n    if (!this._parent) {\n      return false;\n    }\n    this.onModification();\n    const coreFeatures = this.schema().coreFeatures;\n    if (coreFeatures && this.name === coreFeatures.coreItself.nameInSchema) {\n      const url = coreSpec_1.FeatureUrl.parse(this._args[coreFeatures.coreDefinition.urlArgName()]);\n      if (url.identity === coreFeatures.coreItself.url.identity) {\n        Schema.prototype['unmarkAsCoreSchema'].call(this.schema());\n        for (const d of this.schema().schemaDefinition.appliedDirectivesOf(coreFeatures.coreItself.nameInSchema)) {\n          d.removeInternal();\n        }\n        return true;\n      } else {\n        CoreFeatures.prototype['removeFeature'].call(coreFeatures, url.identity);\n      }\n    }\n    return this.removeInternal();\n  }\n  removeInternal() {\n    if (!this._parent) {\n      return false;\n    }\n    const definition = this.definition;\n    if (definition && this.isAttachedToSchemaElement()) {\n      DirectiveDefinition.prototype['removeReferencer'].call(definition, this);\n    }\n    const parentDirectives = this._parent.appliedDirectives;\n    const removed = (0, utils_1.removeArrayElement)(this, parentDirectives);\n    (0, utils_1.assert)(removed, () => `Directive ${this} lists ${this._parent} as parent, but that parent doesn't list it as applied directive`);\n    this._parent = undefined;\n    this._extension = undefined;\n    return true;\n  }\n  toString() {\n    const entries = Object.entries(this._args).filter(([_, v]) => v !== undefined);\n    const args = entries.length == 0 ? '' : '(' + entries.map(([n, v]) => `${n}: ${(0, values_1.valueToString)(v, this.argumentType(n))}`).join(', ') + ')';\n    return `@${this.name}${args}`;\n  }\n}\nexports.Directive = Directive;\nfunction sameDirectiveApplication(application1, application2, directivesNeverEqualToThemselves = ['defer']) {\n  return application1.name === application2.name && !directivesNeverEqualToThemselves.includes(application1.name) && !directivesNeverEqualToThemselves.includes(application2.name) && (0, values_1.argumentsEquals)(application1.arguments(), application2.arguments());\n}\nexports.sameDirectiveApplication = sameDirectiveApplication;\nfunction sameDirectiveApplications(applications1, applications2, directivesNeverEqualToThemselves = ['defer']) {\n  if (applications1.length !== applications2.length) {\n    return false;\n  }\n  for (const directive1 of applications1) {\n    if (!applications2.some(directive2 => sameDirectiveApplication(directive1, directive2, directivesNeverEqualToThemselves))) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.sameDirectiveApplications = sameDirectiveApplications;\nfunction isDirectiveApplicationsSubset(applications, maybeSubset) {\n  if (maybeSubset.length > applications.length) {\n    return false;\n  }\n  for (const directive1 of maybeSubset) {\n    if (!applications.some(directive2 => sameDirectiveApplication(directive1, directive2))) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isDirectiveApplicationsSubset = isDirectiveApplicationsSubset;\nfunction directiveApplicationsSubstraction(baseApplications, toRemove) {\n  return baseApplications.filter(application => !toRemove.some(other => sameDirectiveApplication(application, other)));\n}\nexports.directiveApplicationsSubstraction = directiveApplicationsSubstraction;\nclass Variable {\n  constructor(name) {\n    this.name = name;\n  }\n  toVariableNode() {\n    return {\n      kind: graphql_1.Kind.VARIABLE,\n      name: {\n        kind: graphql_1.Kind.NAME,\n        value: this.name\n      }\n    };\n  }\n  toString() {\n    return '$' + this.name;\n  }\n}\nexports.Variable = Variable;\nclass VariableCollector {\n  constructor() {\n    this._variables = new Map();\n  }\n  add(variable) {\n    this._variables.set(variable.name, variable);\n  }\n  addAll(variables) {\n    for (const variable of variables) {\n      this.add(variable);\n    }\n  }\n  collectInArguments(args) {\n    for (const value of Object.values(args)) {\n      (0, values_1.collectVariablesInValue)(value, this);\n    }\n  }\n  variables() {\n    return (0, utils_1.mapValues)(this._variables);\n  }\n  toString() {\n    return this.variables().toString();\n  }\n}\nexports.VariableCollector = VariableCollector;\nfunction isVariable(v) {\n  return v instanceof Variable;\n}\nexports.isVariable = isVariable;\nclass VariableDefinition extends DirectiveTargetElement {\n  constructor(schema, variable, type, defaultValue) {\n    super(schema);\n    this.variable = variable;\n    this.type = type;\n    this.defaultValue = defaultValue;\n  }\n  toVariableDefinitionNode() {\n    const ast = (0, values_1.valueToAST)(this.defaultValue, this.type);\n    return {\n      kind: graphql_1.Kind.VARIABLE_DEFINITION,\n      variable: this.variable.toVariableNode(),\n      type: typeToAST(this.type),\n      defaultValue: ast !== undefined ? (0, values_1.valueNodeToConstValueNode)(ast) : undefined,\n      directives: this.appliedDirectivesToDirectiveNodes()\n    };\n  }\n  toString() {\n    let base = this.variable + ': ' + this.type;\n    if (this.defaultValue !== undefined) {\n      base = base + ' = ' + (0, values_1.valueToString)(this.defaultValue, this.type);\n    }\n    return base + this.appliedDirectivesToString();\n  }\n}\nexports.VariableDefinition = VariableDefinition;\nclass VariableDefinitions {\n  constructor() {\n    this._definitions = new utils_1.MapWithCachedArrays();\n  }\n  add(definition) {\n    if (this._definitions.has(definition.variable.name)) {\n      return false;\n    }\n    this._definitions.set(definition.variable.name, definition);\n    return true;\n  }\n  addAll(definitions) {\n    for (const definition of definitions._definitions.values()) {\n      this.add(definition);\n    }\n  }\n  definition(variable) {\n    const varName = typeof variable === 'string' ? variable : variable.name;\n    return this._definitions.get(varName);\n  }\n  isEmpty() {\n    return this._definitions.size === 0;\n  }\n  definitions() {\n    return this._definitions.values();\n  }\n  filter(variables) {\n    if (variables.length === 0) {\n      return new VariableDefinitions();\n    }\n    const newDefs = new VariableDefinitions();\n    for (const variable of variables) {\n      const def = this.definition(variable);\n      if (!def) {\n        throw new Error(`Cannot find variable ${variable} in definitions ${this}`);\n      }\n      newDefs.add(def);\n    }\n    return newDefs;\n  }\n  toVariableDefinitionNodes() {\n    if (this._definitions.size === 0) {\n      return undefined;\n    }\n    return this.definitions().map(def => def.toVariableDefinitionNode());\n  }\n  toString() {\n    return '(' + this.definitions().join(', ') + ')';\n  }\n}\nexports.VariableDefinitions = VariableDefinitions;\nfunction variableDefinitionsFromAST(schema, definitionNodes) {\n  const definitions = new VariableDefinitions();\n  for (const definitionNode of definitionNodes) {\n    if (!definitions.add(variableDefinitionFromAST(schema, definitionNode))) {\n      const name = definitionNode.variable.name.value;\n      throw error_1.ERRORS.INVALID_GRAPHQL.err(`Duplicate definition for variable ${name}`, {\n        nodes: definitionNodes.filter(n => n.variable.name.value === name)\n      });\n    }\n  }\n  return definitions;\n}\nexports.variableDefinitionsFromAST = variableDefinitionsFromAST;\nfunction variableDefinitionFromAST(schema, definitionNode) {\n  const variable = new Variable(definitionNode.variable.name.value);\n  const type = typeFromAST(schema, definitionNode.type);\n  if (!isInputType(type)) {\n    throw error_1.ERRORS.INVALID_GRAPHQL.err(`Invalid type \"${type}\" for variable $${variable}: not an input type`, {\n      nodes: definitionNode.type\n    });\n  }\n  const def = new VariableDefinition(schema, variable, type, definitionNode.defaultValue ? (0, values_1.valueFromAST)(definitionNode.defaultValue, type) : undefined);\n  return def;\n}\nexports.variableDefinitionFromAST = variableDefinitionFromAST;\nfunction addReferenceToType(referencer, type) {\n  switch (type.kind) {\n    case 'ListType':\n      addReferenceToType(referencer, type.baseType());\n      break;\n    case 'NonNullType':\n      addReferenceToType(referencer, type.baseType());\n      break;\n    default:\n      BaseNamedType.prototype['addReferencer'].call(type, referencer);\n      break;\n  }\n}\nfunction removeReferenceToType(referencer, type) {\n  switch (type.kind) {\n    case 'ListType':\n      removeReferenceToType(referencer, type.baseType());\n      break;\n    case 'NonNullType':\n      removeReferenceToType(referencer, type.baseType());\n      break;\n    default:\n      BaseNamedType.prototype['removeReferencer'].call(type, referencer);\n      break;\n  }\n}\nfunction newNamedType(kind, name) {\n  switch (kind) {\n    case 'ScalarType':\n      return new ScalarType(name);\n    case 'ObjectType':\n      return new ObjectType(name);\n    case 'InterfaceType':\n      return new InterfaceType(name);\n    case 'UnionType':\n      return new UnionType(name);\n    case 'EnumType':\n      return new EnumType(name);\n    case 'InputObjectType':\n      return new InputObjectType(name);\n    default:\n      (0, utils_1.assert)(false, `Unhandled kind ${kind} for type ${name}`);\n  }\n}\nexports.newNamedType = newNamedType;\nfunction* typesToCopy(source, dest) {\n  var _a;\n  for (const type of source.builtInTypes()) {\n    if (!type.isIntrospectionType() && !((_a = dest.type(type.name)) === null || _a === void 0 ? void 0 : _a.isBuiltIn)) {\n      yield type;\n    }\n  }\n  yield* source.types();\n}\nfunction* directivesToCopy(source, dest) {\n  var _a;\n  for (const directive of source.builtInDirectives()) {\n    if (!((_a = dest.directive(directive.name)) === null || _a === void 0 ? void 0 : _a.isBuiltIn)) {\n      yield directive;\n    }\n  }\n  yield* source.directives();\n}\nfunction copyDirectiveDefinitionToSchema({\n  definition,\n  schema,\n  copyDirectiveApplicationsInArguments = true,\n  locationFilter\n}) {\n  copyDirectiveDefinitionInner(definition, schema.addDirectiveDefinition(definition.name), copyDirectiveApplicationsInArguments, locationFilter);\n}\nexports.copyDirectiveDefinitionToSchema = copyDirectiveDefinitionToSchema;\nfunction copy(source, dest) {\n  for (const type of typesToCopy(source, dest)) {\n    dest.addType(newNamedType(type.kind, type.name));\n  }\n  for (const directive of directivesToCopy(source, dest)) {\n    dest.addDirectiveDefinition(directive.name);\n  }\n  for (const directive of directivesToCopy(source, dest)) {\n    copyDirectiveDefinitionInner(directive, dest.directive(directive.name));\n  }\n  copySchemaDefinitionInner(source.schemaDefinition, dest.schemaDefinition);\n  for (const type of typesToCopy(source, dest)) {\n    copyNamedTypeInner(type, dest.type(type.name));\n  }\n}\nfunction copyExtensions(source, dest) {\n  const extensionMap = new Map();\n  for (const sourceExtension of source.extensions()) {\n    const destExtension = new Extension();\n    dest.addExtension(destExtension);\n    extensionMap.set(sourceExtension, destExtension);\n  }\n  return extensionMap;\n}\nfunction copyOfExtension(extensionsMap, source, dest) {\n  const toCopy = source.ofExtension();\n  if (toCopy) {\n    dest.setOfExtension(extensionsMap.get(toCopy));\n  }\n}\nfunction copySchemaDefinitionInner(source, dest) {\n  dest.preserveEmptyDefinition = source.preserveEmptyDefinition;\n  const extensionsMap = copyExtensions(source, dest);\n  for (const rootType of source.roots()) {\n    copyOfExtension(extensionsMap, rootType, dest.setRoot(rootType.rootKind, rootType.type.name));\n  }\n  for (const directive of source.appliedDirectives) {\n    copyOfExtension(extensionsMap, directive, copyAppliedDirective(directive, dest));\n  }\n  dest.description = source.description;\n  dest.sourceAST = source.sourceAST;\n}\nfunction copyNamedTypeInner(source, dest) {\n  dest.preserveEmptyDefinition = source.preserveEmptyDefinition;\n  const extensionsMap = copyExtensions(source, dest);\n  for (const directive of source.appliedDirectives) {\n    copyOfExtension(extensionsMap, directive, copyAppliedDirective(directive, dest));\n  }\n  dest.description = source.description;\n  dest.sourceAST = source.sourceAST;\n  switch (source.kind) {\n    case 'ObjectType':\n    case 'InterfaceType':\n      const destFieldBasedType = dest;\n      for (const sourceField of source.fields()) {\n        const destField = destFieldBasedType.addField(new FieldDefinition(sourceField.name));\n        copyOfExtension(extensionsMap, sourceField, destField);\n        copyFieldDefinitionInner(sourceField, destField);\n      }\n      for (const sourceImpl of source.interfaceImplementations()) {\n        const destImpl = destFieldBasedType.addImplementedInterface(sourceImpl.interface.name);\n        copyOfExtension(extensionsMap, sourceImpl, destImpl);\n      }\n      break;\n    case 'UnionType':\n      const destUnionType = dest;\n      for (const sourceType of source.members()) {\n        const destType = destUnionType.addType(sourceType.type.name);\n        copyOfExtension(extensionsMap, sourceType, destType);\n      }\n      break;\n    case 'EnumType':\n      const destEnumType = dest;\n      for (const sourceValue of source.values) {\n        const destValue = destEnumType.addValue(sourceValue.name);\n        destValue.description = sourceValue.description;\n        copyOfExtension(extensionsMap, sourceValue, destValue);\n        copyAppliedDirectives(sourceValue, destValue);\n      }\n      break;\n    case 'InputObjectType':\n      const destInputType = dest;\n      for (const sourceField of source.fields()) {\n        const destField = destInputType.addField(new InputFieldDefinition(sourceField.name));\n        copyOfExtension(extensionsMap, sourceField, destField);\n        copyInputFieldDefinitionInner(sourceField, destField);\n      }\n  }\n}\nfunction copyAppliedDirectives(source, dest) {\n  source.appliedDirectives.forEach(d => copyAppliedDirective(d, dest));\n}\nfunction copyAppliedDirective(source, dest) {\n  const res = dest.applyDirective(source.name, {\n    ...source.arguments()\n  });\n  res.sourceAST = source.sourceAST;\n  return res;\n}\nfunction copyFieldDefinitionInner(source, dest) {\n  const type = copyWrapperTypeOrTypeRef(source.type, dest.schema());\n  dest.type = type;\n  for (const arg of source.arguments()) {\n    const argType = copyWrapperTypeOrTypeRef(arg.type, dest.schema());\n    copyArgumentDefinitionInner(arg, dest.addArgument(arg.name, argType));\n  }\n  copyAppliedDirectives(source, dest);\n  dest.description = source.description;\n  dest.sourceAST = source.sourceAST;\n}\nfunction copyInputFieldDefinitionInner(source, dest) {\n  const type = copyWrapperTypeOrTypeRef(source.type, dest.schema());\n  dest.type = type;\n  dest.defaultValue = source.defaultValue;\n  copyAppliedDirectives(source, dest);\n  dest.description = source.description;\n  dest.sourceAST = source.sourceAST;\n}\nfunction copyWrapperTypeOrTypeRef(source, destParent) {\n  if (!source) {\n    return undefined;\n  }\n  switch (source.kind) {\n    case 'ListType':\n      return new ListType(copyWrapperTypeOrTypeRef(source.ofType, destParent));\n    case 'NonNullType':\n      return new NonNullType(copyWrapperTypeOrTypeRef(source.ofType, destParent));\n    default:\n      return destParent.type(source.name);\n  }\n}\nfunction copyArgumentDefinitionInner(source, dest, copyDirectiveApplications = true) {\n  const type = copyWrapperTypeOrTypeRef(source.type, dest.schema());\n  dest.type = type;\n  dest.defaultValue = source.defaultValue;\n  if (copyDirectiveApplications) {\n    copyAppliedDirectives(source, dest);\n  }\n  dest.description = source.description;\n  dest.sourceAST = source.sourceAST;\n}\nfunction copyDirectiveDefinitionInner(source, dest, copyDirectiveApplicationsInArguments = true, locationFilter) {\n  let locations = source.locations;\n  if (locationFilter) {\n    locations = locations.filter(loc => locationFilter(loc));\n  }\n  if (locations.length === 0) {\n    return;\n  }\n  for (const arg of source.arguments()) {\n    const type = copyWrapperTypeOrTypeRef(arg.type, dest.schema());\n    copyArgumentDefinitionInner(arg, dest.addArgument(arg.name, type), copyDirectiveApplicationsInArguments);\n  }\n  dest.repeatable = source.repeatable;\n  dest.addLocations(...locations);\n  dest.sourceAST = source.sourceAST;\n  dest.description = source.description;\n}","map":{"version":3,"mappings":"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","names":["graphql_1","require","coreSpec_1","utils_1","values_1","inaccessibleSpec_1","print_1","types_1","introspection_1","validate_1","specifiedRules_1","validate_2","directiveAndTypeSpecification_1","suggestions_1","error_1","validationErrorCode","DEFAULT_VALIDATION_ERROR_MESSAGE","ErrGraphQLValidationFailed","causes","message","aggregateError","exports","apiSchemaValidationErrorCode","ErrGraphQLAPISchemaValidationFailed","typenameFieldName","allSchemaRootKinds","defaultRootName","rootKind","charAt","toUpperCase","slice","checkDefaultSchemaRoot","type","kind","undefined","name","isSchemaRootType","isObjectType","isRootType","isNamedType","BaseNamedType","isWrapperType","isListType","isNonNullType","isScalarType","isCustomScalarType","graphQLBuiltInTypes","includes","isIntType","schema","intType","isStringType","stringType","isFloatType","floatType","isBooleanType","booleanType","isIDType","idType","isInterfaceType","isEnumType","isUnionType","isInputObjectType","isOutputType","baseType","isInputType","isTypeOfKind","filterTypesOfKind","types","reduce","acc","push","isNullableType","isAbstractType","isCompositeType","possibleRuntimeTypes","runtimeTypesIntersects","t1","t2","rt1","rt2","obj1","some","obj2","supertypes","interfaces","concat","unionsWhereMember","isConditionalDirective","directive","executableDirectiveLocations","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","executableDirectiveLocationsSet","Set","isExecutableDirectiveLocation","loc","has","typeSystemDirectiveLocations","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","typeSystemDirectiveLocationsSet","isTypeSystemDirectiveLocation","typeToAST","Kind","LIST_TYPE","ofType","NON_NULL_TYPE","NAMED_TYPE","NAME","value","typeFromAST","node","ListType","NonNullType","ERRORS","INVALID_GRAPHQL","err","nodes","isLeafType","DirectiveTargetElement","constructor","_schema","directives","appliedDirectives","map","d","attachDirective","toAdd","isAttached","Directive","arguments","Element","prototype","call","appliedDirectivesOf","nameOrDefinition","directiveName","filter","hasAppliedDirective","appliedDirectivesToDirectiveNodes","length","DIRECTIVE","argumentsToAST","appliedDirectivesToString","join","collectVariablesInAppliedDirectives","collector","applied","collectInArguments","sourceASTs","elts","elt","sourceAST","schemaInternal","assert","_parent","Schema","SchemaElement","parent","setParent","onAttached","checkUpdate","Extension","extendedElement","_extendedElement","setExtendedElement","element","addUnappliedDirective","nameOrDef","args","extension","_unappliedDirectives","processUnappliedDirectives","_a","applyDirective","setOfExtension","_appliedDirectives","asFirstDirective","Object","create","def","blueprint","onMissingDirectiveDefinition","onGraphQLJSValidationError","Array","isArray","unshift","DirectiveDefinition","definition","onModification","removeAppliedDirectives","forEach","remove","isElementBuiltIn","removeTypeReferenceInternal","removeTypeReference","checkRemoval","addedElement","thisElement","thatSchema","NamedSchemaElement","_name","isBuiltIn","preserveEmptyDefinition","addReferencer","referencer","_referencers","removeReferencer","removeArrayElement","coordinate","allChildElements","extensions","_extensions","hasExtension","_b","newExtension","addExtension","removeExtensions","removeOfExtension","removeInnerElementsExtensions","isIntrospectionType","isIntrospectionName","hasExtensionElements","hasNonExtensionElements","ofExtension","hasNonExtensionInnerElements","rename","newName","oldName","removeInnerElements","toReturn","r","removeRecursive","ref","removeReferenceRecursive","referencers","isReferenced","toString","NamedSchemaElementWithType","_type","removeReferenceToType","addReferenceToType","BaseExtensionMember","_extension","removeInner","SchemaBlueprint","_directive","onDirectiveDefinitionAndSchemaParsed","_","ignoreParsedField","_fieldName","onConstructed","onAddedCoreFeature","_feature","onInvalidation","onValidation","validationRules","specifiedSDLRules","error","matcher","exec","groups","allDefinedDirectiveNames","allDirectives","suggestions","suggestionList","onUnknownDirectiveValidationError","withModifiedErrorMessage","didYouMean","s","_unknownDirectiveName","applyDirectivesAfterParsing","defaultSchemaBlueprint","CoreFeature","url","nameInSchema","imports","purpose","isFeatureDefinition","importName","startsWith","find","i","as","directiveNameInSchema","elementImport","typeNameInSchema","CoreFeatures","coreItself","byAlias","Map","byIdentity","add","coreDef","findCoreSpecVersion","UNKNOWN_LINK_VERSION","version","coreDefinition","getByIdentity","identity","get","allFeatures","values","removeFeature","featureIdentity","feature","delete","maybeAddFeature","typedDirective","extractFeatureUrl","existing","INVALID_LINK_DIRECTIVE_USAGE","extractCoreFeatureImports","for","set","sourceFeature","isDirective","splitted","split","nameInFeature","isImported","directFeature","imp","graphQLBuiltInTypesSpecifications","createScalarTypeSpecification","graphQLBuiltInDirectivesSpecifications","createDirectiveSpecification","locations","defaultValue","coordinateRegexp","config","_builtInTypes","MapWithCachedArrays","_types","_builtInDirectives","_directives","isConstructed","isValidated","_schemaDefinition","SchemaDefinition","spec","checkOrAdd","canModifyBuiltIn","runWithBuiltInModificationAllowed","fct","wasConstructed","renameTypeInternal","removeTypeInternal","removeDirectiveInternal","markAsCoreSchema","_coreFeatures","unmarkAsCoreSchema","invalidate","cachedDocument","apiSchema","isCoreSchema","coreFeatures","toAST","ast","parse","printSchema","noLocation","shouldCache","cacheAST","toAPISchema","validate","clone","toRemoveIfCustom","removeInaccessibleElements","removeAllCoreFeatures","emptyASTDefinitionsForExtensionsWithoutDefinition","schemaDefinition","SCHEMA_DEFINITION","operationTypes","astDefinitionKind","toGraphQLJSSchema","includeDefer","includeStream","additionalNodes","deferDirective","streamDirective","DOCUMENT","definitions","graphQLSchema","buildASTSchema","astNode","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","INTERFACE_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","UNION_TYPE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","getType","interfaceTypes","objectTypes","unionTypes","scalarTypes","inputTypes","enumTypes","builtInTypes","includeShadowed","allBuiltIns","t","isShadowedBuiltInType","allTypes","typeOfKind","builtInScalarTypes","addType","defaultSchemaRoot","root","setRoot","builtInDirectives","isShadowedBuiltInDirective","builtInDirective","allNamedSchemaElement","allSchemaElement","addDirectiveDefinition","directiveOrName","assumeValid","addIntrospectionFields","errors","validateSDL","e","validateSchema","builtIns","cloned","copy","getBuiltInDirective","includeDirective","skipDirective","deprecatedDirective","specifiedByDirective","elementByCoordinate","match","argStartIdx","indexOf","start","argName","splittedStart","typeOrDirectiveName","fieldOrEnumName","argument","field","RootType","isDefaultRootName","_roots","roots","isCoreSpecDirectiveApplication","schemaDirective","FeatureUrl","core","a","other","rootType","nameOrType","toSet","obj","prevRoot","removeRootType","toRemove","keys","ScalarType","InterfaceImplementation","itf","interface","FieldBasedType","_fields","addField","FieldDefinition","removeFieldInternal","_cachedNonBuiltInFields","interfaceImplementations","_interfaceImplementations","interfaceImplementation","impl","implementsInterface","addImplementedInterface","nameOrItfOrItfImpl","maybeItf","fields","f","hasFields","builtInFields","allFields","typenameField","nameOrField","removeInterfaceImplementation","interfaceImpl","ObjectType","rt","isQueryRootType","isSubscriptionRootType","membersCount","InterfaceType","allImplementations","isPossibleRuntimeType","typeName","UnionMember","UnionType","_members","_typenameField","members","m","size","hasTypeMember","nameOrTypeOrMember","maybeObj","clearTypes","removeMember","member","EnumType","_values","from","v","addValue","nameOrValue","EnumValue","removeValueInternal","InputObjectType","_cachedFieldsArray","mapValues","InputFieldDefinition","BaseWrapperType","hasArguments","_args","addArgument","nameOrArg","ArgumentDefinition","sameType","valueEquals","valueToString","isIntrospectionField","isSchemaIntrospectionField","introspectionFieldNames","removeArgumentInternal","removeParent","isDeprecated","arg","isRequired","defaultStr","repeatable","_locations","addLocations","modified","location","addAllLocations","addAllTypeLocations","removeLocations","hasExecutableLocations","hasTypeSystemLocations","applications","doc","printDirectiveDefinition","includeDefaultValues","updated","argDef","argValue","withDefaultValues","isAttachedToSchemaElement","setArguments","argumentType","matchArguments","expectedArgs","entries","key","val","expectedVal","n","ARGUMENT","valueToAST","urlArgName","removeInternal","parentDirectives","removed","sameDirectiveApplication","application1","application2","directivesNeverEqualToThemselves","argumentsEquals","sameDirectiveApplications","applications1","applications2","directive1","directive2","isDirectiveApplicationsSubset","maybeSubset","directiveApplicationsSubstraction","baseApplications","application","Variable","toVariableNode","VARIABLE","VariableCollector","_variables","variable","addAll","variables","collectVariablesInValue","isVariable","VariableDefinition","toVariableDefinitionNode","valueNodeToConstValueNode","base","VariableDefinitions","_definitions","varName","isEmpty","newDefs","Error","toVariableDefinitionNodes","variableDefinitionsFromAST","definitionNodes","definitionNode","variableDefinitionFromAST","valueFromAST","newNamedType","typesToCopy","source","dest","directivesToCopy","copyDirectiveDefinitionToSchema","copyDirectiveApplicationsInArguments","locationFilter","copyDirectiveDefinitionInner","copySchemaDefinitionInner","copyNamedTypeInner","copyExtensions","extensionMap","sourceExtension","destExtension","copyOfExtension","extensionsMap","toCopy","copyAppliedDirective","description","destFieldBasedType","sourceField","destField","copyFieldDefinitionInner","sourceImpl","destImpl","destUnionType","sourceType","destType","destEnumType","sourceValue","destValue","copyAppliedDirectives","destInputType","copyInputFieldDefinitionInner","res","copyWrapperTypeOrTypeRef","argType","copyArgumentDefinitionInner","destParent","copyDirectiveApplications"],"sourceRoot":"","sources":["../src/definitions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}