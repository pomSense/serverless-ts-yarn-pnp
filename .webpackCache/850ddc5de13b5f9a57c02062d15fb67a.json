{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeAllCoreFeatures = exports.LINK_VERSIONS = exports.CORE_VERSIONS = exports.findCoreSpecVersion = exports.FeatureUrl = exports.FeatureVersion = exports.FeatureDefinitions = exports.CoreSpecDefinition = exports.isCoreSpecDirectiveApplication = exports.extractCoreFeatureImports = exports.FeatureDefinition = exports.corePurposes = exports.ErrCoreCheckFailed = exports.linkDirectiveDefaultName = exports.linkIdentity = exports.coreIdentity = void 0;\nconst graphql_1 = require(\"graphql\");\nconst url_1 = require(\"url\");\nconst definitions_1 = require(\"./definitions\");\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nconst error_1 = require(\"./error\");\nconst values_1 = require(\"./values\");\nconst knownCoreFeatures_1 = require(\"./knownCoreFeatures\");\nconst suggestions_1 = require(\"./suggestions\");\nconst directiveAndTypeSpecification_1 = require(\"./directiveAndTypeSpecification\");\nexports.coreIdentity = 'https://specs.apollo.dev/core';\nexports.linkIdentity = 'https://specs.apollo.dev/link';\nexports.linkDirectiveDefaultName = 'link';\nconst ErrCoreCheckFailed = causes => (0, error_1.aggregateError)('CheckFailed', 'one or more checks failed', causes);\nexports.ErrCoreCheckFailed = ErrCoreCheckFailed;\nfunction buildError(message) {\n  return new Error(message);\n}\nexports.corePurposes = ['SECURITY', 'EXECUTION'];\nfunction purposesDescription(purpose) {\n  switch (purpose) {\n    case 'SECURITY':\n      return \"`SECURITY` features provide metadata necessary to securely resolve fields.\";\n    case 'EXECUTION':\n      return \"`EXECUTION` features provide metadata necessary for operation execution.\";\n  }\n}\nclass FeatureDefinition {\n  constructor(url, minimumFederationVersion) {\n    this.minimumFederationVersion = minimumFederationVersion;\n    this._directiveSpecs = new utils_1.MapWithCachedArrays();\n    this._typeSpecs = new utils_1.MapWithCachedArrays();\n    this.url = typeof url === 'string' ? FeatureUrl.parse(url) : url;\n  }\n  registerDirective(spec) {\n    this._directiveSpecs.set(spec.name, spec);\n  }\n  registerType(spec) {\n    this._typeSpecs.set(spec.name, spec);\n  }\n  registerSubFeature(subFeature) {\n    for (const typeSpec of subFeature.typeSpecs()) {\n      this.registerType(typeSpec);\n    }\n    for (const directiveSpec of subFeature.directiveSpecs()) {\n      this.registerDirective(directiveSpec);\n    }\n  }\n  directiveSpecs() {\n    return this._directiveSpecs.values();\n  }\n  directiveSpec(name) {\n    return this._directiveSpecs.get(name);\n  }\n  typeSpecs() {\n    return this._typeSpecs.values();\n  }\n  typeSpec(name) {\n    return this._typeSpecs.get(name);\n  }\n  get identity() {\n    return this.url.identity;\n  }\n  get version() {\n    return this.url.version;\n  }\n  isSpecType(type) {\n    const nameInSchema = this.nameInSchema(type.schema());\n    return nameInSchema !== undefined && type.name.startsWith(`${nameInSchema}__`);\n  }\n  isSpecDirective(directive) {\n    const nameInSchema = this.nameInSchema(directive.schema());\n    return nameInSchema != undefined && (directive.name === nameInSchema || directive.name.startsWith(`${nameInSchema}__`));\n  }\n  addElementsToSchema(schema) {\n    const feature = this.featureInSchema(schema);\n    (0, utils_1.assert)(feature, () => `The ${this.url} specification should have been added to the schema before this is called`);\n    let errors = [];\n    for (const type of this.typeSpecs()) {\n      errors = errors.concat(type.checkOrAdd(schema, feature));\n    }\n    for (const directive of this.directiveSpecs()) {\n      errors = errors.concat(directive.checkOrAdd(schema, feature));\n    }\n    return errors;\n  }\n  allElementNames() {\n    return this.directiveSpecs().map(spec => `@${spec.name}`).concat(this.typeSpecs().map(spec => spec.name));\n  }\n  nameInSchema(schema) {\n    const feature = this.featureInSchema(schema);\n    return feature === null || feature === void 0 ? void 0 : feature.nameInSchema;\n  }\n  directiveNameInSchema(schema, directiveName) {\n    const feature = this.featureInSchema(schema);\n    return feature ? feature.directiveNameInSchema(directiveName) : undefined;\n  }\n  typeNameInSchema(schema, typeName) {\n    const feature = this.featureInSchema(schema);\n    return feature ? feature.typeNameInSchema(typeName) : undefined;\n  }\n  rootDirective(schema) {\n    const name = this.nameInSchema(schema);\n    return name ? schema.directive(name) : undefined;\n  }\n  directive(schema, elementName) {\n    const name = this.directiveNameInSchema(schema, elementName);\n    return name ? schema.directive(name) : undefined;\n  }\n  type(schema, elementName) {\n    const name = this.typeNameInSchema(schema, elementName);\n    return name ? schema.type(name) : undefined;\n  }\n  addRootDirective(schema) {\n    return schema.addDirectiveDefinition(this.nameInSchema(schema));\n  }\n  addDirective(schema, name) {\n    return schema.addDirectiveDefinition(this.directiveNameInSchema(schema, name));\n  }\n  addScalarType(schema, name) {\n    return schema.addType(new definitions_1.ScalarType(this.typeNameInSchema(schema, name)));\n  }\n  addEnumType(schema, name) {\n    return schema.addType(new definitions_1.EnumType(this.typeNameInSchema(schema, name)));\n  }\n  featureInSchema(schema) {\n    const features = schema.coreFeatures;\n    if (!features) {\n      throw buildError(`Schema is not a core schema (add @link first)`);\n    }\n    return features.getByIdentity(this.identity);\n  }\n  get defaultCorePurpose() {\n    return undefined;\n  }\n  compositionSpecification(directiveNameInFeature) {\n    const spec = this._directiveSpecs.get(directiveNameInFeature);\n    return spec === null || spec === void 0 ? void 0 : spec.composition;\n  }\n  toString() {\n    return `${this.identity}/${this.version}`;\n  }\n}\nexports.FeatureDefinition = FeatureDefinition;\nfunction extractCoreFeatureImports(url, directive) {\n  const args = directive.arguments();\n  if (!('import' in args) || !args.import) {\n    return [];\n  }\n  const importArgValue = args.import;\n  const definition = (0, knownCoreFeatures_1.coreFeatureDefinitionIfKnown)(url);\n  const knownElements = definition === null || definition === void 0 ? void 0 : definition.allElementNames();\n  const errors = [];\n  const imports = [];\n  importArgLoop: for (const elt of importArgValue) {\n    if (typeof elt === 'string') {\n      imports.push({\n        name: elt\n      });\n      validateImportedName(elt, knownElements, errors, directive);\n      continue;\n    }\n    if (typeof elt !== 'object') {\n      errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid sub-value ${(0, values_1.valueToString)(elt)} for @link(import:) argument: values should be either strings or input object values of the form { name: \"<importedElement>\", as: \"<alias>\" }.`, {\n        nodes: directive.sourceAST\n      }));\n      continue;\n    }\n    let name;\n    for (const [key, value] of Object.entries(elt)) {\n      switch (key) {\n        case 'name':\n          if (typeof value !== 'string') {\n            errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid value for the \"name\" field for sub-value ${(0, values_1.valueToString)(elt)} of @link(import:) argument: must be a string.`, {\n              nodes: directive.sourceAST\n            }));\n            continue importArgLoop;\n          }\n          name = value;\n          break;\n        case 'as':\n          if (typeof value !== 'string') {\n            errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid value for the \"as\" field for sub-value ${(0, values_1.valueToString)(elt)} of @link(import:) argument: must be a string.`, {\n              nodes: directive.sourceAST\n            }));\n            continue importArgLoop;\n          }\n          break;\n        default:\n          errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Unknown field \"${key}\" for sub-value ${(0, values_1.valueToString)(elt)} of @link(import:) argument.`, {\n            nodes: directive.sourceAST\n          }));\n          continue importArgLoop;\n      }\n    }\n    if (name) {\n      const i = elt;\n      imports.push(i);\n      if (i.as) {\n        if (i.name.charAt(0) === '@' && i.as.charAt(0) !== '@') {\n          errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid @link import renaming: directive \"${i.name}\" imported name should start with a '@' character, but got \"${i.as}\".`, {\n            nodes: directive.sourceAST\n          }));\n        } else if (i.name.charAt(0) !== '@' && i.as.charAt(0) === '@') {\n          errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid @link import renaming: type \"${i.name}\" imported name should not start with a '@' character, but got \"${i.as}\" (or, if @${i.name} is a directive, then it should be referred to with a '@').`, {\n            nodes: directive.sourceAST\n          }));\n        }\n      }\n      validateImportedName(name, knownElements, errors, directive);\n    } else {\n      errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Invalid sub-value ${(0, values_1.valueToString)(elt)} for @link(import:) argument: missing mandatory \"name\" field.`, {\n        nodes: directive.sourceAST\n      }));\n    }\n  }\n  if (errors.length > 0) {\n    throw (0, definitions_1.ErrGraphQLValidationFailed)(errors);\n  }\n  return imports;\n}\nexports.extractCoreFeatureImports = extractCoreFeatureImports;\nfunction validateImportedName(name, knownElements, errors, directive) {\n  if (knownElements && !knownElements.includes(name)) {\n    let details = '';\n    if (!name.startsWith('@') && knownElements.includes('@' + name)) {\n      details = ` Did you mean directive \"@${name}\"?`;\n    } else {\n      const suggestions = (0, suggestions_1.suggestionList)(name, knownElements);\n      if (suggestions) {\n        details = (0, suggestions_1.didYouMean)(suggestions);\n      }\n    }\n    errors.push(error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Cannot import unknown element \"${name}\".${details}`, {\n      nodes: directive.sourceAST\n    }));\n  }\n}\nfunction isCoreSpecDirectiveApplication(directive) {\n  var _a, _b, _c;\n  const definition = directive.definition;\n  if (!definition) {\n    return false;\n  }\n  const asArg = definition.argument('as');\n  if (asArg && !(0, types_1.sameType)(asArg.type, directive.schema().stringType())) {\n    return false;\n  }\n  if (!definition.repeatable || definition.locations.length !== 1 || definition.locations[0] !== graphql_1.DirectiveLocation.SCHEMA) {\n    return false;\n  }\n  const urlArg = (_a = definition.argument('url')) !== null && _a !== void 0 ? _a : definition.argument('feature');\n  if (!urlArg || !isValidUrlArgumentType(urlArg.type, directive.schema())) {\n    return false;\n  }\n  const args = directive.arguments();\n  try {\n    const url = FeatureUrl.parse(args[urlArg.name]);\n    if (url.identity === exports.coreIdentity) {\n      return directive.name === ((_b = args.as) !== null && _b !== void 0 ? _b : 'core');\n    } else {\n      return url.identity === exports.linkIdentity && directive.name === ((_c = args.as) !== null && _c !== void 0 ? _c : exports.linkDirectiveDefaultName);\n    }\n  } catch (err) {\n    return false;\n  }\n}\nexports.isCoreSpecDirectiveApplication = isCoreSpecDirectiveApplication;\nfunction isValidUrlArgumentType(type, schema) {\n  return (0, types_1.sameType)(type, schema.stringType()) || (0, types_1.sameType)(type, new definitions_1.NonNullType(schema.stringType()));\n}\nconst linkPurposeTypeSpec = (0, directiveAndTypeSpecification_1.createEnumTypeSpecification)({\n  name: 'Purpose',\n  values: exports.corePurposes.map(name => ({\n    name,\n    description: purposesDescription(name)\n  }))\n});\nconst linkImportTypeSpec = (0, directiveAndTypeSpecification_1.createScalarTypeSpecification)({\n  name: 'Import'\n});\nclass CoreSpecDefinition extends FeatureDefinition {\n  constructor(version, minimumFederationVersion, identity = exports.linkIdentity, name = exports.linkDirectiveDefaultName) {\n    super(new FeatureUrl(identity, name, version), minimumFederationVersion);\n    this.directiveDefinitionSpec = (0, directiveAndTypeSpecification_1.createDirectiveSpecification)({\n      name,\n      locations: [graphql_1.DirectiveLocation.SCHEMA],\n      repeatable: true,\n      args: this.createDefinitionArgumentSpecifications()\n    });\n    this.registerDirective(this.directiveDefinitionSpec);\n  }\n  createDefinitionArgumentSpecifications() {\n    const args = [{\n      name: this.urlArgName(),\n      type: schema => schema.stringType()\n    }, {\n      name: 'as',\n      type: schema => schema.stringType()\n    }];\n    if (this.supportPurposes()) {\n      args.push({\n        name: 'for',\n        type: (schema, feature) => {\n          (0, utils_1.assert)(feature, \"Shouldn't be added without being attached to a @link spec\");\n          return schema.type(feature.typeNameInSchema(linkPurposeTypeSpec.name));\n        }\n      });\n    }\n    if (this.supportImport()) {\n      args.push({\n        name: 'import',\n        type: (schema, feature) => {\n          (0, utils_1.assert)(feature, \"Shouldn't be added without being attached to a @link spec\");\n          return new definitions_1.ListType(schema.type(feature.typeNameInSchema(linkImportTypeSpec.name)));\n        }\n      });\n    }\n    return args;\n  }\n  addElementsToSchema(_) {\n    return [];\n  }\n  addToSchema(schema, alias) {\n    const errors = this.addDefinitionsToSchema(schema, alias);\n    if (errors.length > 0) {\n      return errors;\n    }\n    const args = {\n      [this.urlArgName()]: this.toString()\n    };\n    if (alias) {\n      args.as = alias;\n    }\n    const schemaDef = schema.schemaDefinition;\n    const hasDefinition = schemaDef.hasNonExtensionElements();\n    const directive = schemaDef.applyDirective(alias !== null && alias !== void 0 ? alias : this.url.name, args, true);\n    if (!hasDefinition && schemaDef.hasExtensionElements()) {\n      const extension = (0, utils_1.firstOf)(schemaDef.extensions());\n      (0, utils_1.assert)(extension, '`hasExtensionElements` should not have been `true`');\n      directive.setOfExtension(extension);\n    }\n    return [];\n  }\n  addDefinitionsToSchema(schema, as, imports = []) {\n    const existingCore = schema.coreFeatures;\n    if (existingCore) {\n      if (existingCore.coreItself.url.identity === this.identity) {\n        return [];\n      } else {\n        return [error_1.ERRORS.INVALID_LINK_DIRECTIVE_USAGE.err(`Cannot add feature ${this} to the schema, it already uses ${existingCore.coreItself.url}`)];\n      }\n    }\n    const nameInSchema = as !== null && as !== void 0 ? as : this.url.name;\n    const feature = new definitions_1.CoreFeature(this.url, nameInSchema, new definitions_1.Directive(nameInSchema), imports);\n    let errors = [];\n    errors = errors.concat(linkPurposeTypeSpec.checkOrAdd(schema, feature));\n    errors = errors.concat(linkImportTypeSpec.checkOrAdd(schema, feature));\n    errors = errors.concat(this.directiveDefinitionSpec.checkOrAdd(schema, feature));\n    return errors;\n  }\n  allElementNames() {\n    const names = [`@${this.url.name}`];\n    if (this.supportPurposes()) {\n      names.push('Purpose');\n    }\n    if (this.supportImport()) {\n      names.push('Import');\n    }\n    return names;\n  }\n  supportPurposes() {\n    return this.version.strictlyGreaterThan(new FeatureVersion(0, 1));\n  }\n  supportImport() {\n    return this.url.name === exports.linkDirectiveDefaultName;\n  }\n  extractFeature(schema) {\n    const features = schema.coreFeatures;\n    if (!features) {\n      throw buildError(`Schema is not a core schema (add @core first)`);\n    }\n    if (!features.coreItself.url.version.equals(this.version)) {\n      throw buildError(`Cannot use this version of @core (${this.version}), the schema uses version ${features.coreItself.url.version}`);\n    }\n    return features.coreItself;\n  }\n  coreDirective(schema) {\n    const feature = this.extractFeature(schema);\n    const directive = schema.directive(feature.nameInSchema);\n    return directive;\n  }\n  coreVersion(schema) {\n    const feature = this.extractFeature(schema);\n    return feature.url.version;\n  }\n  applyFeatureToSchema(schema, feature, as, purpose) {\n    const coreDirective = this.coreDirective(schema);\n    const args = {\n      [this.urlArgName()]: feature.toString(),\n      as\n    };\n    if (this.supportPurposes() && purpose) {\n      args.for = purpose;\n    }\n    schema.schemaDefinition.applyDirective(coreDirective, args);\n    return feature.addElementsToSchema(schema);\n  }\n  extractFeatureUrl(args) {\n    return FeatureUrl.parse(args[this.urlArgName()]);\n  }\n  urlArgName() {\n    return this.url.name === 'core' ? 'feature' : 'url';\n  }\n}\nexports.CoreSpecDefinition = CoreSpecDefinition;\nclass FeatureDefinitions {\n  constructor(identity) {\n    this.identity = identity;\n    this._definitions = [];\n  }\n  add(definition) {\n    if (definition.identity !== this.identity) {\n      throw buildError(`Cannot add definition for ${definition} to the versions of definitions for ${this.identity}`);\n    }\n    if (this._definitions.find(def => definition.version.equals(def.version))) {\n      return this;\n    }\n    this._definitions.push(definition);\n    this._definitions.sort((def1, def2) => -def1.version.compareTo(def2.version));\n    return this;\n  }\n  find(requested) {\n    return this._definitions.find(def => def.version.equals(requested));\n  }\n  versions() {\n    return this._definitions.map(def => def.version);\n  }\n  latest() {\n    (0, utils_1.assert)(this._definitions.length > 0, 'Trying to get latest when no definitions exist');\n    return this._definitions[0];\n  }\n  getMinimumRequiredVersion(fedVersion) {\n    var _a;\n    const def = this._definitions.find(def => def.minimumFederationVersion ? fedVersion >= def.minimumFederationVersion : true);\n    (0, utils_1.assert)(def, `No compatible definition exists for federation version ${fedVersion}`);\n    const latestMajor = this.latest().version.major;\n    if (def.version.major !== latestMajor) {\n      return (_a = (0, utils_1.findLast)(this._definitions, def => def.version.major === latestMajor)) !== null && _a !== void 0 ? _a : this.latest();\n    }\n    return def;\n  }\n}\nexports.FeatureDefinitions = FeatureDefinitions;\nclass FeatureVersion {\n  constructor(major, minor) {\n    this.major = major;\n    this.minor = minor;\n  }\n  static parse(input) {\n    const match = input.match(this.VERSION_RE);\n    if (!match) {\n      throw error_1.ERRORS.INVALID_LINK_IDENTIFIER.err(`Expected a version string (of the form v1.2), got ${input}`);\n    }\n    return new this(+match[1], +match[2]);\n  }\n  satisfies(required) {\n    const {\n      major,\n      minor\n    } = this;\n    const {\n      major: rMajor,\n      minor: rMinor\n    } = required;\n    return rMajor == major && (major == 0 ? rMinor == minor : rMinor <= minor);\n  }\n  get series() {\n    const {\n      major\n    } = this;\n    return major > 0 ? `${major}.x` : String(this);\n  }\n  compareTo(other) {\n    if (this.major > other.major) {\n      return 1;\n    }\n    if (this.major < other.major) {\n      return -1;\n    }\n    if (this.minor > other.minor) {\n      return 1;\n    }\n    if (this.minor < other.minor) {\n      return -1;\n    }\n    return 0;\n  }\n  strictlyGreaterThan(version) {\n    return this.compareTo(version) > 0;\n  }\n  toString() {\n    return `v${this.major}.${this.minor}`;\n  }\n  equals(other) {\n    return this.major === other.major && this.minor === other.minor;\n  }\n}\nexports.FeatureVersion = FeatureVersion;\nFeatureVersion.VERSION_RE = /^v(\\d+)\\.(\\d+)$/;\nclass FeatureUrl {\n  constructor(identity, name, version, element) {\n    this.identity = identity;\n    this.name = name;\n    this.version = version;\n    this.element = element;\n  }\n  static parse(input, node) {\n    const url = new url_1.URL(input);\n    if (!url.pathname || url.pathname === '/') {\n      throw error_1.ERRORS.INVALID_LINK_IDENTIFIER.err(`Missing path in feature url '${url}'`, {\n        nodes: node\n      });\n    }\n    const path = url.pathname.split('/');\n    const verStr = path.pop();\n    if (!verStr) {\n      throw error_1.ERRORS.INVALID_LINK_IDENTIFIER.err(`Missing version component in feature url '${url}'`, {\n        nodes: node\n      });\n    }\n    const version = FeatureVersion.parse(verStr);\n    const name = path[path.length - 1];\n    if (!name) {\n      throw error_1.ERRORS.INVALID_LINK_IDENTIFIER.err(`Missing feature name component in feature url '${url}'`, {\n        nodes: node\n      });\n    }\n    const element = url.hash ? url.hash.slice(1) : undefined;\n    url.hash = '';\n    url.search = '';\n    url.password = '';\n    url.username = '';\n    url.pathname = path.join('/');\n    return new FeatureUrl(url.toString(), name, version, element);\n  }\n  static decode(node) {\n    return this.parse(node.value, node);\n  }\n  satisfies(requested) {\n    return requested.identity === this.identity && this.version.satisfies(requested.version);\n  }\n  equals(other) {\n    return this.identity === other.identity && this.version.equals(other.version);\n  }\n  get url() {\n    return this.element ? `${this.identity}/${this.version}#${this.element}` : `${this.identity}/${this.version}`;\n  }\n  get isDirective() {\n    var _a;\n    return (_a = this.element) === null || _a === void 0 ? void 0 : _a.startsWith('@');\n  }\n  get elementName() {\n    var _a;\n    return this.isDirective ? (_a = this.element) === null || _a === void 0 ? void 0 : _a.slice(1) : this.element;\n  }\n  get base() {\n    if (!this.element) return this;\n    return new FeatureUrl(this.identity, this.name, this.version);\n  }\n  toString() {\n    return this.url;\n  }\n}\nexports.FeatureUrl = FeatureUrl;\nfunction findCoreSpecVersion(featureUrl) {\n  return featureUrl.name === 'core' ? exports.CORE_VERSIONS.find(featureUrl.version) : featureUrl.name === exports.linkDirectiveDefaultName ? exports.LINK_VERSIONS.find(featureUrl.version) : undefined;\n}\nexports.findCoreSpecVersion = findCoreSpecVersion;\nexports.CORE_VERSIONS = new FeatureDefinitions(exports.coreIdentity).add(new CoreSpecDefinition(new FeatureVersion(0, 1), undefined, exports.coreIdentity, 'core')).add(new CoreSpecDefinition(new FeatureVersion(0, 2), new FeatureVersion(2, 0), exports.coreIdentity, 'core'));\nexports.LINK_VERSIONS = new FeatureDefinitions(exports.linkIdentity).add(new CoreSpecDefinition(new FeatureVersion(1, 0), new FeatureVersion(2, 0)));\n(0, knownCoreFeatures_1.registerKnownFeature)(exports.CORE_VERSIONS);\n(0, knownCoreFeatures_1.registerKnownFeature)(exports.LINK_VERSIONS);\nfunction removeAllCoreFeatures(schema) {\n  var _a, _b;\n  const coreFeatures = [...((_b = (_a = schema.coreFeatures) === null || _a === void 0 ? void 0 : _a.allFeatures()) !== null && _b !== void 0 ? _b : [])];\n  const typeReferences = [];\n  for (const feature of coreFeatures) {\n    const featureDirectiveDefs = schema.directives().filter(d => feature.isFeatureDefinition(d));\n    featureDirectiveDefs.forEach(def => def.remove().forEach(application => application.remove()));\n    const featureTypes = schema.types().filter(t => feature.isFeatureDefinition(t));\n    featureTypes.forEach(type => {\n      const references = type.remove();\n      if (references.length > 0) {\n        typeReferences.push({\n          feature,\n          type,\n          references\n        });\n      }\n    });\n  }\n  const errors = [];\n  for (const {\n    feature,\n    type,\n    references\n  } of typeReferences) {\n    const referencesInSchema = references.filter(r => r.isAttached());\n    if (referencesInSchema.length > 0) {\n      errors.push(error_1.ERRORS.REFERENCED_INACCESSIBLE.err(`Cannot remove elements of feature ${feature} as feature type ${type}` + ` is referenced by elements: ${referencesInSchema.join(', ')}`, {\n        nodes: (0, definitions_1.sourceASTs)(...references)\n      }));\n    }\n  }\n  if (errors.length > 0) {\n    throw (0, definitions_1.ErrGraphQLAPISchemaValidationFailed)(errors);\n  }\n}\nexports.removeAllCoreFeatures = removeAllCoreFeatures;","map":{"version":3,"mappings":"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","names":["graphql_1","require","url_1","definitions_1","types_1","utils_1","error_1","values_1","knownCoreFeatures_1","suggestions_1","directiveAndTypeSpecification_1","exports","coreIdentity","linkIdentity","linkDirectiveDefaultName","ErrCoreCheckFailed","causes","aggregateError","buildError","message","Error","corePurposes","purposesDescription","purpose","FeatureDefinition","constructor","url","minimumFederationVersion","_directiveSpecs","MapWithCachedArrays","_typeSpecs","FeatureUrl","parse","registerDirective","spec","set","name","registerType","registerSubFeature","subFeature","typeSpec","typeSpecs","directiveSpec","directiveSpecs","values","get","identity","version","isSpecType","type","nameInSchema","schema","undefined","startsWith","isSpecDirective","directive","addElementsToSchema","feature","featureInSchema","assert","errors","concat","checkOrAdd","allElementNames","map","directiveNameInSchema","directiveName","typeNameInSchema","typeName","rootDirective","elementName","addRootDirective","addDirectiveDefinition","addDirective","addScalarType","addType","ScalarType","addEnumType","EnumType","features","coreFeatures","getByIdentity","defaultCorePurpose","compositionSpecification","directiveNameInFeature","composition","toString","extractCoreFeatureImports","args","arguments","import","importArgValue","definition","coreFeatureDefinitionIfKnown","knownElements","imports","importArgLoop","elt","push","validateImportedName","ERRORS","INVALID_LINK_DIRECTIVE_USAGE","err","valueToString","nodes","sourceAST","key","value","Object","entries","i","as","charAt","length","ErrGraphQLValidationFailed","includes","details","suggestions","suggestionList","didYouMean","isCoreSpecDirectiveApplication","asArg","argument","sameType","stringType","repeatable","locations","DirectiveLocation","SCHEMA","urlArg","_a","isValidUrlArgumentType","_b","_c","NonNullType","linkPurposeTypeSpec","createEnumTypeSpecification","description","linkImportTypeSpec","createScalarTypeSpecification","CoreSpecDefinition","directiveDefinitionSpec","createDirectiveSpecification","createDefinitionArgumentSpecifications","urlArgName","supportPurposes","supportImport","ListType","_","addToSchema","alias","addDefinitionsToSchema","schemaDef","schemaDefinition","hasDefinition","hasNonExtensionElements","applyDirective","hasExtensionElements","extension","firstOf","extensions","setOfExtension","existingCore","coreItself","CoreFeature","Directive","names","strictlyGreaterThan","FeatureVersion","extractFeature","equals","coreDirective","coreVersion","applyFeatureToSchema","for","extractFeatureUrl","FeatureDefinitions","_definitions","add","find","def","sort","def1","def2","compareTo","requested","versions","latest","getMinimumRequiredVersion","fedVersion","latestMajor","major","findLast","minor","input","match","VERSION_RE","INVALID_LINK_IDENTIFIER","satisfies","required","rMajor","rMinor","series","String","other","element","node","URL","pathname","path","split","verStr","pop","hash","slice","search","password","username","join","decode","isDirective","base","findCoreSpecVersion","featureUrl","CORE_VERSIONS","LINK_VERSIONS","registerKnownFeature","removeAllCoreFeatures","allFeatures","typeReferences","featureDirectiveDefs","directives","filter","d","isFeatureDefinition","forEach","remove","application","featureTypes","types","t","references","referencesInSchema","r","isAttached","REFERENCED_INACCESSIBLE","sourceASTs","ErrGraphQLAPISchemaValidationFailed"],"sourceRoot":"","sources":["../src/coreSpec.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}