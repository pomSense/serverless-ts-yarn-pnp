{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findLast = exports.isNonEmptyArray = exports.removeArrayElement = exports.isDefined = exports.printHumanReadableList = exports.joinStrings = exports.validateStringContainsBoolean = exports.copyWitNewLength = exports.MapWithCachedArrays = exports.setValues = exports.mapEntries = exports.mapKeys = exports.mapValues = exports.firstOf = exports.isSubset = exports.arrayEquals = exports.OrderedMap = exports.SetMultiMap = exports.MultiMap = exports.assertUnreachable = exports.assert = void 0;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(typeof message === 'string' ? message : message());\n  }\n}\nexports.assert = assert;\nfunction assertUnreachable(_) {\n  throw new Error(\"Didn't expect to get here\");\n}\nexports.assertUnreachable = assertUnreachable;\nclass MultiMap extends Map {\n  add(key, value) {\n    const values = this.get(key);\n    if (values) {\n      values.push(value);\n    } else {\n      this.set(key, [value]);\n    }\n    return this;\n  }\n  addAll(otherMap) {\n    for (const [k, vs] of otherMap.entries()) {\n      for (const v of vs) {\n        this.add(k, v);\n      }\n    }\n    return this;\n  }\n}\nexports.MultiMap = MultiMap;\nclass SetMultiMap extends Map {\n  add(key, value) {\n    let values = this.get(key);\n    if (!values) {\n      values = new Set();\n      this.set(key, values);\n    }\n    values.add(value);\n    return this;\n  }\n  addAll(otherMap) {\n    for (const [k, vs] of otherMap.entries()) {\n      for (const v of vs) {\n        this.add(k, v);\n      }\n    }\n    return this;\n  }\n}\nexports.SetMultiMap = SetMultiMap;\nclass OrderedMap {\n  static defaultCompareFn(a, b) {\n    if (a < b) {\n      return -1;\n    } else if (b < a) {\n      return 1;\n    }\n    return 0;\n  }\n  constructor(compareFn = OrderedMap.defaultCompareFn) {\n    this._keys = [];\n    this._values = new Map();\n    this._compareFn = compareFn;\n  }\n  add(key, value) {\n    if (!this._values.has(key)) {\n      this.insertKeyInOrder(key);\n    }\n    this._values.set(key, value);\n  }\n  get(key) {\n    return this._values.get(key);\n  }\n  has(key) {\n    return this._values.has(key);\n  }\n  get size() {\n    return this._keys.length;\n  }\n  keys() {\n    return this._keys;\n  }\n  values() {\n    return this._keys.map(key => {\n      const v = this._values.get(key);\n      assert(v, 'value for known key not found in OrderedMap');\n      return v;\n    });\n  }\n  insertKeyInOrder(key) {\n    let lower = 0;\n    let upper = this._keys.length - 1;\n    while (lower <= upper) {\n      const middle = Math.floor((upper + lower) / 2);\n      if (this._compareFn(this._keys[middle], key) < 0) {\n        lower = middle + 1;\n      } else {\n        upper = middle - 1;\n      }\n    }\n    this._keys = this._keys.slice(0, lower).concat(key).concat(this._keys.slice(lower));\n  }\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this._keys.length; i += 1) {\n      const v = this._values.get(this._keys[i]);\n      assert(v, 'value for known key not found in OrderedMap');\n      yield v;\n    }\n  }\n}\nexports.OrderedMap = OrderedMap;\nfunction arrayEquals(a, b, equalFct) {\n  if (a === b) {\n    return true;\n  }\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; ++i) {\n    const eltEqual = equalFct ? equalFct(a[i], b[i]) : a[i] === b[i];\n    if (!eltEqual) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.arrayEquals = arrayEquals;\nfunction isSubset(superset, maybeSubset) {\n  if (superset === maybeSubset) {\n    return true;\n  }\n  for (const elt of maybeSubset) {\n    if (!superset.has(elt)) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isSubset = isSubset;\nfunction firstOf(iterable) {\n  const res = iterable[Symbol.iterator]().next();\n  return res.done ? undefined : res.value;\n}\nexports.firstOf = firstOf;\nfunction mapValues(map) {\n  const array = new Array(map.size);\n  let i = 0;\n  for (const v of map.values()) {\n    array[i++] = v;\n  }\n  return array;\n}\nexports.mapValues = mapValues;\nfunction mapKeys(map) {\n  const array = new Array(map.size);\n  let i = 0;\n  for (const k of map.keys()) {\n    array[i++] = k;\n  }\n  return array;\n}\nexports.mapKeys = mapKeys;\nfunction mapEntries(map) {\n  const array = new Array(map.size);\n  let i = 0;\n  for (const entry of map.entries()) {\n    array[i++] = entry;\n  }\n  return array;\n}\nexports.mapEntries = mapEntries;\nfunction setValues(set) {\n  const array = new Array(set.size);\n  let i = 0;\n  for (const v of set.values()) {\n    array[i++] = v;\n  }\n  return array;\n}\nexports.setValues = setValues;\nclass MapWithCachedArrays {\n  constructor() {\n    this.map = new Map();\n  }\n  clearCaches() {\n    this.cachedKeys = undefined;\n    this.cachedValues = undefined;\n  }\n  get size() {\n    return this.map.size;\n  }\n  has(key) {\n    return this.map.has(key);\n  }\n  get(key) {\n    return this.map.get(key);\n  }\n  set(key, value) {\n    this.map.set(key, value);\n    this.clearCaches();\n    return this;\n  }\n  delete(key) {\n    const deleted = this.map.delete(key);\n    if (deleted) {\n      this.clearCaches();\n    }\n    return deleted;\n  }\n  clear() {\n    this.map.clear();\n    this.clearCaches();\n  }\n  keys() {\n    if (!this.cachedKeys) {\n      this.cachedKeys = mapKeys(this.map);\n    }\n    return this.cachedKeys;\n  }\n  values() {\n    if (!this.cachedValues) {\n      this.cachedValues = mapValues(this.map);\n    }\n    return this.cachedValues;\n  }\n}\nexports.MapWithCachedArrays = MapWithCachedArrays;\nfunction copyWitNewLength(arr, newLength) {\n  assert(newLength >= arr.length, () => `${newLength} < ${arr.length}`);\n  const copy = new Array(newLength);\n  for (let i = 0; i < arr.length; i++) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\nexports.copyWitNewLength = copyWitNewLength;\nfunction validateStringContainsBoolean(str) {\n  if (!str) {\n    return false;\n  }\n  switch (str.toLocaleLowerCase()) {\n    case \"true\":\n    case \"yes\":\n    case \"1\":\n      return true;\n    case \"false\":\n    case \"no\":\n    case \"0\":\n      return false;\n    default:\n      return undefined;\n  }\n}\nexports.validateStringContainsBoolean = validateStringContainsBoolean;\nfunction joinStrings(toJoin, sep = ', ', firstSep, lastSep = ' and ') {\n  if (toJoin.length == 0) {\n    return '';\n  }\n  const first = toJoin[0];\n  if (toJoin.length == 1) {\n    return first;\n  }\n  const last = toJoin[toJoin.length - 1];\n  if (toJoin.length == 2) {\n    return first + (firstSep ? firstSep : lastSep) + last;\n  }\n  return first + (firstSep ? firstSep : sep) + toJoin.slice(1, toJoin.length - 1).join(sep) + lastSep + last;\n}\nexports.joinStrings = joinStrings;\nconst DEFAULT_HUMAN_READABLE_LIST_CUTOFF_LENGTH = 100;\nfunction printHumanReadableList(names, {\n  emptyValue,\n  prefix,\n  prefixPlural,\n  lastSeparator,\n  cutoff_output_length\n}) {\n  if (names.length === 0) {\n    return emptyValue !== null && emptyValue !== void 0 ? emptyValue : '';\n  }\n  if (names.length == 1) {\n    return prefix ? prefix + ' ' + names[0] : names[0];\n  }\n  const cutoff = cutoff_output_length !== null && cutoff_output_length !== void 0 ? cutoff_output_length : DEFAULT_HUMAN_READABLE_LIST_CUTOFF_LENGTH;\n  const {\n    lastIdx\n  } = names.reduce(({\n    lastIdx,\n    length\n  }, name) => {\n    if (length + name.length > cutoff) {\n      return {\n        lastIdx,\n        length\n      };\n    }\n    return {\n      lastIdx: lastIdx + 1,\n      length: length + name.length\n    };\n  }, {\n    lastIdx: 0,\n    length: 0\n  });\n  const toDisplay = names.slice(0, Math.max(1, lastIdx));\n  const actualPrefix = prefixPlural ? prefixPlural + ' ' : prefix ? prefix + ' ' : '';\n  if (toDisplay.length === names.length) {\n    return actualPrefix + joinStrings(toDisplay, ', ', undefined, lastSeparator);\n  } else {\n    return actualPrefix + joinStrings(toDisplay, ', ', undefined, ', ') + ', ...';\n  }\n}\nexports.printHumanReadableList = printHumanReadableList;\nconst isDefined = t => t === undefined ? false : true;\nexports.isDefined = isDefined;\nfunction removeArrayElement(element, array) {\n  const index = array.indexOf(element);\n  if (index >= 0) {\n    array.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\nexports.removeArrayElement = removeArrayElement;\nfunction isNonEmptyArray(array) {\n  return array.length > 0;\n}\nexports.isNonEmptyArray = isNonEmptyArray;\nfunction findLast(array, predicate) {\n  for (let i = array.length - 1; i >= 0; i--) {\n    const t = array[i];\n    if (predicate(t)) {\n      return t;\n    }\n  }\n  return undefined;\n}\nexports.findLast = findLast;","map":{"version":3,"mappings":";;;;;;AASA,SAAgBA,MAAMA,CAACC,SAAc,EAAEC,OAAgC;EACrE,IAAI,CAACD,SAAS,EAAE;IACd,MAAM,IAAIE,KAAK,CAAC,OAAOD,OAAO,KAAK,QAAQ,GAAGA,OAAO,GAAGA,OAAO,EAAE,CAAC;;AAEtE;AAJAE,OAAA,CAAAJ,MAAA,GAAAA,MAAA;AAMA,SAAgBK,iBAAiBA,CAACC,CAAQ;EACxC,MAAM,IAAIH,KAAK,CAAC,2BAA2B,CAAC;AAC9C;AAFAC,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAIA,MAAaE,QAAe,SAAQC,GAAW;EAC7CC,GAAGA,CAACC,GAAM,EAAEC,KAAQ;IAClB,MAAMC,MAAM,GAAG,IAAI,CAACC,GAAG,CAACH,GAAG,CAAC;IAC5B,IAAIE,MAAM,EAAE;MACVA,MAAM,CAACE,IAAI,CAACH,KAAK,CAAC;KACnB,MAAM;MACL,IAAI,CAACI,GAAG,CAACL,GAAG,EAAE,CAACC,KAAK,CAAC,CAAC;;IAExB,OAAO,IAAI;EACb;EAEAK,MAAMA,CAACC,QAAwB;IAC7B,KAAK,MAAM,CAACC,CAAC,EAAEC,EAAE,CAAC,IAAIF,QAAQ,CAACG,OAAO,EAAE,EAAE;MACxC,KAAK,MAAMC,CAAC,IAAIF,EAAE,EAAE;QAClB,IAAI,CAACV,GAAG,CAACS,CAAC,EAAEG,CAAC,CAAC;;;IAGlB,OAAO,IAAI;EACb;;AAlBFjB,OAAA,CAAAG,QAAA,GAAAA,QAAA;AAqBA,MAAae,WAAkB,SAAQd,GAAc;EACnDC,GAAGA,CAACC,GAAM,EAAEC,KAAQ;IAClB,IAAIC,MAAM,GAAG,IAAI,CAACC,GAAG,CAACH,GAAG,CAAC;IAC1B,IAAI,CAACE,MAAM,EAAE;MACXA,MAAM,GAAG,IAAIW,GAAG,EAAK;MACrB,IAAI,CAACR,GAAG,CAACL,GAAG,EAAEE,MAAM,CAAC;;IAEvBA,MAAM,CAACH,GAAG,CAACE,KAAK,CAAC;IACjB,OAAO,IAAI;EACb;EAEAK,MAAMA,CAACC,QAA2B;IAChC,KAAK,MAAM,CAACC,CAAC,EAAEC,EAAE,CAAC,IAAIF,QAAQ,CAACG,OAAO,EAAE,EAAE;MACxC,KAAK,MAAMC,CAAC,IAAIF,EAAE,EAAE;QAClB,IAAI,CAACV,GAAG,CAACS,CAAC,EAAEG,CAAC,CAAC;;;IAGlB,OAAO,IAAI;EACb;;AAlBFjB,OAAA,CAAAkB,WAAA,GAAAA,WAAA;AA4BA,MAAaE,UAAU;EAKb,OAAOC,gBAAgBA,CAAIC,CAAI,EAAEC,CAAI;IAC3C,IAAID,CAAC,GAAGC,CAAC,EAAE;MACT,OAAO,CAAC,CAAC;KACV,MAAM,IAAIA,CAAC,GAAGD,CAAC,EAAE;MAChB,OAAO,CAAC;;IAEV,OAAO,CAAC;EACV;EAEAE,YAAYC,SAAA,GAAoCL,UAAU,CAACC,gBAAgB;IAbnE,KAAAK,KAAK,GAAQ,EAAE;IACf,KAAAC,OAAO,GAAa,IAAIvB,GAAG,EAAO;IAaxC,IAAI,CAACwB,UAAU,GAAGH,SAAS;EAC7B;EAEApB,GAAGA,CAACC,GAAM,EAAEC,KAAQ;IAClB,IAAI,CAAC,IAAI,CAACoB,OAAO,CAACE,GAAG,CAACvB,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACwB,gBAAgB,CAACxB,GAAG,CAAC;;IAE5B,IAAI,CAACqB,OAAO,CAAChB,GAAG,CAACL,GAAG,EAAEC,KAAK,CAAC;EAC9B;EAEAE,GAAGA,CAACH,GAAM;IACR,OAAO,IAAI,CAACqB,OAAO,CAAClB,GAAG,CAACH,GAAG,CAAC;EAC9B;EAEAuB,GAAGA,CAACvB,GAAM;IACR,OAAO,IAAI,CAACqB,OAAO,CAACE,GAAG,CAACvB,GAAG,CAAC;EAC9B;EAEA,IAAIyB,IAAIA,CAAA;IACN,OAAO,IAAI,CAACL,KAAK,CAACM,MAAM;EAC1B;EAEAC,IAAIA,CAAA;IACF,OAAO,IAAI,CAACP,KAAK;EACnB;EAEAlB,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACkB,KAAK,CAACQ,GAAG,CAAC5B,GAAG,IAAG;MAC1B,MAAMW,CAAC,GAAG,IAAI,CAACU,OAAO,CAAClB,GAAG,CAACH,GAAG,CAAC;MAC/BV,MAAM,CAACqB,CAAC,EAAE,6CAA6C,CAAC;MACxD,OAAOA,CAAC;IACV,CAAC,CAAC;EACJ;EAGQa,gBAAgBA,CAACxB,GAAM;IAC7B,IAAI6B,KAAK,GAAG,CAAC;IACb,IAAIC,KAAK,GAAG,IAAI,CAACV,KAAK,CAACM,MAAM,GAAG,CAAC;IACjC,OAAOG,KAAK,IAAIC,KAAK,EAAE;MACrB,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,KAAK,GAAGD,KAAK,IAAI,CAAC,CAAC;MAC9C,IAAI,IAAI,CAACP,UAAU,CAAC,IAAI,CAACF,KAAK,CAACW,MAAM,CAAC,EAAE/B,GAAG,CAAC,GAAG,CAAC,EAAE;QAChD6B,KAAK,GAAGE,MAAM,GAAG,CAAC;OACnB,MAAM;QACLD,KAAK,GAAGC,MAAM,GAAG,CAAC;;;IAGtB,IAAI,CAACX,KAAK,GAAG,IAAI,CAACA,KAAK,CAACc,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC,CAACM,MAAM,CAACnC,GAAG,CAAC,CAACmC,MAAM,CAAC,IAAI,CAACf,KAAK,CAACc,KAAK,CAACL,KAAK,CAAC,CAAC;EACrF;EAIA,EAAEO,MAAM,CAACC,QAAQ,IAAC;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClB,KAAK,CAACM,MAAM,EAAEY,CAAC,IAAI,CAAC,EAAE;MAC7C,MAAM3B,CAAC,GAAG,IAAI,CAACU,OAAO,CAAClB,GAAG,CAAC,IAAI,CAACiB,KAAK,CAACkB,CAAC,CAAC,CAAC;MACzChD,MAAM,CAACqB,CAAC,EAAE,6CAA6C,CAAC;MACxD,MAAMA,CAAC;;EAEX;;AAxEFjB,OAAA,CAAAoB,UAAA,GAAAA,UAAA;AAiFA,SAAgByB,WAAWA,CACzBvB,CAAe,EACfC,CAAe,EACfuB,QAAoC;EAEpC,IAAIxB,CAAC,KAAKC,CAAC,EAAE;IACX,OAAO,IAAI;;EAEb,IAAID,CAAC,CAACU,MAAM,KAAKT,CAAC,CAACS,MAAM,EAAE;IACzB,OAAO,KAAK;;EAEd,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,CAAC,CAACU,MAAM,EAAE,EAAEY,CAAC,EAAE;IACjC,MAAMG,QAAQ,GAAGD,QAAQ,GAAGA,QAAQ,CAACxB,CAAC,CAACsB,CAAC,CAAC,EAAErB,CAAC,CAACqB,CAAC,CAAC,CAAC,GAAGtB,CAAC,CAACsB,CAAC,CAAC,KAAKrB,CAAC,CAACqB,CAAC,CAAC;IAChE,IAAI,CAACG,QAAQ,EAAE;MACb,OAAO,KAAK;;;EAGhB,OAAO,IAAI;AACb;AAlBA/C,OAAA,CAAA6C,WAAA,GAAAA,WAAA;AAuBA,SAAgBG,QAAQA,CAAIC,QAAgB,EAAEC,WAAmB;EAC/D,IAAID,QAAQ,KAAKC,WAAW,EAAE;IAC5B,OAAO,IAAI;;EAEb,KAAK,MAAMC,GAAG,IAAID,WAAW,EAAE;IAC7B,IAAI,CAACD,QAAQ,CAACpB,GAAG,CAACsB,GAAG,CAAC,EAAE;MACtB,OAAO,KAAK;;;EAGhB,OAAO,IAAI;AACb;AAVAnD,OAAA,CAAAgD,QAAA,GAAAA,QAAA;AAYA,SAAgBI,OAAOA,CAAIC,QAAqB;EAC9C,MAAMC,GAAG,GAAGD,QAAQ,CAACX,MAAM,CAACC,QAAQ,CAAC,EAAE,CAACY,IAAI,EAAE;EAC9C,OAAOD,GAAG,CAACE,IAAI,GAAGC,SAAS,GAAGH,GAAG,CAAC/C,KAAK;AACzC;AAHAP,OAAA,CAAAoD,OAAA,GAAAA,OAAA;AAKA,SAAgBM,SAASA,CAAIxB,GAAwB;EACnD,MAAMyB,KAAK,GAAG,IAAIC,KAAK,CAAC1B,GAAG,CAACH,IAAI,CAAC;EACjC,IAAIa,CAAC,GAAG,CAAC;EACT,KAAK,MAAM3B,CAAC,IAAIiB,GAAG,CAAC1B,MAAM,EAAE,EAAE;IAC5BmD,KAAK,CAACf,CAAC,EAAE,CAAC,GAAG3B,CAAC;;EAEhB,OAAO0C,KAAK;AACd;AAPA3D,OAAA,CAAA0D,SAAA,GAAAA,SAAA;AASA,SAAgBG,OAAOA,CAAI3B,GAAwB;EACjD,MAAMyB,KAAK,GAAG,IAAIC,KAAK,CAAC1B,GAAG,CAACH,IAAI,CAAC;EACjC,IAAIa,CAAC,GAAG,CAAC;EACT,KAAK,MAAM9B,CAAC,IAAIoB,GAAG,CAACD,IAAI,EAAE,EAAE;IAC1B0B,KAAK,CAACf,CAAC,EAAE,CAAC,GAAG9B,CAAC;;EAEhB,OAAO6C,KAAK;AACd;AAPA3D,OAAA,CAAA6D,OAAA,GAAAA,OAAA;AASA,SAAgBC,UAAUA,CAAO5B,GAAsB;EACrD,MAAMyB,KAAK,GAAG,IAAIC,KAAK,CAAC1B,GAAG,CAACH,IAAI,CAAC;EACjC,IAAIa,CAAC,GAAG,CAAC;EACT,KAAK,MAAMmB,KAAK,IAAI7B,GAAG,CAAClB,OAAO,EAAE,EAAE;IACjC2C,KAAK,CAACf,CAAC,EAAE,CAAC,GAAGmB,KAAK;;EAEpB,OAAOJ,KAAK;AACd;AAPA3D,OAAA,CAAA8D,UAAA,GAAAA,UAAA;AASA,SAAgBE,SAASA,CAAIrD,GAAmB;EAC9C,MAAMgD,KAAK,GAAG,IAAIC,KAAK,CAACjD,GAAG,CAACoB,IAAI,CAAC;EACjC,IAAIa,CAAC,GAAG,CAAC;EACT,KAAK,MAAM3B,CAAC,IAAIN,GAAG,CAACH,MAAM,EAAE,EAAE;IAC5BmD,KAAK,CAACf,CAAC,EAAE,CAAC,GAAG3B,CAAC;;EAEhB,OAAO0C,KAAK;AACd;AAPA3D,OAAA,CAAAgE,SAAA,GAAAA,SAAA;AASA,MAAaC,mBAAmB;EAAhCzC,YAAA;IACmB,KAAAU,GAAG,GAAG,IAAI9B,GAAG,EAAQ;EAqDxC;EAjDU8D,WAAWA,CAAA;IACjB,IAAI,CAACC,UAAU,GAAGV,SAAS;IAC3B,IAAI,CAACW,YAAY,GAAGX,SAAS;EAC/B;EAEA,IAAI1B,IAAIA,CAAA;IACN,OAAO,IAAI,CAACG,GAAG,CAACH,IAAI;EACtB;EAEAF,GAAGA,CAACvB,GAAM;IACR,OAAO,IAAI,CAAC4B,GAAG,CAACL,GAAG,CAACvB,GAAG,CAAC;EAC1B;EAEAG,GAAGA,CAACH,GAAM;IACR,OAAO,IAAI,CAAC4B,GAAG,CAACzB,GAAG,CAACH,GAAG,CAAC;EAC1B;EAEAK,GAAGA,CAACL,GAAM,EAAEC,KAAQ;IAClB,IAAI,CAAC2B,GAAG,CAACvB,GAAG,CAACL,GAAG,EAAEC,KAAK,CAAC;IACxB,IAAI,CAAC2D,WAAW,EAAE;IAClB,OAAO,IAAI;EACb;EAEAG,MAAMA,CAAC/D,GAAM;IACX,MAAMgE,OAAO,GAAG,IAAI,CAACpC,GAAG,CAACmC,MAAM,CAAC/D,GAAG,CAAC;IACpC,IAAIgE,OAAO,EAAE;MACX,IAAI,CAACJ,WAAW,EAAE;;IAEpB,OAAOI,OAAO;EAChB;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACrC,GAAG,CAACqC,KAAK,EAAE;IAChB,IAAI,CAACL,WAAW,EAAE;EACpB;EAEAjC,IAAIA,CAAA;IACF,IAAI,CAAC,IAAI,CAACkC,UAAU,EAAE;MACpB,IAAI,CAACA,UAAU,GAAGN,OAAO,CAAC,IAAI,CAAC3B,GAAG,CAAC;;IAErC,OAAO,IAAI,CAACiC,UAAU;EACxB;EAEA3D,MAAMA,CAAA;IACJ,IAAI,CAAC,IAAI,CAAC4D,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,GAAGV,SAAS,CAAC,IAAI,CAACxB,GAAG,CAAC;;IAEzC,OAAO,IAAI,CAACkC,YAAY;EAC1B;;AArDFpE,OAAA,CAAAiE,mBAAA,GAAAA,mBAAA;AAwDA,SAAgBO,gBAAgBA,CAAIC,GAAQ,EAAEC,SAAiB;EAC7D9E,MAAM,CAAC8E,SAAS,IAAID,GAAG,CAACzC,MAAM,EAAE,MAAM,GAAG0C,SAAS,MAAMD,GAAG,CAACzC,MAAM,EAAE,CAAC;EACrE,MAAM2C,IAAI,GAAG,IAAIf,KAAK,CAACc,SAAS,CAAC;EACjC,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,GAAG,CAACzC,MAAM,EAAEY,CAAC,EAAE,EAAE;IACnC+B,IAAI,CAAC/B,CAAC,CAAC,GAAG6B,GAAG,CAAC7B,CAAC,CAAC;;EAElB,OAAO+B,IAAI;AACb;AAPA3E,OAAA,CAAAwE,gBAAA,GAAAA,gBAAA;AAkBA,SAAgBI,6BAA6BA,CAACC,GAAY;EACxD,IAAI,CAACA,GAAG,EAAE;IACR,OAAO,KAAK;;EAEd,QAAQA,GAAG,CAACC,iBAAiB,EAAE;IAC7B,KAAK,MAAM;IACX,KAAK,KAAK;IACV,KAAK,GAAG;MACN,OAAO,IAAI;IACb,KAAK,OAAO;IACZ,KAAK,IAAI;IACT,KAAK,GAAG;MACN,OAAO,KAAK;IACd;MACE,OAAOrB,SAAS;;AAEtB;AAhBAzD,OAAA,CAAA4E,6BAAA,GAAAA,6BAAA;AAyBA,SAAgBG,WAAWA,CAACC,MAAgB,EAAEC,GAAA,GAAc,IAAI,EAAEC,QAAiB,EAAEC,OAAA,GAAkB,OAAO;EAC5G,IAAIH,MAAM,CAAChD,MAAM,IAAI,CAAC,EAAE;IACtB,OAAO,EAAE;;EAEX,MAAMoD,KAAK,GAAGJ,MAAM,CAAC,CAAC,CAAC;EACvB,IAAIA,MAAM,CAAChD,MAAM,IAAI,CAAC,EAAE;IACtB,OAAOoD,KAAK;;EAEd,MAAMC,IAAI,GAAGL,MAAM,CAACA,MAAM,CAAChD,MAAM,GAAG,CAAC,CAAC;EACtC,IAAIgD,MAAM,CAAChD,MAAM,IAAI,CAAC,EAAE;IACtB,OAAOoD,KAAK,IAAIF,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,GAAGE,IAAI;;EAEvD,OAAOD,KAAK,IAAIF,QAAQ,GAAGA,QAAQ,GAAGD,GAAG,CAAC,GAAGD,MAAM,CAACxC,KAAK,CAAC,CAAC,EAAEwC,MAAM,CAAChD,MAAM,GAAG,CAAC,CAAC,CAACsD,IAAI,CAACL,GAAG,CAAC,GAAGE,OAAO,GAAGE,IAAI;AAC5G;AAbArF,OAAA,CAAA+E,WAAA,GAAAA,WAAA;AAiBA,MAAMQ,yCAAyC,GAAG,GAAG;AAUrD,SAAgBC,sBAAsBA,CACpCC,KAAe,EACf;EACEC,UAAU;EACVC,MAAM;EACNC,YAAY;EACZC,aAAa;EACbC;AAAoB,CAOrB;EAED,IAAIL,KAAK,CAACzD,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO0D,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,EAAE;;EAEzB,IAAID,KAAK,CAACzD,MAAM,IAAI,CAAC,EAAE;IACrB,OAAO2D,MAAM,GAAGA,MAAM,GAAG,GAAG,GAAGF,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;;EAEpD,MAAMM,MAAM,GAAGD,oBAAoB,aAApBA,oBAAoB,cAApBA,oBAAoB,GAAIP,yCAAyC;EAEhF,MAAM;IAAES;EAAO,CAAE,GAAGP,KAAK,CAACQ,MAAM,CAC9B,CAAC;IAAED,OAAO;IAAEhE;EAAM,CAAE,EAAEkE,IAAI,KAAI;IAC5B,IAAIlE,MAAM,GAAGkE,IAAI,CAAClE,MAAM,GAAG+D,MAAM,EAAE;MACjC,OAAO;QACLC,OAAO;QACPhE;OACD;;IAEH,OAAO;MACLgE,OAAO,EAAEA,OAAO,GAAG,CAAC;MACpBhE,MAAM,EAAEA,MAAM,GAAGkE,IAAI,CAAClE;KACvB;EACH,CAAC,EACD;IAAEgE,OAAO,EAAE,CAAC;IAAEhE,MAAM,EAAE;EAAC,CAAC,CACzB;EAED,MAAMmE,SAAS,GAAGV,KAAK,CAACjD,KAAK,CAAC,CAAC,EAAEF,IAAI,CAAC8D,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAAC,CAAC;EACtD,MAAMK,YAAY,GAAGT,YAAY,GAC7BA,YAAY,GAAG,GAAG,GACjBD,MAAM,GAAGA,MAAM,GAAG,GAAG,GAAG,EAAG;EAChC,IAAIQ,SAAS,CAACnE,MAAM,KAAKyD,KAAK,CAACzD,MAAM,EAAE;IACrC,OAAOqE,YAAY,GAAGtB,WAAW,CAACoB,SAAS,EAAE,IAAI,EAAE1C,SAAS,EAAEoC,aAAa,CAAC;GAC7E,MAAM;IACL,OAAOQ,YAAY,GAAGtB,WAAW,CAACoB,SAAS,EAAE,IAAI,EAAE1C,SAAS,EAAE,IAAI,CAAC,GAAG,OAAO;;AAEjF;AAjDAzD,OAAA,CAAAwF,sBAAA,GAAAA,sBAAA;AA2DO,MAAMc,SAAS,GAAOC,CAAgB,IAAaA,CAAC,KAAK9C,SAAS,GAAG,KAAK,GAAG,IAAI;AAA3EzD,OAAA,CAAAsG,SAAS,GAAAA,SAAA;AAOtB,SAAgBE,kBAAkBA,CAAIC,OAAU,EAAE9C,KAAU;EAC1D,MAAM+C,KAAK,GAAG/C,KAAK,CAACgD,OAAO,CAACF,OAAO,CAAC;EACpC,IAAIC,KAAK,IAAI,CAAC,EAAE;IACd/C,KAAK,CAACiD,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACtB,OAAO,IAAI;GACZ,MAAM;IACL,OAAO,KAAK;;AAEhB;AARA1G,OAAA,CAAAwG,kBAAA,GAAAA,kBAAA;AAYA,SAAgBK,eAAeA,CAAIlD,KAAU;EAC3C,OAAOA,KAAK,CAAC3B,MAAM,GAAG,CAAC;AACzB;AAFAhC,OAAA,CAAA6G,eAAA,GAAAA,eAAA;AAKA,SAAgBC,QAAQA,CAAInD,KAAU,EAAEoD,SAA4B;EAClE,KAAK,IAAInE,CAAC,GAAGe,KAAK,CAAC3B,MAAM,GAAG,CAAC,EAAEY,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1C,MAAM2D,CAAC,GAAG5C,KAAK,CAACf,CAAC,CAAC;IAClB,IAAImE,SAAS,CAACR,CAAC,CAAC,EAAE;MAChB,OAAOA,CAAC;;;EAGZ,OAAO9C,SAAS;AAClB;AARAzD,OAAA,CAAA8G,QAAA,GAAAA,QAAA","names":["assert","condition","message","Error","exports","assertUnreachable","_","MultiMap","Map","add","key","value","values","get","push","set","addAll","otherMap","k","vs","entries","v","SetMultiMap","Set","OrderedMap","defaultCompareFn","a","b","constructor","compareFn","_keys","_values","_compareFn","has","insertKeyInOrder","size","length","keys","map","lower","upper","middle","Math","floor","slice","concat","Symbol","iterator","i","arrayEquals","equalFct","eltEqual","isSubset","superset","maybeSubset","elt","firstOf","iterable","res","next","done","undefined","mapValues","array","Array","mapKeys","mapEntries","entry","setValues","MapWithCachedArrays","clearCaches","cachedKeys","cachedValues","delete","deleted","clear","copyWitNewLength","arr","newLength","copy","validateStringContainsBoolean","str","toLocaleLowerCase","joinStrings","toJoin","sep","firstSep","lastSep","first","last","join","DEFAULT_HUMAN_READABLE_LIST_CUTOFF_LENGTH","printHumanReadableList","names","emptyValue","prefix","prefixPlural","lastSeparator","cutoff_output_length","cutoff","lastIdx","reduce","name","toDisplay","max","actualPrefix","isDefined","t","removeArrayElement","element","index","indexOf","splice","isNonEmptyArray","findLast","predicate"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}