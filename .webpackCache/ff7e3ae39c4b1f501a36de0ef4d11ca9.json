{"ast":null,"code":"\"use strict\";\n\nconst lazyPrint = value => {\n  if (typeof value === 'function') {\n    return value();\n  }\n  return value;\n};\nconst logLevels = {\n  debug: [['debug', 'debug'], ['verbose', 'debug'], ['info', 'info'], ['error', 'error'], ['warn', 'warn']],\n  verbose: [['verbose', 'debug'], ['info', 'info'], ['error', 'error'], ['warn', 'warn']],\n  info: [['info', 'info'], ['error', 'error'], ['warn', 'warn']],\n  warn: [['warn', 'warn'], ['error', 'error']],\n  error: [['error', 'error']],\n  none: []\n};\nconst print = fn => (message, ...additional) => console[fn]({\n  message: lazyPrint(message),\n  ...(Array.isArray(additional) ? additional.map(lazyPrint) : [])\n});\nconst NO_OP = () => {};\nfunction logger({\n  level = 'error'\n} = {}) {\n  const levels = logLevels[level];\n  const logger = {\n    error: NO_OP,\n    debug: NO_OP,\n    info: NO_OP,\n    verbose: NO_OP,\n    warn: NO_OP\n  };\n  if (!levels) return logger;\n  for (const [level2, consoleMethod] of levels) logger[level2] = print(consoleMethod);\n  return logger;\n}\nmodule.exports = logger;","map":{"version":3,"names":["lazyPrint","value","logLevels","debug","verbose","info","warn","error","none","print","fn","message","additional","console","Array","isArray","map","NO_OP","logger","level","levels","level2","consoleMethod","module","exports"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/@vendia-serverless-express-npm-4.10.4-2e67e59920-f33d3f0f08.zip/node_modules/@vendia/serverless-express/src/logger.js"],"sourcesContent":["const lazyPrint = value => {\n  if (typeof value === 'function') {\n    return value()\n  }\n\n  return value\n}\n\nconst logLevels = {\n  debug: [\n    ['debug', 'debug'],\n    ['verbose', 'debug'],\n    ['info', 'info'],\n    ['error', 'error'],\n    ['warn', 'warn']\n  ],\n  verbose: [\n    ['verbose', 'debug'],\n    ['info', 'info'],\n    ['error', 'error'],\n    ['warn', 'warn']\n  ],\n  info: [\n    ['info', 'info'],\n    ['error', 'error'],\n    ['warn', 'warn']\n  ],\n  warn: [\n    ['warn', 'warn'],\n    ['error', 'error']\n  ],\n  error: [['error', 'error']],\n  none: []\n}\n\nconst print =\n  fn =>\n    (message, ...additional) =>\n      console[fn]({\n        message: lazyPrint(message),\n        ...(Array.isArray(additional) ? additional.map(lazyPrint) : [])\n      })\n\nconst NO_OP = () => {}\n\nfunction logger ({ level = 'error' } = {}) {\n  const levels = logLevels[level]\n\n  const logger = {\n    error: NO_OP,\n    debug: NO_OP,\n    info: NO_OP,\n    verbose: NO_OP,\n    warn: NO_OP\n  }\n\n  if (!levels) return logger\n\n  for (const [level2, consoleMethod] of levels) logger[level2] = print(consoleMethod)\n\n  return logger\n}\n\nmodule.exports = logger\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,KAAK,IAAI;EACzB,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;IAC/B,OAAOA,KAAK,CAAC,CAAC;EAChB;EAEA,OAAOA,KAAK;AACd,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,CACL,CAAC,OAAO,EAAE,OAAO,CAAC,EAClB,CAAC,SAAS,EAAE,OAAO,CAAC,EACpB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,OAAO,EAAE,OAAO,CAAC,EAClB,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB;EACDC,OAAO,EAAE,CACP,CAAC,SAAS,EAAE,OAAO,CAAC,EACpB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,OAAO,EAAE,OAAO,CAAC,EAClB,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB;EACDC,IAAI,EAAE,CACJ,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,OAAO,EAAE,OAAO,CAAC,EAClB,CAAC,MAAM,EAAE,MAAM,CAAC,CACjB;EACDC,IAAI,EAAE,CACJ,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,OAAO,EAAE,OAAO,CAAC,CACnB;EACDC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EAC3BC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,KAAK,GACTC,EAAE,IACA,CAACC,OAAO,EAAE,GAAGC,UAAU,KACrBC,OAAO,CAACH,EAAE,CAAC,CAAC;EACVC,OAAO,EAAEX,SAAS,CAACW,OAAO,CAAC;EAC3B,IAAIG,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,GAAGA,UAAU,CAACI,GAAG,CAAChB,SAAS,CAAC,GAAG,EAAE;AAChE,CAAC,CAAC;AAER,MAAMiB,KAAK,GAAGA,CAAA,KAAM,CAAC,CAAC;AAEtB,SAASC,MAAMA,CAAE;EAAEC,KAAK,GAAG;AAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;EACzC,MAAMC,MAAM,GAAGlB,SAAS,CAACiB,KAAK,CAAC;EAE/B,MAAMD,MAAM,GAAG;IACbX,KAAK,EAAEU,KAAK;IACZd,KAAK,EAAEc,KAAK;IACZZ,IAAI,EAAEY,KAAK;IACXb,OAAO,EAAEa,KAAK;IACdX,IAAI,EAAEW;EACR,CAAC;EAED,IAAI,CAACG,MAAM,EAAE,OAAOF,MAAM;EAE1B,KAAK,MAAM,CAACG,MAAM,EAAEC,aAAa,CAAC,IAAIF,MAAM,EAAEF,MAAM,CAACG,MAAM,CAAC,GAAGZ,KAAK,CAACa,aAAa,CAAC;EAEnF,OAAOJ,MAAM;AACf;AAEAK,MAAM,CAACC,OAAO,GAAGN,MAAM"},"metadata":{},"sourceType":"module"}