{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withDefault = exports.flattenObjectOf = exports.isRuleFieldMap = exports.isRuleFunction = exports.isLogicRule = exports.isRule = void 0;\nconst rules_1 = require(\"./rules\");\n/**\n *\n * @param x\n *\n * Makes sure that a certain field is a rule.\n *\n */\nfunction isRule(x) {\n  return x instanceof rules_1.Rule || x && x.constructor && x.constructor.name === 'Rule';\n}\nexports.isRule = isRule;\n/**\n *\n * @param x\n *\n * Makes sure that a certain field is a logic rule.\n *\n */\nfunction isLogicRule(x) {\n  return x instanceof rules_1.LogicRule || x && x.constructor && (x.constructor.name === 'RuleOr' || x.constructor.name === 'RuleAnd' || x.constructor.name === 'RuleChain' || x.constructor.name === 'RuleRace' || x.constructor.name === 'RuleNot' || x.constructor.name === 'RuleTrue' || x.constructor.name === 'RuleFalse');\n}\nexports.isLogicRule = isLogicRule;\n/**\n *\n * @param x\n *\n * Makes sure that a certain field is a rule or a logic rule.\n *\n */\nfunction isRuleFunction(x) {\n  return isRule(x) || isLogicRule(x);\n}\nexports.isRuleFunction = isRuleFunction;\n/**\n *\n * @param x\n *\n * Determines whether a certain field is rule field map or not.\n *\n */\nfunction isRuleFieldMap(x) {\n  return typeof x === 'object' && Object.values(x).every(rule => isRuleFunction(rule));\n}\nexports.isRuleFieldMap = isRuleFieldMap;\n/**\n *\n * @param obj\n * @param func\n *\n * Flattens object of particular type by checking if the leaf\n * evaluates to true from particular function.\n *\n */\nfunction flattenObjectOf(obj, f) {\n  const values = Object.keys(obj).reduce((acc, key) => {\n    const val = obj[key];\n    if (f(val)) {\n      return [...acc, val];\n    } else if (typeof val === 'object' && !f(val)) {\n      return [...acc, ...flattenObjectOf(val, f)];\n    } else {\n      return acc;\n    }\n  }, []);\n  return values;\n}\nexports.flattenObjectOf = flattenObjectOf;\n/**\n *\n * Returns fallback is provided value is undefined\n *\n * @param fallback\n */\nfunction withDefault(fallback) {\n  return value => {\n    if (value === undefined) return fallback;\n    return value;\n  };\n}\nexports.withDefault = withDefault;","map":{"version":3,"mappings":";;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA;;;;;;;AAOA,SAAgBC,MAAMA,CAACC,CAAM;EAC3B,OACEA,CAAC,YAAYH,OAAA,CAAAI,IAAI,IAAKD,CAAC,IAAIA,CAAC,CAACE,WAAW,IAAIF,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,MAAO;AAE9E;AAJAC,OAAA,CAAAL,MAAA,GAAAA,MAAA;AAMA;;;;;;;AAOA,SAAgBM,WAAWA,CAACL,CAAM;EAChC,OACEA,CAAC,YAAYH,OAAA,CAAAS,SAAS,IACrBN,CAAC,IACAA,CAAC,CAACE,WAAW,KACZF,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,QAAQ,IAC9BH,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,SAAS,IAChCH,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,WAAW,IAClCH,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,UAAU,IACjCH,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,SAAS,IAChCH,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,UAAU,IACjCH,CAAC,CAACE,WAAW,CAACC,IAAI,KAAK,WAAW,CAAE;AAE5C;AAbAC,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAeA;;;;;;;AAOA,SAAgBE,cAAcA,CAACP,CAAM;EACnC,OAAOD,MAAM,CAACC,CAAC,CAAC,IAAIK,WAAW,CAACL,CAAC,CAAC;AACpC;AAFAI,OAAA,CAAAG,cAAA,GAAAA,cAAA;AAIA;;;;;;;AAOA,SAAgBC,cAAcA,CAACR,CAAM;EACnC,OACE,OAAOA,CAAC,KAAK,QAAQ,IACrBS,MAAM,CAACC,MAAM,CAACV,CAAC,CAAC,CAACW,KAAK,CAAEC,IAAI,IAAKL,cAAc,CAACK,IAAI,CAAC,CAAC;AAE1D;AALAR,OAAA,CAAAI,cAAA,GAAAA,cAAA;AAOA;;;;;;;;;AASA,SAAgBK,eAAeA,CAC7BC,GAA2B,EAC3BC,CAAsB;EAEtB,MAAML,MAAM,GAAGD,MAAM,CAACO,IAAI,CAACF,GAAG,CAAC,CAACG,MAAM,CAAM,CAACC,GAAG,EAAEC,GAAG,KAAI;IACvD,MAAMC,GAAG,GAAGN,GAAG,CAACK,GAAG,CAAC;IACpB,IAAIJ,CAAC,CAACK,GAAG,CAAC,EAAE;MACV,OAAO,CAAC,GAAGF,GAAG,EAAEE,GAAG,CAAC;KACrB,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,CAACL,CAAC,CAACK,GAAG,CAAC,EAAE;MAC7C,OAAO,CAAC,GAAGF,GAAG,EAAE,GAAGL,eAAe,CAACO,GAAG,EAAEL,CAAC,CAAC,CAAC;KAC5C,MAAM;MACL,OAAOG,GAAG;;EAEd,CAAC,EAAE,EAAE,CAAC;EACN,OAAOR,MAAM;AACf;AAfAN,OAAA,CAAAS,eAAA,GAAAA,eAAA;AAiBA;;;;;;AAMA,SAAgBQ,WAAWA,CAAIC,QAAW;EACxC,OAAQC,KAAK,IAAI;IACf,IAAIA,KAAK,KAAKC,SAAS,EAAE,OAAOF,QAAQ;IACxC,OAAOC,KAAK;EACd,CAAC;AACH;AALAnB,OAAA,CAAAiB,WAAA,GAAAA,WAAA","names":["rules_1","require","isRule","x","Rule","constructor","name","exports","isLogicRule","LogicRule","isRuleFunction","isRuleFieldMap","Object","values","every","rule","flattenObjectOf","obj","f","keys","reduce","acc","key","val","withDefault","fallback","value","undefined"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}