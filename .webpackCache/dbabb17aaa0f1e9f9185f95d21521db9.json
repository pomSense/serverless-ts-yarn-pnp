{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = undefined && undefined.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = undefined && undefined.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = undefined && undefined.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isImplicitlyInstallablePlugin = exports.ApolloServerBase = void 0;\nconst mock_1 = require(\"@graphql-tools/mock\");\nconst schema_1 = require(\"@graphql-tools/schema\");\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nconst graphql_1 = require(\"graphql\");\nconst resolvable_1 = __importDefault(require(\"@josephg/resolvable\"));\nconst utils_keyvaluecache_1 = require(\"@apollo/utils.keyvaluecache\");\nconst schemaHash_1 = require(\"./utils/schemaHash\");\nconst requestPipeline_1 = require(\"./requestPipeline\");\nconst apollo_server_env_1 = require(\"apollo-server-env\");\nconst apollo_tools_1 = require(\"@apollographql/apollo-tools\");\nconst runHttpQuery_1 = require(\"./runHttpQuery\");\nconst isNodeLike_1 = __importDefault(require(\"./utils/isNodeLike\"));\nconst determineApolloConfig_1 = require(\"./determineApolloConfig\");\nconst plugin_1 = require(\"./plugin\");\nconst internalPlugin_1 = require(\"./internalPlugin\");\nconst cachePolicy_1 = require(\"./cachePolicy\");\nconst schemaManager_1 = require(\"./utils/schemaManager\");\nconst uuid = __importStar(require(\"uuid\"));\nconst UnboundedCache_1 = require(\"./utils/UnboundedCache\");\nconst NoIntrospection = context => ({\n  Field(node) {\n    if (node.name.value === '__schema' || node.name.value === '__type') {\n      context.reportError(new graphql_1.GraphQLError('GraphQL introspection is not allowed by Apollo Server, but the query contained __schema or __type. To enable introspection, pass introspection: true to ApolloServer in production', [node]));\n    }\n  }\n});\nclass UnreachableCaseError extends Error {\n  constructor(val) {\n    super(`Unreachable case: ${val}`);\n  }\n}\nconst recommendedCsrfPreventionRequestHeaders = ['x-apollo-operation-name', 'apollo-require-preflight'];\nclass ApolloServerBase {\n  constructor(config) {\n    var _a, _b;\n    this.graphqlPath = '/graphql';\n    this.requestOptions = Object.create(null);\n    this.plugins = [];\n    this.toDispose = new Set();\n    this.toDisposeLast = new Set();\n    this.drainServers = null;\n    this.landingPage = null;\n    if (!config) throw new Error('ApolloServer requires options.');\n    this.config = {\n      ...config,\n      nodeEnv: (_a = config.nodeEnv) !== null && _a !== void 0 ? _a : process.env.NODE_ENV\n    };\n    const {\n      context,\n      resolvers,\n      schema,\n      modules,\n      typeDefs,\n      parseOptions = {},\n      introspection,\n      plugins,\n      gateway,\n      apollo,\n      stopOnTerminationSignals,\n      mocks,\n      mockEntireSchema,\n      documentStore,\n      csrfPrevention,\n      ...requestOptions\n    } = this.config;\n    if (config.logger) {\n      this.logger = config.logger;\n    } else {\n      const loglevelLogger = loglevel_1.default.getLogger('apollo-server');\n      if (this.config.debug === true) {\n        loglevelLogger.setLevel(loglevel_1.default.levels.DEBUG);\n      } else {\n        loglevelLogger.setLevel(loglevel_1.default.levels.INFO);\n      }\n      this.logger = loglevelLogger;\n    }\n    this.apolloConfig = (0, determineApolloConfig_1.determineApolloConfig)(apollo);\n    if (gateway && (modules || schema || typeDefs || resolvers)) {\n      throw new Error('Cannot define both `gateway` and any of: `modules`, `schema`, `typeDefs`, or `resolvers`');\n    }\n    this.parseOptions = parseOptions;\n    this.context = context;\n    this.csrfPreventionRequestHeaders = csrfPrevention === true ? recommendedCsrfPreventionRequestHeaders : csrfPrevention === false ? null : csrfPrevention === undefined ? null : (_b = csrfPrevention.requestHeaders) !== null && _b !== void 0 ? _b : recommendedCsrfPreventionRequestHeaders;\n    const isDev = this.config.nodeEnv !== 'production';\n    this.stopOnTerminationSignals = typeof stopOnTerminationSignals === 'boolean' ? stopOnTerminationSignals : isNodeLike_1.default && this.config.nodeEnv !== 'test' && !this.serverlessFramework();\n    if (typeof introspection === 'boolean' && !introspection || introspection === undefined && !isDev) {\n      const noIntro = [NoIntrospection];\n      requestOptions.validationRules = requestOptions.validationRules ? requestOptions.validationRules.concat(noIntro) : noIntro;\n    }\n    if (requestOptions.cache === 'bounded') {\n      requestOptions.cache = new utils_keyvaluecache_1.InMemoryLRUCache();\n    }\n    if (!requestOptions.cache) {\n      requestOptions.cache = new UnboundedCache_1.UnboundedCache();\n      if (!isDev && (requestOptions.persistedQueries === undefined || requestOptions.persistedQueries && !requestOptions.persistedQueries.cache)) {\n        this.logger.warn('Persisted queries are enabled and are using an unbounded cache. Your server' + ' is vulnerable to denial of service attacks via memory exhaustion. ' + 'Set `cache: \"bounded\"` or `persistedQueries: false` in your ApolloServer ' + 'constructor, or see https://go.apollo.dev/s/cache-backends for other alternatives.');\n      }\n    }\n    if (requestOptions.persistedQueries !== false) {\n      const {\n        cache: apqCache = requestOptions.cache,\n        ...apqOtherOptions\n      } = requestOptions.persistedQueries || Object.create(null);\n      requestOptions.persistedQueries = {\n        cache: new utils_keyvaluecache_1.PrefixingKeyValueCache(apqCache, requestPipeline_1.APQ_CACHE_PREFIX),\n        ...apqOtherOptions\n      };\n    } else {\n      delete requestOptions.persistedQueries;\n    }\n    this.requestOptions = requestOptions;\n    this.ensurePluginInstantiation(plugins, isDev);\n    if (gateway) {\n      this.state = {\n        phase: 'initialized',\n        schemaManager: new schemaManager_1.SchemaManager({\n          gateway,\n          apolloConfig: this.apolloConfig,\n          schemaDerivedDataProvider: schema => this.generateSchemaDerivedData(schema),\n          logger: this.logger\n        })\n      };\n    } else {\n      this.state = {\n        phase: 'initialized',\n        schemaManager: new schemaManager_1.SchemaManager({\n          apiSchema: this.maybeAddMocksToConstructedSchema(this.constructSchema()),\n          schemaDerivedDataProvider: schema => this.generateSchemaDerivedData(schema),\n          logger: this.logger\n        })\n      };\n    }\n    if (this.serverlessFramework()) {\n      this._start().catch(e => this.logStartupError(e));\n    }\n  }\n  async start() {\n    if (this.serverlessFramework()) {\n      throw new Error('When using an ApolloServer subclass from a serverless framework ' + \"package, you don't need to call start(); just call createHandler().\");\n    }\n    return await this._start();\n  }\n  async _start() {\n    var _a;\n    if (this.state.phase !== 'initialized') {\n      throw new Error(`called start() with surprising state ${this.state.phase}`);\n    }\n    const schemaManager = this.state.schemaManager;\n    const barrier = (0, resolvable_1.default)();\n    this.state = {\n      phase: 'starting',\n      barrier,\n      schemaManager\n    };\n    try {\n      const executor = await schemaManager.start();\n      this.toDispose.add(async () => {\n        await schemaManager.stop();\n      });\n      if (executor) {\n        this.requestOptions.executor = executor;\n      }\n      const schemaDerivedData = schemaManager.getSchemaDerivedData();\n      const service = {\n        logger: this.logger,\n        schema: schemaDerivedData.schema,\n        schemaHash: schemaDerivedData.schemaHash,\n        apollo: this.apolloConfig,\n        serverlessFramework: this.serverlessFramework()\n      };\n      if ((_a = this.requestOptions.persistedQueries) === null || _a === void 0 ? void 0 : _a.cache) {\n        service.persistedQueries = {\n          cache: this.requestOptions.persistedQueries.cache\n        };\n      }\n      const taggedServerListeners = (await Promise.all(this.plugins.map(async plugin => ({\n        serverListener: plugin.serverWillStart && (await plugin.serverWillStart(service)),\n        installedImplicitly: isImplicitlyInstallablePlugin(plugin) && plugin.__internal_installed_implicitly__\n      })))).filter(maybeTaggedServerListener => typeof maybeTaggedServerListener.serverListener === 'object');\n      taggedServerListeners.forEach(({\n        serverListener: {\n          schemaDidLoadOrUpdate\n        }\n      }) => {\n        if (schemaDidLoadOrUpdate) {\n          try {\n            schemaManager.onSchemaLoadOrUpdate(schemaDidLoadOrUpdate);\n          } catch (e) {\n            if (e instanceof schemaManager_1.GatewayIsTooOldError) {\n              throw new Error([`One of your plugins uses the 'schemaDidLoadOrUpdate' hook,`, `but your gateway version is too old to support this hook.`, `Please update your version of @apollo/gateway to at least 0.35.0.`].join(' '));\n            }\n            throw e;\n          }\n        }\n      });\n      const serverWillStops = taggedServerListeners.flatMap(l => l.serverListener.serverWillStop ? [l.serverListener.serverWillStop] : []);\n      if (serverWillStops.length) {\n        this.toDispose.add(async () => {\n          await Promise.all(serverWillStops.map(serverWillStop => serverWillStop()));\n        });\n      }\n      const drainServerCallbacks = taggedServerListeners.flatMap(l => l.serverListener.drainServer ? [l.serverListener.drainServer] : []);\n      if (drainServerCallbacks.length) {\n        this.drainServers = async () => {\n          await Promise.all(drainServerCallbacks.map(drainServer => drainServer()));\n        };\n      }\n      let taggedServerListenersWithRenderLandingPage = taggedServerListeners.filter(l => l.serverListener.renderLandingPage);\n      if (taggedServerListenersWithRenderLandingPage.length > 1) {\n        taggedServerListenersWithRenderLandingPage = taggedServerListenersWithRenderLandingPage.filter(l => !l.installedImplicitly);\n      }\n      if (taggedServerListenersWithRenderLandingPage.length > 1) {\n        throw Error('Only one plugin can implement renderLandingPage.');\n      } else if (taggedServerListenersWithRenderLandingPage.length) {\n        this.landingPage = await taggedServerListenersWithRenderLandingPage[0].serverListener.renderLandingPage();\n      } else {\n        this.landingPage = null;\n      }\n      this.state = {\n        phase: 'started',\n        schemaManager\n      };\n      this.maybeRegisterTerminationSignalHandlers(['SIGINT', 'SIGTERM']);\n    } catch (error) {\n      this.state = {\n        phase: 'failed to start',\n        error: error\n      };\n      throw error;\n    } finally {\n      barrier.resolve();\n    }\n  }\n  maybeRegisterTerminationSignalHandlers(signals) {\n    if (!this.stopOnTerminationSignals) {\n      return;\n    }\n    let receivedSignal = false;\n    const signalHandler = async signal => {\n      if (receivedSignal) {\n        return;\n      }\n      receivedSignal = true;\n      try {\n        await this.stop();\n      } catch (e) {\n        this.logger.error(`stop() threw during ${signal} shutdown`);\n        this.logger.error(e);\n        process.exit(1);\n      }\n      process.kill(process.pid, signal);\n    };\n    signals.forEach(signal => {\n      process.on(signal, signalHandler);\n      this.toDisposeLast.add(async () => {\n        process.removeListener(signal, signalHandler);\n      });\n    });\n  }\n  async _ensureStarted() {\n    while (true) {\n      switch (this.state.phase) {\n        case 'initialized':\n          throw new Error('You need to call `server.start()` before using your Apollo Server.');\n        case 'starting':\n          await this.state.barrier;\n          break;\n        case 'failed to start':\n          this.logStartupError(this.state.error);\n          throw new Error('This data graph is missing a valid configuration. More details may be available in the server logs.');\n        case 'started':\n        case 'draining':\n          return this.state.schemaManager.getSchemaDerivedData();\n        case 'stopping':\n          throw new Error('Cannot execute GraphQL operations while the server is stopping.');\n        case 'stopped':\n          throw new Error('Cannot execute GraphQL operations after the server has stopped.');\n        default:\n          throw new UnreachableCaseError(this.state);\n      }\n    }\n  }\n  async ensureStarted() {\n    await this._ensureStarted();\n  }\n  assertStarted(methodName) {\n    if (this.state.phase !== 'started' && this.state.phase !== 'draining') {\n      throw new Error('You must `await server.start()` before calling `server.' + methodName + '()`');\n    }\n  }\n  logStartupError(err) {\n    this.logger.error('An error occurred during Apollo Server startup. All GraphQL requests ' + 'will now fail. The startup error was: ' + ((err === null || err === void 0 ? void 0 : err.message) || err));\n  }\n  constructSchema() {\n    const {\n      schema,\n      modules,\n      typeDefs,\n      resolvers,\n      parseOptions\n    } = this.config;\n    if (schema) {\n      return schema;\n    }\n    if (modules) {\n      const {\n        schema,\n        errors\n      } = (0, apollo_tools_1.buildServiceDefinition)(modules);\n      if (errors && errors.length > 0) {\n        throw new Error(errors.map(error => error.message).join('\\n\\n'));\n      }\n      return schema;\n    }\n    if (!typeDefs) {\n      throw Error('Apollo Server requires either an existing schema, modules or typeDefs');\n    }\n    const augmentedTypeDefs = Array.isArray(typeDefs) ? typeDefs : [typeDefs];\n    return (0, schema_1.makeExecutableSchema)({\n      typeDefs: augmentedTypeDefs,\n      resolvers,\n      parseOptions\n    });\n  }\n  maybeAddMocksToConstructedSchema(schema) {\n    const {\n      mocks,\n      mockEntireSchema\n    } = this.config;\n    if (mocks === false) {\n      return schema;\n    }\n    if (!mocks && typeof mockEntireSchema === 'undefined') {\n      return schema;\n    }\n    return (0, mock_1.addMocksToSchema)({\n      schema,\n      mocks: mocks === true || typeof mocks === 'undefined' ? {} : mocks,\n      preserveResolvers: typeof mockEntireSchema === 'undefined' ? false : !mockEntireSchema\n    });\n  }\n  generateSchemaDerivedData(schema) {\n    const schemaHash = (0, schemaHash_1.generateSchemaHash)(schema);\n    return {\n      schema,\n      schemaHash,\n      documentStore: this.config.documentStore === undefined ? new utils_keyvaluecache_1.InMemoryLRUCache() : this.config.documentStore === null ? null : new utils_keyvaluecache_1.PrefixingKeyValueCache(this.config.documentStore, `${uuid.v4()}:`)\n    };\n  }\n  async stop() {\n    var _a;\n    switch (this.state.phase) {\n      case 'initialized':\n      case 'starting':\n      case 'failed to start':\n        throw Error('apolloServer.stop() should only be called after `await apolloServer.start()` has succeeded');\n      case 'stopped':\n        if (this.state.stopError) {\n          throw this.state.stopError;\n        }\n        return;\n      case 'stopping':\n      case 'draining':\n        {\n          await this.state.barrier;\n          const state = this.state;\n          if (state.phase !== 'stopped') {\n            throw Error(`Surprising post-stopping state ${state.phase}`);\n          }\n          if (state.stopError) {\n            throw state.stopError;\n          }\n          return;\n        }\n      case 'started':\n        break;\n      default:\n        throw new UnreachableCaseError(this.state);\n    }\n    const barrier = (0, resolvable_1.default)();\n    this.state = {\n      phase: 'draining',\n      schemaManager: this.state.schemaManager,\n      barrier\n    };\n    try {\n      await ((_a = this.drainServers) === null || _a === void 0 ? void 0 : _a.call(this));\n      this.state = {\n        phase: 'stopping',\n        barrier\n      };\n      await Promise.all([...this.toDispose].map(dispose => dispose()));\n      await Promise.all([...this.toDisposeLast].map(dispose => dispose()));\n    } catch (stopError) {\n      this.state = {\n        phase: 'stopped',\n        stopError: stopError\n      };\n      barrier.resolve();\n      throw stopError;\n    }\n    this.state = {\n      phase: 'stopped',\n      stopError: null\n    };\n  }\n  serverlessFramework() {\n    return false;\n  }\n  ensurePluginInstantiation(userPlugins = [], isDev) {\n    this.plugins = userPlugins.map(plugin => {\n      if (typeof plugin === 'function') {\n        return plugin();\n      }\n      return plugin;\n    });\n    const alreadyHavePluginWithInternalId = id => this.plugins.some(p => (0, internalPlugin_1.pluginIsInternal)(p) && p.__internal_plugin_id__() === id);\n    {\n      if (!alreadyHavePluginWithInternalId('CacheControl')) {\n        this.plugins.push((0, plugin_1.ApolloServerPluginCacheControl)());\n      }\n    }\n    {\n      const alreadyHavePlugin = alreadyHavePluginWithInternalId('UsageReporting');\n      if (!alreadyHavePlugin && this.apolloConfig.key) {\n        if (this.apolloConfig.graphRef) {\n          this.plugins.unshift((0, plugin_1.ApolloServerPluginUsageReporting)());\n        } else {\n          this.logger.warn('You have specified an Apollo key but have not specified a graph ref; usage ' + 'reporting is disabled. To enable usage reporting, set the `APOLLO_GRAPH_REF` ' + 'environment variable to `your-graph-id@your-graph-variant`. To disable this ' + 'warning, install `ApolloServerPluginUsageReportingDisabled`.');\n        }\n      }\n    }\n    {\n      const alreadyHavePlugin = alreadyHavePluginWithInternalId('SchemaReporting');\n      const enabledViaEnvVar = process.env.APOLLO_SCHEMA_REPORTING === 'true';\n      if (!alreadyHavePlugin && enabledViaEnvVar) {\n        if (this.apolloConfig.key) {\n          const options = {};\n          this.plugins.push((0, plugin_1.ApolloServerPluginSchemaReporting)(options));\n        } else {\n          throw new Error(\"You've enabled schema reporting by setting the APOLLO_SCHEMA_REPORTING \" + 'environment variable to true, but you also need to provide your ' + 'Apollo API key, via the APOLLO_KEY environment ' + 'variable or via `new ApolloServer({apollo: {key})');\n        }\n      }\n    }\n    {\n      const alreadyHavePlugin = alreadyHavePluginWithInternalId('InlineTrace');\n      if (!alreadyHavePlugin) {\n        this.plugins.push((0, plugin_1.ApolloServerPluginInlineTrace)({\n          __onlyIfSchemaIsFederated: true\n        }));\n      }\n    }\n    const alreadyHavePlugin = alreadyHavePluginWithInternalId('LandingPageDisabled');\n    if (!alreadyHavePlugin) {\n      const plugin = isDev ? (0, plugin_1.ApolloServerPluginLandingPageLocalDefault)() : (0, plugin_1.ApolloServerPluginLandingPageProductionDefault)();\n      if (!isImplicitlyInstallablePlugin(plugin)) {\n        throw Error('default landing page plugin should be implicitly installable?');\n      }\n      plugin.__internal_installed_implicitly__ = true;\n      this.plugins.push(plugin);\n    }\n  }\n  async graphQLServerOptions(integrationContextArgument) {\n    const {\n      schema,\n      schemaHash,\n      documentStore\n    } = await this._ensureStarted();\n    let context = this.context ? this.context : {};\n    try {\n      context = typeof this.context === 'function' ? await this.context(integrationContextArgument || {}) : context;\n    } catch (error) {\n      context = () => {\n        throw error;\n      };\n    }\n    return {\n      schema,\n      schemaHash,\n      logger: this.logger,\n      plugins: this.plugins,\n      documentStore,\n      context,\n      parseOptions: this.parseOptions,\n      ...this.requestOptions\n    };\n  }\n  async executeOperation(request, integrationContextArgument) {\n    if (this.state.phase === 'initialized') {\n      await this._start();\n    }\n    const options = await this.graphQLServerOptions(integrationContextArgument);\n    if (typeof options.context === 'function') {\n      options.context = options.context();\n    } else if (typeof options.context === 'object') {\n      options.context = (0, runHttpQuery_1.cloneObject)(options.context);\n    }\n    const requestCtx = {\n      logger: this.logger,\n      schema: options.schema,\n      schemaHash: options.schemaHash,\n      request: {\n        ...request,\n        query: request.query && typeof request.query !== 'string' ? (0, graphql_1.print)(request.query) : request.query\n      },\n      context: options.context || Object.create(null),\n      cache: options.cache,\n      metrics: {},\n      response: {\n        http: {\n          headers: new apollo_server_env_1.Headers()\n        }\n      },\n      debug: options.debug,\n      overallCachePolicy: (0, cachePolicy_1.newCachePolicy)()\n    };\n    return (0, requestPipeline_1.processGraphQLRequest)(options, requestCtx);\n  }\n  getLandingPage() {\n    this.assertStarted('getLandingPage');\n    return this.landingPage;\n  }\n}\nexports.ApolloServerBase = ApolloServerBase;\nfunction isImplicitlyInstallablePlugin(p) {\n  return '__internal_installed_implicitly__' in p;\n}\nexports.isImplicitlyInstallablePlugin = isImplicitlyInstallablePlugin;","map":{"version":3,"mappings":"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","names":["mock_1","require","schema_1","loglevel_1","__importDefault","graphql_1","resolvable_1","utils_keyvaluecache_1","schemaHash_1","requestPipeline_1","apollo_server_env_1","apollo_tools_1","runHttpQuery_1","isNodeLike_1","determineApolloConfig_1","plugin_1","internalPlugin_1","cachePolicy_1","schemaManager_1","uuid","__importStar","UnboundedCache_1","NoIntrospection","context","Field","node","name","value","reportError","GraphQLError","UnreachableCaseError","Error","constructor","val","recommendedCsrfPreventionRequestHeaders","ApolloServerBase","config","graphqlPath","requestOptions","Object","create","plugins","toDispose","Set","toDisposeLast","drainServers","landingPage","nodeEnv","_a","process","env","NODE_ENV","resolvers","schema","modules","typeDefs","parseOptions","introspection","gateway","apollo","stopOnTerminationSignals","mocks","mockEntireSchema","documentStore","csrfPrevention","logger","loglevelLogger","default","getLogger","debug","setLevel","levels","DEBUG","INFO","apolloConfig","determineApolloConfig","csrfPreventionRequestHeaders","undefined","_b","requestHeaders","isDev","serverlessFramework","noIntro","validationRules","concat","cache","InMemoryLRUCache","UnboundedCache","persistedQueries","warn","apqCache","apqOtherOptions","PrefixingKeyValueCache","APQ_CACHE_PREFIX","ensurePluginInstantiation","state","phase","schemaManager","SchemaManager","schemaDerivedDataProvider","generateSchemaDerivedData","apiSchema","maybeAddMocksToConstructedSchema","constructSchema","_start","catch","e","logStartupError","start","barrier","executor","add","stop","schemaDerivedData","getSchemaDerivedData","service","schemaHash","taggedServerListeners","Promise","all","map","plugin","serverListener","serverWillStart","installedImplicitly","isImplicitlyInstallablePlugin","__internal_installed_implicitly__","filter","maybeTaggedServerListener","forEach","schemaDidLoadOrUpdate","onSchemaLoadOrUpdate","GatewayIsTooOldError","join","serverWillStops","flatMap","l","serverWillStop","length","drainServerCallbacks","drainServer","taggedServerListenersWithRenderLandingPage","renderLandingPage","maybeRegisterTerminationSignalHandlers","error","resolve","signals","receivedSignal","signalHandler","signal","exit","kill","pid","on","removeListener","_ensureStarted","ensureStarted","assertStarted","methodName","err","message","errors","buildServiceDefinition","augmentedTypeDefs","Array","isArray","makeExecutableSchema","addMocksToSchema","preserveResolvers","generateSchemaHash","v4","stopError","call","dispose","userPlugins","alreadyHavePluginWithInternalId","id","some","p","pluginIsInternal","__internal_plugin_id__","push","ApolloServerPluginCacheControl","alreadyHavePlugin","key","graphRef","unshift","ApolloServerPluginUsageReporting","enabledViaEnvVar","APOLLO_SCHEMA_REPORTING","options","ApolloServerPluginSchemaReporting","ApolloServerPluginInlineTrace","__onlyIfSchemaIsFederated","ApolloServerPluginLandingPageLocalDefault","ApolloServerPluginLandingPageProductionDefault","graphQLServerOptions","integrationContextArgument","executeOperation","request","cloneObject","requestCtx","query","print","metrics","response","http","headers","Headers","overallCachePolicy","newCachePolicy","processGraphQLRequest","getLandingPage","exports"],"sourceRoot":"","sources":["../src/ApolloServer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}