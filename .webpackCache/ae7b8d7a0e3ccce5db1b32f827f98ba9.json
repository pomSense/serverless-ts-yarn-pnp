{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = undefined && undefined.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stopper = void 0;\nconst https_1 = __importDefault(require(\"https\"));\nclass Stopper {\n  constructor(server) {\n    this.server = server;\n    this.requestCountPerSocket = new Map();\n    this.stopped = false;\n    server.on(server instanceof https_1.default.Server ? 'secureConnection' : 'connection', socket => {\n      this.requestCountPerSocket.set(socket, 0);\n      socket.once('close', () => this.requestCountPerSocket.delete(socket));\n    });\n    server.on('request', (req, res) => {\n      var _a;\n      this.requestCountPerSocket.set(req.socket, ((_a = this.requestCountPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) + 1);\n      res.once('finish', () => {\n        var _a;\n        const pending = ((_a = this.requestCountPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) - 1;\n        this.requestCountPerSocket.set(req.socket, pending);\n        if (this.stopped && pending === 0) {\n          req.socket.end();\n        }\n      });\n    });\n  }\n  async stop(stopGracePeriodMillis = Infinity) {\n    let gracefully = true;\n    await new Promise(resolve => setImmediate(resolve));\n    this.stopped = true;\n    let timeout = null;\n    if (stopGracePeriodMillis < Infinity) {\n      timeout = setTimeout(() => {\n        gracefully = false;\n        this.requestCountPerSocket.forEach((_, socket) => socket.end());\n        setImmediate(() => {\n          this.requestCountPerSocket.forEach((_, socket) => socket.destroy());\n        });\n      }, stopGracePeriodMillis);\n    }\n    const closePromise = new Promise(resolve => this.server.close(() => {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      resolve();\n    }));\n    this.requestCountPerSocket.forEach((requests, socket) => {\n      if (requests === 0) socket.end();\n    });\n    await closePromise;\n    return gracefully;\n  }\n}\nexports.Stopper = Stopper;","map":{"version":3,"mappings":"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","names":["https_1","__importDefault","require","Stopper","constructor","server","requestCountPerSocket","Map","stopped","on","default","Server","socket","set","once","delete","req","res","_a","get","pending","end","stop","stopGracePeriodMillis","Infinity","gracefully","Promise","resolve","setImmediate","timeout","setTimeout","forEach","_","destroy","closePromise","close","clearTimeout","requests","exports"],"sourceRoot":"","sources":["../../../src/plugin/drainHttpServer/stoppable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}