{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JOIN_VERSIONS = exports.JoinSpecDefinition = exports.joinIdentity = void 0;\nconst graphql_1 = require(\"graphql\");\nconst coreSpec_1 = require(\"./coreSpec\");\nconst definitions_1 = require(\"./definitions\");\nconst knownCoreFeatures_1 = require(\"./knownCoreFeatures\");\nconst utils_1 = require(\"./utils\");\nexports.joinIdentity = 'https://specs.apollo.dev/join';\nfunction sanitizeGraphQLName(name) {\n  const alphaNumericUnderscoreOnly = name.replace(/[\\W]/g, '_');\n  const noNumericFirstChar = alphaNumericUnderscoreOnly.match(/^\\d/) ? '_' + alphaNumericUnderscoreOnly : alphaNumericUnderscoreOnly;\n  const noUnderscoreNumericEnding = noNumericFirstChar.match(/_\\d+$/) ? noNumericFirstChar + '_' : noNumericFirstChar;\n  const toUpper = noUnderscoreNumericEnding.toLocaleUpperCase();\n  return toUpper;\n}\nclass JoinSpecDefinition extends coreSpec_1.FeatureDefinition {\n  constructor(version, minimumFederationVersion) {\n    super(new coreSpec_1.FeatureUrl(exports.joinIdentity, 'join', version), minimumFederationVersion);\n  }\n  isV01() {\n    return this.version.equals(new coreSpec_1.FeatureVersion(0, 1));\n  }\n  addElementsToSchema(schema) {\n    const joinGraph = this.addDirective(schema, 'graph').addLocations(graphql_1.DirectiveLocation.ENUM_VALUE);\n    joinGraph.addArgument('name', new definitions_1.NonNullType(schema.stringType()));\n    joinGraph.addArgument('url', new definitions_1.NonNullType(schema.stringType()));\n    const graphEnum = this.addEnumType(schema, 'Graph');\n    const joinFieldSet = this.addScalarType(schema, 'FieldSet');\n    const joinType = this.addDirective(schema, 'type').addLocations(graphql_1.DirectiveLocation.OBJECT, graphql_1.DirectiveLocation.INTERFACE, graphql_1.DirectiveLocation.UNION, graphql_1.DirectiveLocation.ENUM, graphql_1.DirectiveLocation.INPUT_OBJECT, graphql_1.DirectiveLocation.SCALAR);\n    if (!this.isV01()) {\n      joinType.repeatable = true;\n    }\n    joinType.addArgument('graph', new definitions_1.NonNullType(graphEnum));\n    joinType.addArgument('key', joinFieldSet);\n    if (!this.isV01()) {\n      joinType.addArgument('extension', new definitions_1.NonNullType(schema.booleanType()), false);\n      joinType.addArgument('resolvable', new definitions_1.NonNullType(schema.booleanType()), true);\n      if (this.version >= new coreSpec_1.FeatureVersion(0, 3)) {\n        joinType.addArgument('isInterfaceObject', new definitions_1.NonNullType(schema.booleanType()), false);\n      }\n    }\n    const joinField = this.addDirective(schema, 'field').addLocations(graphql_1.DirectiveLocation.FIELD_DEFINITION, graphql_1.DirectiveLocation.INPUT_FIELD_DEFINITION);\n    joinField.repeatable = true;\n    const graphArgType = this.version >= new coreSpec_1.FeatureVersion(0, 3) ? graphEnum : new definitions_1.NonNullType(graphEnum);\n    joinField.addArgument('graph', graphArgType);\n    joinField.addArgument('requires', joinFieldSet);\n    joinField.addArgument('provides', joinFieldSet);\n    if (!this.isV01()) {\n      joinField.addArgument('type', schema.stringType());\n      joinField.addArgument('external', schema.booleanType());\n      joinField.addArgument('override', schema.stringType());\n      joinField.addArgument('usedOverridden', schema.booleanType());\n    }\n    if (!this.isV01()) {\n      const joinImplements = this.addDirective(schema, 'implements').addLocations(graphql_1.DirectiveLocation.OBJECT, graphql_1.DirectiveLocation.INTERFACE);\n      joinImplements.repeatable = true;\n      joinImplements.addArgument('graph', new definitions_1.NonNullType(graphEnum));\n      joinImplements.addArgument('interface', new definitions_1.NonNullType(schema.stringType()));\n    }\n    if (this.version >= new coreSpec_1.FeatureVersion(0, 3)) {\n      const joinUnionMember = this.addDirective(schema, 'unionMember').addLocations(graphql_1.DirectiveLocation.UNION);\n      joinUnionMember.repeatable = true;\n      joinUnionMember.addArgument('graph', new definitions_1.NonNullType(graphEnum));\n      joinUnionMember.addArgument('member', new definitions_1.NonNullType(schema.stringType()));\n      const joinEnumValue = this.addDirective(schema, 'enumValue').addLocations(graphql_1.DirectiveLocation.ENUM_VALUE);\n      joinEnumValue.repeatable = true;\n      joinEnumValue.addArgument('graph', new definitions_1.NonNullType(graphEnum));\n    }\n    if (this.isV01()) {\n      const joinOwner = this.addDirective(schema, 'owner').addLocations(graphql_1.DirectiveLocation.OBJECT);\n      joinOwner.addArgument('graph', new definitions_1.NonNullType(graphEnum));\n    }\n    return [];\n  }\n  allElementNames() {\n    const names = ['graph', 'Graph', 'FieldSet', '@type', '@field'];\n    if (this.isV01()) {\n      names.push('@owner');\n    } else {\n      names.push('@implements');\n    }\n    return names;\n  }\n  populateGraphEnum(schema, subgraphs) {\n    const sanitizedNameToSubgraphs = new utils_1.MultiMap();\n    for (const subgraph of subgraphs) {\n      const sanitized = sanitizeGraphQLName(subgraph.name);\n      sanitizedNameToSubgraphs.add(sanitized, subgraph);\n    }\n    const subgraphToEnumName = new Map();\n    for (const [sanitizedName, subgraphsForName] of sanitizedNameToSubgraphs) {\n      if (subgraphsForName.length === 1) {\n        subgraphToEnumName.set(subgraphsForName[0].name, sanitizedName);\n      } else {\n        for (const [index, subgraph] of subgraphsForName.entries()) {\n          subgraphToEnumName.set(subgraph.name, `${sanitizedName}_${index + 1}`);\n        }\n      }\n    }\n    const graphEnum = this.graphEnum(schema);\n    const graphDirective = this.graphDirective(schema);\n    for (const subgraph of subgraphs) {\n      const enumValue = graphEnum.addValue(subgraphToEnumName.get(subgraph.name));\n      enumValue.applyDirective(graphDirective, {\n        name: subgraph.name,\n        url: subgraph.url\n      });\n    }\n    return subgraphToEnumName;\n  }\n  fieldSetScalar(schema) {\n    return this.type(schema, 'FieldSet');\n  }\n  graphEnum(schema) {\n    return this.type(schema, 'Graph');\n  }\n  graphDirective(schema) {\n    return this.directive(schema, 'graph');\n  }\n  typeDirective(schema) {\n    return this.directive(schema, 'type');\n  }\n  implementsDirective(schema) {\n    return this.directive(schema, 'implements');\n  }\n  fieldDirective(schema) {\n    return this.directive(schema, 'field');\n  }\n  unionMemberDirective(schema) {\n    return this.directive(schema, 'unionMember');\n  }\n  enumValueDirective(schema) {\n    return this.directive(schema, 'enumValue');\n  }\n  ownerDirective(schema) {\n    return this.directive(schema, 'owner');\n  }\n  get defaultCorePurpose() {\n    return 'EXECUTION';\n  }\n}\nexports.JoinSpecDefinition = JoinSpecDefinition;\nexports.JOIN_VERSIONS = new coreSpec_1.FeatureDefinitions(exports.joinIdentity).add(new JoinSpecDefinition(new coreSpec_1.FeatureVersion(0, 1))).add(new JoinSpecDefinition(new coreSpec_1.FeatureVersion(0, 2))).add(new JoinSpecDefinition(new coreSpec_1.FeatureVersion(0, 3), new coreSpec_1.FeatureVersion(2, 0)));\n(0, knownCoreFeatures_1.registerKnownFeature)(exports.JOIN_VERSIONS);","map":{"version":3,"mappings":"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","names":["graphql_1","require","coreSpec_1","definitions_1","knownCoreFeatures_1","utils_1","exports","joinIdentity","sanitizeGraphQLName","name","alphaNumericUnderscoreOnly","replace","noNumericFirstChar","match","noUnderscoreNumericEnding","toUpper","toLocaleUpperCase","JoinSpecDefinition","FeatureDefinition","constructor","version","minimumFederationVersion","FeatureUrl","isV01","equals","FeatureVersion","addElementsToSchema","schema","joinGraph","addDirective","addLocations","DirectiveLocation","ENUM_VALUE","addArgument","NonNullType","stringType","graphEnum","addEnumType","joinFieldSet","addScalarType","joinType","OBJECT","INTERFACE","UNION","ENUM","INPUT_OBJECT","SCALAR","repeatable","booleanType","joinField","FIELD_DEFINITION","INPUT_FIELD_DEFINITION","graphArgType","joinImplements","joinUnionMember","joinEnumValue","joinOwner","allElementNames","names","push","populateGraphEnum","subgraphs","sanitizedNameToSubgraphs","MultiMap","subgraph","sanitized","add","subgraphToEnumName","Map","sanitizedName","subgraphsForName","length","set","index","entries","graphDirective","enumValue","addValue","get","applyDirective","url","fieldSetScalar","type","directive","typeDirective","implementsDirective","fieldDirective","unionMemberDirective","enumValueDirective","ownerDirective","defaultCorePurpose","JOIN_VERSIONS","FeatureDefinitions","registerKnownFeature"],"sourceRoot":"","sources":["../src/joinSpec.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}