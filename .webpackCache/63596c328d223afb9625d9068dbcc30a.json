{"ast":null,"code":"\"use strict\";\n\nconst {\n  getRequestValuesFromEvent,\n  getMultiValueHeaders\n} = require('../utils');\nconst getRequestValuesFromApiGatewayEvent = ({\n  event\n}) => getRequestValuesFromEvent({\n  event\n});\nfunction getResponseToApiGateway({\n  statusCode,\n  body,\n  headers,\n  isBase64Encoded\n}) {\n  const multiValueHeaders = getMultiValueHeaders({\n    headers\n  });\n  const transferEncodingHeader = multiValueHeaders['transfer-encoding'];\n\n  // chunked transfer not currently supported by API Gateway\n  if (transferEncodingHeader && transferEncodingHeader.includes('chunked')) {\n    multiValueHeaders['transfer-encoding'] = transferEncodingHeader.filter(headerValue => headerValue !== 'chunked');\n  }\n  return {\n    statusCode,\n    body,\n    multiValueHeaders,\n    isBase64Encoded\n  };\n}\nmodule.exports = {\n  getRequest: getRequestValuesFromApiGatewayEvent,\n  getResponse: getResponseToApiGateway\n};","map":{"version":3,"names":["getRequestValuesFromEvent","getMultiValueHeaders","require","getRequestValuesFromApiGatewayEvent","event","getResponseToApiGateway","statusCode","body","headers","isBase64Encoded","multiValueHeaders","transferEncodingHeader","includes","filter","headerValue","module","exports","getRequest","getResponse"],"sources":["/Users/pom/Code/serverless-ts-yarn-pnp/.yarn/cache/@vendia-serverless-express-npm-4.10.4-2e67e59920-f33d3f0f08.zip/node_modules/@vendia/serverless-express/src/event-sources/aws/api-gateway-v1.js"],"sourcesContent":["const { getRequestValuesFromEvent, getMultiValueHeaders } = require('../utils')\n\nconst getRequestValuesFromApiGatewayEvent = ({ event }) => getRequestValuesFromEvent({ event })\n\nfunction getResponseToApiGateway ({\n  statusCode,\n  body,\n  headers,\n  isBase64Encoded\n}) {\n  const multiValueHeaders = getMultiValueHeaders({ headers })\n  const transferEncodingHeader = multiValueHeaders['transfer-encoding']\n\n  // chunked transfer not currently supported by API Gateway\n  if (transferEncodingHeader && transferEncodingHeader.includes('chunked')) {\n    multiValueHeaders['transfer-encoding'] = transferEncodingHeader.filter(headerValue => headerValue !== 'chunked')\n  }\n\n  return {\n    statusCode,\n    body,\n    multiValueHeaders,\n    isBase64Encoded\n  }\n}\n\nmodule.exports = {\n  getRequest: getRequestValuesFromApiGatewayEvent,\n  getResponse: getResponseToApiGateway\n}\n"],"mappings":";;AAAA,MAAM;EAAEA,yBAAyB;EAAEC;AAAqB,CAAC,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE/E,MAAMC,mCAAmC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAKJ,yBAAyB,CAAC;EAAEI;AAAM,CAAC,CAAC;AAE/F,SAASC,uBAAuBA,CAAE;EAChCC,UAAU;EACVC,IAAI;EACJC,OAAO;EACPC;AACF,CAAC,EAAE;EACD,MAAMC,iBAAiB,GAAGT,oBAAoB,CAAC;IAAEO;EAAQ,CAAC,CAAC;EAC3D,MAAMG,sBAAsB,GAAGD,iBAAiB,CAAC,mBAAmB,CAAC;;EAErE;EACA,IAAIC,sBAAsB,IAAIA,sBAAsB,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACxEF,iBAAiB,CAAC,mBAAmB,CAAC,GAAGC,sBAAsB,CAACE,MAAM,CAACC,WAAW,IAAIA,WAAW,KAAK,SAAS,CAAC;EAClH;EAEA,OAAO;IACLR,UAAU;IACVC,IAAI;IACJG,iBAAiB;IACjBD;EACF,CAAC;AACH;AAEAM,MAAM,CAACC,OAAO,GAAG;EACfC,UAAU,EAAEd,mCAAmC;EAC/Ce,WAAW,EAAEb;AACf,CAAC"},"metadata":{},"sourceType":"module"}